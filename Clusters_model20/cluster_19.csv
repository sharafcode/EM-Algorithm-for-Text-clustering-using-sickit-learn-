X1,file_name,category,text,recommendations
17,training-dataset/business/830.txt,business,Advice for New Managers   The MacroAaron Epstein is the cofounder of Creative Market   One of the most difficult things about starting a company is that you have to create both a product that people love and a company where people want to work at the same time  It s usually not enough to just have a great product  or just be a great place to work  because great people build great products  and great people won t tolerate a bad environment for very long   People leave managers  not companies  yet while most founders are obsessive about trying to build a product that people love  many first time founders raise a bunch of money and start building a team without any management experience at all   I was one of those first time founders who had to quickly learn on the job  so here s some advice I wish someone had given me when I was just beginning to grow and manage a team at Creative Market   Delegate   As a founder you re used to doing it all  and it can be scary to shed responsibilities you ve always owned  but you can t scale yourself and focus on the highest leverage opportunities until you get things off your plate  If you think you re going to have to work especially late or can t get to the things you need to in a given day  take that as a signal to delegate to your team   Create growth opportunities   Great people often care about personal growth way more than money or any other tangible benefit you could offer them  so the flip side of delegating your responsibilities is that you create opportunities for people on your team to do new things  learn  and grow  Don t hoard them all for yourself   Invest in your stars   Similar to how it s much easier to retain an existing customer than to acquire a new one  it s much easier to keep an existing star employee happy than find a new star  Go above and beyond to make sure your stars feel valued  appreciated  and rewarded   Set a high bar  Great people want to do big  meaningful things  Push your team with aggressive goals  and you might be surprised what they will accomplish   Lead by example   Teams embody the characteristics of their leaders  and the things you care about will be the things your team cares about  If you sweat the details  your team will learn to sweat the details too   Your team s success is your success   Get satisfaction and the feeling of accomplishment from the success of your team  As an individual contributor  it s easy to look back at the end of a week and feel good about all that you ve directly produced  As a manager  you re responsible for the accomplishments of your team  which can be a difficult transition for a lot of people  The advantage is that you can scale yourself and your vision   Deflect all credit and absorb all blame   Use  I  when talking about a screw up  and use  we   or better yet  specific contributors  names  when talking about successes  A little recognition goes a long way to make people feel valued   Share the big picture   It s important for people on your team to understand how their work and role fits into the big picture of the business  and why they re doing what they re doing  It ll give them a sense of purpose and motivation to understand how they re contributing to the success of the business  It s easy to take it for granted that your team is clear on this  but this is one of those things where you want to constantly make that connection   Repeat yourself often   You should feel like you sound like a broken record about the things that are important to your company   your mission  your vision  your KPIs  etc  You think about it all the time  but the people on your team don t  and most people need to hear something many times before it truly gets ingrained in their memory  You ll know you re repeating key messages enough when every single person on your team will be able to explain them to a complete stranger exactly how you would ve said it   You re in charge   It can be uncomfortable telling people what to do if you ve never done it before  But you are the leader  and everyone on your team will be looking to you for direction and guidance  so own it  People want structure and direction  so don t be afraid to use phrases like  I need   and  I want   to shape your team in your image   Focus on the What  not the How   Communicate your vision for what success looks like  to give your team a framework and goals to guide their decisions and work  It s a way for you to  be in the room  when the work gets done without micromanaging the work   Set deadlines and hold people accountable   When you give someone a task  ask  by when    then add a note to your calendar to follow up to make sure it s complete  If standards or deadlines are not being met  give direct feedback to change future behavior   Verbalize your thoughts   Simply saying things like  I m disappointed in this work  is extremely powerful in helping people directly understand where you stand  People aren t mind readers  so rather than just jumping into solutions when giving feedback  state your feelings out loud to be clear and direct   Manage for the employee   My favorite interview question for manager candidates is  How would you describe your management style    where the best possible answer is  it depends on the employee   Each person has a unique combination of experience  motivations  personality  etc  and it s up to you to take the right management approach that helps them succeed and maximizes their contribution   Understand that everyone s different   Just because you may be an achiever that s self motivated to get things done doesn t mean that everyone else on your team is  Get curious to figure out what drives and motivates each individual on your team  rather than assuming everyone s like you   Hire slow  fire fast   It s the thing everyone says and few have the discipline to do  but hiring well is the most important thing you can possibly do to positively impact your business and your team  Great people want to work with other great people  so resist the temptation to fill open positions with mediocre candidates  and don t settle  You should be thrilled about each new hire   Hire for hunger  It s great when a potential candidate walks in the door with all the skills needed to succeed in the role  but passion for your mission  business  and team will do more to drive an employee to make a big  long term impact than any specific skills they may have  Passionate employees will be quicker to teach themselves new skills too  especially as your business changes and grows   Set your team up for success   It s unfair to expect even the best people to hit the ground running on day one without being properly onboarded  As their manager  it s your responsibility to invest the time early on to set expectations  show them the ropes  teach them about your business  train them  and provide clear direction and a well defined role  Anything less will diminish their ability to succeed   Your trust should be earned   Don t just assume that new and more inexperienced team members will hit the ground running and understand your expectations from day one  Make them prove themselves first by working more closely with them and frequently reviewing their work until they ve earned your full trust   Shield your team from distractions   Provide structure  focus  and clear goals for your team to maximize their ability to execute on the strategy  They should come in to work each day knowing exactly what they re working on and exactly what they need to do  and any other distractions should be deflected to keep from derailing productivity  wasting time  and knocking the team off course   Include your team in decision making   If you ve hired great people  you d be crazy not to include them in important decisions  Define the decision making process upfront to set expectations for your team   will it be a decision by committee  will someone else on your team own the decision  or will you gather feedback to make the final call yourself  Listen to their thoughts and opinions with an open mind  make sure everyone feels heard  then decide the best course of action  It may even go against the consensus of the team  and that s ok so long as you ve defined the process and expectations up front  Even if your team disagrees with the final call  by including them in the process they will better understand the decision  feel like their opinion was valued  and be able to get on board to help support the decision going forward   A little professional tension is healthy   Differing perspectives help make teams and products better  so a little professional tension can be really valuable to help push your team to think about things in new ways  It should be net positive though  so if it s forcing too many decisions to get stuck in the mud  or if the tension moves from professional to personal  then you need to take action to eliminate it quickly before it drags down the team or blows up   Show your work   Explain your decision making process  Whenever you take a controversial action or make a difficult decision  it s especially powerful to fully explain how you arrived at that decision so your team can understand your thought process and rationale  and ultimate help support the decision   It s ok to not always know the answer   Ask questions  probe  and admit when you don t know the answer to something  There s nothing wrong with saying you ll need some time to think or learn more before making an important decision   Have consistent 1 on 1s every week   These are for the benefit of your employees  so you should let them drive the agenda each week  From your side  it s an opportunity to set aside some focused time each week to talk privately  get on the same page  and ask open ended questions like  how are things going     how are you feeling     what are your thoughts on the big news that was announced earlier this week     what s your opinion on X    etc  Prioritize these meetings in your schedule  go out of your way to keep from canceling or rescheduling them whenever possible  and your consistent time and attention will send a signal to your team that you care about their happiness   Ease the maker to manager transition   As you scale from a team of individual contributors to a more structured org  the maker to manager transition will challenge your best people  Just because someone is an outstanding individual contributor doesn t mean they ll be an outstanding manager right off the bat  because it requires a completely different set of skills and experience  And during the transition  their instinct will be to take on both their prior maker and their new manager duties   spending 75  effort on making and 75  effort on managing   a 150  workload resulting in less than 100  output in each area  Put structure in place to allow them to focus on being a manager first and foremost  and take maker duties off of their plate   Create a career path   Every 6 months  ask your employees where they want to be in their career in the next 2 3 years  Work with them to put together a plan  help them get the skills and experience they need  and guide them on a course to get there   Subscribe to The Macro newsletter to receive Startup School talks as we release them,"[17 76 1146 1030 315 1061 938 1385 1154 391 120]"
19,training-dataset/business/921.txt,business,Thoughts on building weatherproof companies   Software Is Eating the World   MediumThoughts on building weatherproof companies  it s a non stop daily grind to build your company to handle any environment  The best founder CEOs want to build long lasting  strong companies  But this isn t just a want  it s necessary  especially today as companies stay private longer   CEOs who expect their companies to be acquired as a  quick exit  aren t going to have it easy  It s especially hard for those CEOs and advisors who never had to learn how to build a full fledged  well governed company   with sustainable sales  marketing  HR  legal  customer support  accounting  and finance   without losing their sense of urgency  They  simply  needed to build a winning product  merge with a larger company  and then let others take care of the rest   This is both tough and good news for today s founders CEOs   The good news  You have a bigger opportunity than ever before to build a long lasting  fundamentally important technology company   The tough news  To do so  you must grow   personally and professionally   to a higher level than you might have experienced in your life before  Doing so means committing to building a company that can go  all the way  on its own   Below  I share some things I learned on my own journey here  When I ran SuccessFactors  we used to say  we re building the company like Lambeau Field   Lambeau Field stadium in Green Bay  Wisconsin  is the home field of the NFL Green Bay Packers  who under their coach Vince Lombardi were known for their winning streak and ability to grab crucial wins even in the worst snow  because their team was built to handle tough weather conditions    When you are building for long term   as opposed to a quick exit   it becomes obvious very quickly that you ll have to make very different decisions  on every level from hiring and culture to how you treat sales and customers  You need to test every decision that s obviously meant for immediate results with  will it also strengthen us in the long term    Successful companies are bought  not sold  Even if your company does end up getting acquired  building your company well is the best you can do for the price you get  When we negotiated selling SuccessFactors for 11X revenues  which at the time was the highest multiple on sales in a decade   if we didn t like where the value or discussions were going  we knew we could just stop negotiations and keep on building the company  And we weren t bluffing  which you cannot fake  Because good companies are bought   not sold   Just as a dog can smell fear  any experienced M A team can smell a mile off if you want to sell your company  and consequently the price goes down  If you are not selling  and you have the power to stay independent because you are well built and can handle  bad weather   you can hold out longer than the acquirer  and the price of your company goes up to what you know it s worth   So how do you build such scale  without shortcuts  To start  there are at least five areas I believe a founder must focus on   Learn how to learn fast Build a culture that will sustain the company through good times and bad Build a real board of directors   and use it Build the right meeting cadence Kill the monsters of the mind  1  Learn how to learn fast  The faster your company grows  the faster you are faced with not knowing what to do as CEO  And it doesn t get any easier with time  The challenges just become bigger  and keep coming  Since many founders with the biggest ideas have little experience building large companies  here are some thoughts on what to do   Develop a perpetual  aggressively help seeking mindset  This isn t just some self help clich   This is about waking up every day and asking yourself   What don t I know  and who can teach it to me   And then finding an advisor  board member  executive  employee  coach  customer  or anyone else who has the knowledge you need  This sounds obvious and easy to do  but most founders shy away from it because it makes them feel insecure   When you ve been good at everything your whole life   and in fact part of the drive behind starting your own company means wanting to do things in your worldview   asking for help does not come naturally  But you must put your fears and ego aside if you hope to learn quickly  Learning as you go  at regular speed  will cost you and the company   Know that you can t run your large company the way you ran your small company  It s not as fun as running a small 10 person company   where everyone fits into a single kitchen and knows what everyone else is working on   as it is to run a 1 000 person company   Running a company of scale is so foreign and alienating at first  which is why it s worth focusing on head on  And it can be fun in different ways  there are many amazing things you get to do at the 1 000 level company you could never do at the smaller level  But there are many boring yet extremely necessary elements to getting to that rewarding place  Accepting and not fighting the fact that you must embrace the systems  people  and processes required to run your large organization is one huge step  Especially because that s one the ways of getting 1 000 people on the same page  motivating them  behaving with integrity  and getting results   The worst thing you can do is to run a big company as if it were a small company   it might feel nice and nostalgic in your head  but in reality it turns what seems fun into something miserable for everyone in every part of the business   Share and solicit constant  systemic  unequivocal feedback  One of the most counterintuitive things I learned from Jack Welch  my advisor and confidant when I was building my own CEO skills at SuccessFactors  was around performance management  He said HR was the most important role in the company  because unlike the CEO who was looking backwards  the strong VP of HR got to look forward  Jack s best line was that someone getting fired should never be a surprise to you or them   An organization that scales is an organization that learns  And creating a world class learning organization means putting in a communication framework that allows managers and employees to give each other clear feedback  whether in person or distributed workforce  on where they re killing it  where they need to improve  and how they need to develop  Not only do you owe it to people  it s worth the time and effort because then the company can scale beyond simply getting along with each other  True  it s often a pain   there are other things you d rather be doing  plus those conversations aren t easy   but luckily there are plenty of online web systems that have been developed to take the pain out  Those systems also yield powerful data that can be used for reshaping the org chart  succession planning  and compensation  This is some of the most interesting  big data  you can spawn as an organization  your management meetings will be significantly more informed and productive if that data is analyzed well and acted upon   By the way  the CEO should do this feedback process with the board too   Invest in a coach  In addition to the board and other advisors  an executive leadership coach provides a quasi formal yet safe place for the CEO to go to confidentially discuss challenges  confusions  or doubts  Though paid for by the company  the coach has no  formal  role and reporting relationship  The formality behind it is to reinforce regular and consistent meetings  just like board meetings   where the CEO gets another pillar to lean up against as well as an independent perspective on their own performance   For instance  a coach will often begin by conducting a 360 review of you with anonymous participation of the board and direct reports  This typically becomes a great catalyst for personal and professional growth that can help you take things to the next level  This is why we suggest all CEOs take on a coach early  Some say it s even a form of  work  therapy   If you just laughed scornfully at that  then you should find one immediately   you need it more than anyone   Of all the coaches I have introduced  not one has ever been fired and in fact are loved by their CEOs   Hire the domain expertise that you need fast  before it s too late   Most technical founders don t know as much about sales  marketing  legal  finance  human resources  and other critical company functions  And while smart enough to learn  they absolutely do not have the time to do so  Learning all those functions yourself would mean a competitor would overtake you  or you would lose the company  The time required to bring executive hires up to speed  if they have the right attitude  is far outweighed by the immediate impact they can have in leadership  structure  insights  clock speed  experience  and ability to grow the functions that together make up   and scale   the company   So whether you re a technical founder or not  you must build a world class executive team  Because this means bringing in people who know how to do what you do not  you will likely feel fear  which will be exacerbated by your co founders and early hires sharing concerns that those new hires  aren t a cultural fit  and so on  Especially since none of you have the intimacy with these people that you have with each other  This is partly true  Some will be a cultural fit and others won t directly be  but either way it s a good thing to drive diversity this way   Part of the issue is control  Most founder CEOs want total control  because that s how they got to where they are in the first place  and they have a super high standard for themselves and the quality of the work they want done  They are not sure that if they give control to others  it will get done to their values and standards  the thinking goes   Then I d rather have done it myself in the first place   I understand that   and believe there are many great things that come from that instinct   but you cannot build a lasting company without help and without giving up some of the power  So you need to make a choice   Don t just promote from within  Get beyond your fear of hiring different people  Another big emotional block I dealt with in my startup was the idea that we were only true to our disruptive roots and soul as a company if we promoted from within  because the early people are the  real  people with the real  edge   The corollary of this was  all these new people with their big resumes don t understand our company and its culture   Had I hired big resumes that failed spectacularly  Oh yes  But I also had early employees that destroyed value  and stayed in the role way too long  Sometimes so badly that 10x engineers left because they didn t respect the leader   The problem is three fold   First  how can you know what to hire when you haven t ever seen what the best in class for that role actually looks like  The best way is to meet a lot of candidates  build a framework  and test it quickly   Second  most of the big resume people who failed simply were not integrated well enough  There s no excuse for that  you need to take the time to let the organization absorb the new transplant  Obviously  some just don t work and then you need to take action swiftly   Third  don t hire for  look and feel   Make up your mind about what you actually need and hire that person  which is often not the person with the amazing resume from the amazing company with the amazing education  If you do find a fire breather that gets your company and has some great experience  then ask yourself what s holding you back beyond fear  In most cases it s fear of change   The idea that you need to target a certain age  certain culture  certain schools  and certain background is totally broken to me  it s a commitment to non diversity  You need to be all in on getting the best combination of raw brain power  work ethic  and willingness to fight for your mission   and that also includes finding and hiring for true domain expertise   2  Build a culture that will sustain the company through good times and bad  A company s culture comes from the CEO  It cannot be delegated  but it also cannot be ignored   Culture is the most important thing you do as CEO  If it s not what you truly believe and want your company to be  your employees will never adopt it  If you do not define how your company does business  how its people behave  how you treat each other and your customers  it will be defined for you  The problem with that approach is that a  crowdsourced   unmanaged culture has a way of drifting to the lowest common denominator   You need to defend culture as rigorously as you defend your marketshare and the product experience  As AirBNB CEO and co founder Brian Chesky describes here  a  fucked up  culture doesn t have to be inevitable when you get to a certain size  You don t just have to defend it  you can build it  Especially if you define   and operationalize   culture as Chesky does   a shared way of doing something with passion    Deciding on meaningful and easy to relate to values   especially  NO assholes   It seems so cheezy to write values down  It s not  It s an exercise that requires clarity and discipline  The funniest challenge I get when pushing for writing down values and putting them up on the wall is the comment  no one read the values in my last company  they sucked and it was such a joke    Well hell  then don t write down values people don t care about and don t remember  If you can t remember or recite those values yourself  then you need to go back to work  If the values you wrote feel too corporate ese and not connected  that s your fault  go back to work on them again  and write them in plain language  You can have some fun with the values  but they must resonate  and it s serious business   At SuccessFactors our first value was  Respect for the Individual  No Assholes   But as we grew bigger  some of our customers were the largest companies in the world  and they felt insulted by this language  So out of respect to those customers  voices we changed  assholes  to  jerks   as described in this case story by Stanford professor Bob Sutton    The values are not just essential for the organization and every new hire  many times in tough situations I would look to our values   distilled here by one of our VPs of HR   for guidance  They withstood the test of time   Example values  Although the culture must come from you  here are a few examples I found useful in building Success Factors   Kaizen or continual improvement  How can you fix what s wrong if you don t know what s wrong  So make hearing and sharing bad news   something which seems painful at first   a wonderful and rewarded thing  Every company has something wrong and every time someone shares that something broken  the company gets just a little bit better  Borrowing from the continual improvement concept most famously used by Toyota  we called this process a  kaizen    It becomes stunningly disarming to give this perpetual pursuit of perfection a name  No matter how hard our colleagues had worked  or how well we had done  we always were able to say  what s the kaizen moment here   so no one would have their feelings hurt when we sought a better way  It allowed us to be excited about being better always  and at every single moment in the company do more for customers and stand out in the marketplace   To this day  I believe that cultural value is one of the reasons SuccessFactors outperformed its competitors and most tech stocks as a public company   Gratitude and respect  A company that is truly grateful to the people in all of the constituencies it works with   investors  customers  partners  each other   will almost always be a great company and a great place to work  Honestly  with the things people achieve in disruptive tech companies  it shouldn t be hard to find real things to thank people for  Teach your company to value and respect the people that you work with   Along these lines  it s clearly important to respect customers too  Everyone knows intellectually that if their customers don t succeed  their business will fail  But have they really put that into practice as part of their culture  There s a lot of literature out there about putting your employees first  the way Southwest Airlines did   as a way to take care of your customers  But which comes first  I think it s an irrelevant debate  The key is that customer and employees are at the heart of everything  and without treating both with accountability and care  you can forget about building a great  lasting company   Humanity and humility   build trust by daring to show you re human  My biggest learning in business is around daring to be human  Basically  how powerful it is to revealing your personal vulnerabilities  work on them openly  and connect with your colleagues in a real way  This article shares my stories and views here well   What I would add is this  Always remember that the purpose of your company is to serve others  not your ego  If you need some conviction on this point  it s like a friend of mine  who was a world champion in taekwondo  said   I can promise you that no matter how good and successful you are  there s always someone who can come kick your ass    While the business leaders I admire today are confident in their personal convictions and do things that defy the norms   and I condone that individuality and freedom   most of them have a humility about their success and the role they play in the greater world   3  Build a real board of directors   and use it  Most entrepreneurs by definition want to do things in new ways  and so it s easy to think of your board as a necessary bureaucratic evil  In reality  your board is your last line of defense between you and self delusion  bankruptcy  and perhaps even jail  The bigger you get  the more likely that a weak board will let you cross those lines  So  build a real board of directors  Here are some ways to do that   Expand the board early  It s very comfortable to keep your startup small  Typical boards consist simply of venture capitalists and the founders  This is a bad idea  Going back to my earlier point about learning fast  one of the best ways to learn fast is to put people who you can learn from on your board  I recently hosted a panel with three very different CEOs in very different industries  all of them with recent  1B   sales of their companies  and each of them had added non VC directors in their first  second  and third years of building the business  I highly recommend it  Some VCs don t like it  but you have to expand the board early  and carefully   Your criteria should be people who really care about the company and want to help the CEO and company  yet are 100  independent as well  Aim for 1 2 outside directors early in a company s life  before it reaches  10M  and then 3 4 outside directors when you re above  10M in sales  In my own case  my criteria for getting outside directors was that I did not know them personally or from prior business  Some later became friends  but none were when they started on the board   Besides expanding the CEO s horizons and challenging everyone else  the  insiders   on the board  these  outside  directors can show the company new strategic angles  Many companies wait until the company is ready to go public and end up rushing it then because it is required to have outside directors on several committees  At SuccessFactors  the board made us a lot more professional  and helped us put a lot of the necessary structure and controls in place  But more than that  they helped raise the bar  contributed very different views that were helpful  and provided input that inspired some of the most important things we did   Have discipline around board meetings  It s a red flag for me when a CEO asks if the board can move the date of the board meeting until results are better   I don t recommend anyone ever cancel the board meeting for any reason  except personal emergencies  In any size company  the board meetings always become a forcing function for the CEO and management to take a much needed snapshot of the business and get real as to the status of the company  It s not just a test though   the board can help you think about and help figure out the biggest challenges you have  confidentially   Have real board meetings by having real data  The metrics and data for board meetings begins with the financials  revenue  growth  gross margins  profits  etc  The data must be presented honestly with year over year comparisons and performance against plan  One of the biggest mistakes CEOs can make is constantly changing this data as the business changes   which is fine   but doing so without showing continuity over time   which isn t fine   including why those changes happened  This is the only way a board can help keep things  real    The data will also be 20X more productive if sent out at least three days before the board meeting  That s always a challenge because the business changes down to the last minute  but the value of having the board members have these materials in advance far outweighs the last minute changes   Finally  beyond the financial data  you should discuss culture development and voluntary and involuntary churn of people  by function  gender  geography  etc  The longer the period you use as benchmarks and trendlines  the more insights everyone can give on what s happening to the business   This becomes extra important when you add multiple business lines and multiple geographies  SuccessFactors  products were used in over 120 countries  and looking at how sales developed over time comparatively gave us great insights in how attractive the markets were   Give the board more than just your filter and version of things  You should make sure that each major function presents a deep dive of their area to the board at least once a year   Not only is it important for the board to see and  feel  the quality of the team you spend most of your time with  but they can help evaluate and share where they see strengths  weaknesses  and opportunities  True  they will never know a fraction of what you will  but they can give you good insights you were too occupied or too close to observe   Closed board sessions with and without the CEO  When I first experienced two different closed sessions   one without the management team  and one without the CEO   I was a bit shocked at how helpful and revealing they were  In the former  it s a much safer environment for the board to ask you about your team  and for you to ask them how the board meeting went  The latter  meanwhile  gives the board confidence in you  the ability to talk freely without worrying about hurting anyone s feelings  and a chance to speak up without worrying about the CEO s interpretation   All of this helps ensure a board dynamic that is open  honest  and deals with the real issues of the business   4  Build the right meeting cadence  Meetings suck  I m the first one to say that while big companies are in meetings your competition is out in the field kicking your ass  Plenty has been written about killing meeting culture  Much of that is useful   there s no need for unnecessary meetings   but I m here to tell you that you should embrace them too  Especially regular meetings with key stakeholders who will help your company scale  all the way from the board to the customers   1 1s with board members  Guess what  you can meet your board members outside of board meetings  But I don t believe in meeting them beforehand to  presell    warn   or  get them on the same page   except for some particularly sensitive topics that could derail the board meeting   So why have a board meeting if you ve already had it   If you have found the right board members  you will want to update them on the business and let them challenge you  This will not only make you sharper and able to call out your own bullshit  it will help you course correct faster if you re heading down a tricky or sticky path   Management meetings  Management meetings can feel frustrating when all you want to do is just be out there building or selling the product and otherwise helping the company get ahead   So instead of having  update  meetings  make them about topics that are critical to the company s survival or focused on fixing the bad news from kaizen sessions  You will also find that your leaders can never get enough of hearing your latest musings and perspectives on the company s trajectory and issues  They feel connected and will disseminate the message effectively to their team members   At SuccessFactors  we would start management meetings by reviewing our core aggregate target metrics  by exception  Then  I made the meetings mostly about customer success  renewals  and net promoter scores because to me  those provided the most concrete lens from which everything else emanated  product issues  market disruption  sales challenges  morale  and more   1 1s with direct reports and skip level management  Two ears  one mouth   More than anything  this one seems bureaucratic and time consuming  because  I meet them all the time anyway and discuss important things   But it s not about you   it s as much  if not more  about them  The saying  people are born with two ears and one mouth  comes to mind here because the best managers I know spend most of the time with their direct reports in 1 1s asking them what they think and listening to their issues  instead of talking at them   On another note  telling your direct reports that you want to spend time with their leaders alone is a very powerful insight on your ability to run the business well  In an open  honest culture  your executives should be proud to have you talk directly with their team  And if they have done a great job building their function  their direct reports will often talk about them effusively and supportively   Regular interactions with customers  A culture is as much about its customers as it is about its employees  And in the decade  since I incorporated and led SuccessFactors  the most powerful and surprising data came from meeting face to face with customers   Even if you re on top in the Gartner Quadrant  as we were for ability to execute and product strength   your customers will give you insights as fresh as cutting a hole in the ice and jumping in  But only if you ask them honest questions to genuinely hear and learn from them  I never got tired of hearing those insights  which made us stronger  And having built the culture to deal with it openly  the rest of the company eagerly awaited honest feedback of where we needed to grow from anyone returning from the customers  We saw it as the gift that it is   5  Kill the monsters of the mind  while preserving your spirit  If you are lucky enough to have identified an idea to massively disrupt a market  you got here by believing what no one else believed  and by taking chances no one else dared  So why stop  Because it can cost you and your company  I would never want to kill off that will to power or the strength of an entrepreneur s own convictions  But here are some things to look out for so your mind is not your own worst enemy and so both you and your company can realize your full potential   Don t lie to yourself  It s easy to construct a beautiful narrative about how great the company is  because you know the company better than anyone  But just because you know the company the best doesn t mean that you aren t lying to yourself  A significant sign to watch out for is when you saw something work for a while  but there s now lots of evidence that it s broken   Since no alternate paths have been found yet  and any paths you think of seem daunting   the monsters of the mind  often make people hold off on immediately cutting their losses and forging a new path  This can happen in any part of the company  from product to sales   To keep yourself honest  use your metrics  KPIs  projections  and results to conduct frequent reality checks  If a founder often changes what he or she wants to measure  it s typically because they haven t figured out what the real problem is  There are exceptions  however  It could be that the business really has changed and the old KPIs are irrelevant  But that doesn t happen too often for a successful company  and most key metrics like new late stage pipeline generation  customer adoption  median deal size  true win loss  net new sales growth  and so on never get too old to track historically and against plan  Data is one of the best tells   Remember  the winner s mindset is a catch 22  Here s the thing  The very  will to power  qualities that make successful entrepreneurs   being obstinate  willing to defy the norms  believing the impossible  doing what no one could imagine being done  and trusting your vision over what already works for all of the incumbent  experts    is what got you to success in the beginning  It s how you got your company shot out of the cannon  got it its first media coverage  and got attention from press  venture capitalists  and hot recruits   So I would never say you should stop trusting your instincts  In fact  just when most CEOs wonder about their instincts as they re scaling is when they should trust them  But  you cannot build a Lambeau Field weatherproof company if you don t also learn to constantly gather challenges to your thinking  learn to listen and hear them  and then test those learnings out   The companies that you respect the most on the outside have gotten there by constantly ripping up their own ideas and stress testing them for relevance   whether it s Apple or Amazon  Disney or Pixar  Google or Facebook  It took building a lot of infrastructure and process while also carefully preserving the entrepreneurial spirit and mission behind the company in the first place   If there s only one thing people reading this post should take away  it s that the very mindset that drives success can backfire if you don t do this hard work  There are no shortcuts    Image via Reddit  and eMercedesBenz,"[19 1061 17 715 962 1154 1421 120 296 973 190]"
37,training-dataset/business/1095.txt,business,The Team Slide  You Had Me At HelloThis is part of our series  Pitching to Investors  that shares real examples and practical advice from the Matrix General Partners on creating your pitch deck  See intro to the series here  Five Ways to Nail Your Pitch and Win Over Investors   Our goal in this series is to help entrepreneurs nail their pitch so they can more easily communicate their incredible ideas and find the right VC partners to help them grow their businesses  We introduced the series with 5 tips on how to present to investors  because while no single slide will make or break your presentation  the way you tell your narrative will leave investors either believing in you and your company  or not  Having now crafted your narrative  we ll dive into the details of each slide   using annotated slides from real pitch decks to talk about the most important dos and don ts on each slide  We re going to share what VCs are likely thinking as you present  but not saying   In this post we ll focus on creating a great Team Slide  We realize the team slide may not seem very challenging  However  many founders  not realizing it s one of the most important slides in your presentation  throw it in as an afterthought  That s a missed opportunity  At Matrix  we focus on early stage investments  and the biggest bet we make is on you and your team we invest in people  We generally recommend your team slide come first in your presentation  My partner at Matrix  Dana Stalder  explains   We often find ourselves asking the founders to introduce the team after they ve gone through a couple pages and haven t put the team slide first  This is your opportunity to introduce yourself like you would at the beginning of any new relationship    The team slide is your chance to showcase why you are exceptional and why we should bet on your team  It s your chance to kick off the meeting with more than the standard 15 second intro  But  this slide is not as simple as it first appears  We ve seen great ones  and crash and burns  Who from your team should you include and how much do you share   There are three potential outcomes from your team slide   A positive bias  An investor sees your team as exceptional on its own and that they should invest in you almost regardless of your idea  Or  that your team is perfect for this idea and building this particular company  A neutral stance  An investor concludes that your team will not be the sole reason they would do the deal  but it s not a barring factor either  A negative bias  Your team slide makes an investor question you and your team s fit for your idea  or your ability to execute  This is most likely because they learn nothing from the slide due to a lack of information  or your team appears to be extremely homogenous or lacking relevant experience   To create a team slide that makes us excited to learn more  it should answer a few key questions   Are you a person of interest   Show us you are a founder we want to meet  that you stand out in some way that you are intelligent  driven  ethical  and that you have excelled in the things you do   Do you have a strong educational background   Have you been the top performer in your previous roles   Do you have a unique experience that makes you well suited to build this particular company   Proactively shape our impression of you by listing the education  job titles and employment history that will show us how you stand out   Do you have a strong founding team   Investors are looking for a strong and diverse team with relevant domain expertise  If you have all of these things  great  Showcase them  But  whatever team make up you re working with  play to your strengths  Put a positive spin on homogenous educational or company experience by emphasizing a super strong team dynamic  Similarly  you can counter a lack of experience by highlighting entrepreneurial spirit or accomplishments   It s helpful to give a high level breakdown of the number of people on your team and an outline of the functional areas  But  don t list all 10 people at your company down to contractors and the roommate who delivers the keg on Friday afternoons   Have you figured out with your co founders who is doing what   If you have multiple founders  your titles should indicate that you ve had a conversation about who will own what functional areas of the business  Confusion around this can be painfully clear to VCs and is a red flag  We know everyone will do some of everything at a startup  but distinction around each founder s focus shows maturity and readiness to execute   What kind of founder and CEO will you be  Are you entrepreneurial and are we a good match   Share with us more about who you are and what makes you tick  How have you gotten to where you are  What career highlights and accomplishments showcase your entrepreneurial experience  Or  if you re recently out of school  what did you do in school or on the side that shows your drive and savviness   We want to know as much about you as possible to determine whether Matrix will be a good match in helping you grow your business   says Dana Stalder  General Partner at Matrix Partners   Let s visit some real examples of team slides from early stage companies to help clarify these points  some identifying information has been anonymized     The Good   Tasteful  Inc   An engaging photo helps investors put a face to the name and helps tell your story   Complete career history shows strong background and previous success  which increases credibility   Strong educational background adds to the credibility   Remaining Questions  What exactly is this person s current title  We assume it is Founder CEO  but you need to include this information to ensure your deck stands on its own  This deck came with this type of slide for the top three team members  Multiple slides can work well when focused on your founding team but keep them focused  clearly indicate specific roles  and don t do this for the whole team     Impression Left  Positive  This is a strong founder who has deep experience in the tech field and will be able to execute in driving a team and building a business   LinkedIn   When LinkedIn s Series B deck was being pitched  Reid Hoffman wasn t the brand name he is today  but he optimized his team slide   Hoffman demonstrates an impressive background and domain expertise  As an investor in companies that are in similar spaces  he shapes your impression of him and shows off his relevant experience   Listing a team member with title  Chief of Staff  is confusing because it makes the company seem top heavy why does a startup need a Founder and a Chief of Staff  This person must be key to the organization  but it makes me wonder how so   The short vignettes for each person could be more detailed  but they do show the impressive background of each team member   Impression Left  Positive  Easy to say in hindsight  but the team piques our interest with their strong domain expertise  and each team member s relevant background contributes to the impression that they will be able to execute on this idea    OK Examples    1   Photos to humanize and familiarize the team are great   The right number of people are profiled two founders  plus additional key team members listed gives overview of the core players  but doesn t go into too much detail  which is good since we don t need background for each of these people   There is no educational experience for one of the founders  so it would be nice to have consistency  But  in this case it s not a huge deal because the team has chosen to highlight other experiences that show off relevant capabilities   Remaining Questions  What did the founders do at each of the previous companies  Even if the titles weren t super impressive  you can add a positive spin  For example  if a previous role was an internship or in a less relevant department  instead of focusing on the title  call out any entrepreneurial aspects and achievements  It s not required  but with more limited work experiences  listing your educational background  not just your MBA  will help us form a better picture of you     Impression Left  Fairly Positive  This is one of those  just another team slide  moments  We have a fairly surface level idea of who the founders are  and know that the size of the team is about right for their stage of growth  but we don t know enough to conclude exactly what kind of team they ll be  This leaves us relying on their presentation to gather more information about the team    2   They ve chosen to include the same amount of information about what could be everyone on the team  which we can t tell from this slide  The space would be better used to go deeper and really sell us on a few key executives and their achievements  This is especially true of the CEO where it matters a lot to us if they have had relevant experience to lead their company   Showing experience at big brand tech companies is a double edge sword  Certain logos tend to elicit certain responses  e g   Google  Facebook and Apple   they have a high bar for hiring  But they are all big  safe companies  We d like to see some evidence that these individuals are really entrepreneurial   Title ing the slide  The band is back together  is not a bad way to tagline  It shows the team has a shared experience  which could be good  But  when called out this way  we re left wondering if their backgrounds will be diverse enough to pull from a range of experiences when needed  This is an example of highlighting a strength and spinning it  but neglecting to address the weakness that comes with it   Impression  Just OK   We don t have enough information on the founders to make any real judgments  so this is a wasted opportunity it leaves us with more questions than answers    3   Including advisors or investors on the team slide is misleading  We want to know who is dedicated full time to your company and putting in the blood  sweat and tears  Advisors generally allocate very little time and energy compared to full time team members  so they should not be given equal space on your team slide   While advisors should not be on your team slide  Board members are a different story  The difference between board members and advisors is like the difference between a ranking and a forced ranking  Advisors can advise any number of companies  Board seats are a limited commodity and require significant time  so they are a forced ranking  By taking a seat on your board  this individual has said  I believe in this company and think they ll succeed   This is worth highlighting on a later slide   By including the size of the team in addition to the founders execs  we understand the breakdown of the company  which is helpful  But  who is are the founder s   All three people noted  or not   A redeeming factor  This slide includes some measure of achievement about each person  The CEO has a number of profitable ventures  and others have built apps  With more detail  this could get us excited   Impression Left  Not good  but not terrible   We re confused who the founders are  and we don t really care about the  notable investors  listed  This slide is on the right track  but there was a lot of space wasted    The Bad    1   The descriptions of each core team member are so brief that we re left with way more questions than answers  What is each of their roles  Who are the founders   We can see companies each person has worked at  but we have no idea what they did there or what they accomplished that would contribute to their abilities in their current roles   Educational background is so brief that not only is it not helpful  but it confuses and distracts us such that we re not focused on what the team is trying to teach us about their company   Impression Left  Negative   This is a homogeneous team who went to average to above average universities  and some of them worked at tech companies previously  The team isn t a barring factor  but they would now have more to overcome to prove they are the team to build this company  and we re not overly excited to meet them    It s worth noting that we went on to meet this team  and they are very impressive  Goes to show that there can be a big wasted opportunity in your team slide to convey how great you are    2   This is another example of information included on the team slide that is irrelevant to your team  Divorce who s funded you to date and when from the team slide  it s not answering the same questions  Previous funding is important to include  we like appendices   but it doesn t help me get to know your team better   All employees at the company are included on this slide  Unlike many of the other examples  this is too detailed  The core executive team and their awesome and interesting backgrounds are what will get me excited to work with you   Formatting as an org chart can be helpful  but this is a terrible example  The Android developer reports to the iOS developer who reports to the Sys Admin  Backend  Make it a functional org chart if you truly feel the need to include more than just a few key executives  e g   if you have a truly incredible individual contributor on your team who is worth including   Otherwise  choose a simple format that isn t going to distract   Impression Left  Negative   This slide leaves us confused  and frankly a little frustrated trying to extract information  It s disorganized  misleading  and doesn t give us relevant information on the key executives that s needed to get to know them better   Conclusion  We re planning to provide advice and examples for the rest of your pitch presentation in future posts  But we started here because the first question we always have when meeting an entrepreneur pitching their business is  why you  We know how hard it is to start and build a business  We know we ll be in this with you for years to come and working through ups and downs  So  why you  When you start with a team slide that tells us what s unique and compelling about you and your team  and when you make us believe you have what it takes to be an entrepreneur  you make us want to learn more  and that s exactly where you want to be leading into your pitch,"[37 17 1030 1385 19 1061 76 955 826 39 1241]"
39,training-dataset/business/1092.txt,business,Starting and Scaling Your Growth Team   Greylock PerspectivesStarting and Scaling Your Growth Team  I get a lot of questions about how to start and scale growth teams  Growth teams need to spend as much time thinking about how to scale themselves as they do on scaling the product  In this post  I ll outline how I ve seen growth teams start and evolve  define the ideal end state  and describe some of what you work on at each stage along the way     The first question to ask is why you need to start a growth team  Why not just have traditional product and marketing teams  It s a good question  and not well understood  Traditionally  product teams make the product  and marketing is in charge of getting people to try and continue using the product  Marketing can include traditional efforts like events  advertising  and PR  and perhaps some branding efforts and some online marketing  Of note  online marketers and traditional marketers have historically been very different  so depending on the manager  all of the budget and team allocation typically went to either online or traditional   not evenly split     However  the best startups grow super fast not because of traditional marketing or online marketing  but because they tune the product to drive growth  This is why growth teams matter  Marketing teams typically don t have access to the product roadmap to make changes to things that will impact SEO  conversion  optimization  or virality  nor the expertise to work with engineers and designers on making these changes  And product managers often prioritize new product features over engineering that will drive more people to the existing value  Growth teams are the connective tissue between product  marketing and engineering   Starting a Growth Team  Focus On One  Easier  Problem  Goal  Improve one area important to the growth of the business  Team  PM  Designer  Engineer s   Analyst Data Scientist  sometime PM or engineer assumes this role as well early on   It can be overwhelming to consider all the problems you need to solve  When you start a growth team  do not to try to solve all those problems at once  A growth team should start by going deep on one carefully chosen problem   Pick a problem the company is not currently working on  to prevent turf wars   Pick one of the easier   not harder   problems to improve  to build up credibility and drive toward early wins   Since growth teams are typically treated with a healthy dose of skepticism by other teams when they start  carefully choosing your first area of focus will help maximize the growth team s chances for success  Let s say a growth team starts with a hard problem  Trying to increase activation of new users  It takes a month to measure increases in activation rates  and it has one of the smaller sample sizes in the traditional growth area  You run an experiment  It doesn t work  You run a second  and another month goes by  and it still may or may not work  Now two months have gone by without a growth team win  People on the growth team are questioning if this is the right team to be on  and other teams in the company begin to question your purpose   Hat tip to Andy Johns from whom I am blatantly stealing this example      There are common growth problems where you can likely show quick progress  One is conversion optimization  Another is returning users via email and notifications  Still another is improving referrals or virality  These areas allow you to run multiple experiments quickly because the metrics will move immediately  they don t take time to measure like activation   and because they have high sample sizes  all new users or all existing users opted in to communication      Last note  When starting a growth team  it s important that they sit together and not with their functional team members  The collaboration between the different skill sets and short feedback loops is how the magic happens   Growing a Growth Team  Own the Growth Funnel  And Some Real Estate   Goal  Improve metrics across the growth funnel  Team  PMs  Designers  Engineers  Data Scientists Analysts  As a growth team grows  the team can start looking at multiple problems  These problems are typically across the AARRR framework by Dave McClure   however revenue is frequently a separate team in an ad supported business   The growth team separates into sub teams who have their own meetings  and entire growth team meetings become less frequent  PMs  designers  and analysts may work on multiple teams  At this point  the growth team assumes ownership of certain areas of the product  including  but not limited to    The logged out experience  which can involve both SEO and conversion  All emails and notifications  sometimes coordinating with marketing   The onboarding flow  sharing flows  et al   Owning these areas creates easy swim lanes between teams and prevents turf was with the core product team  Growth leaders have to determine how to allocate people to work on the most impactful problems across the growth stack  and if a sub team does not have enough support to make an impact  the growth leader should consider whether to support that problem at all  Growth teams also have to own goal setting  which means understanding historical performance and setting absolute goals     At this point  teams start to work on both improvements in infrastructure and experiments  For example  at Pinterest  I was managing both the acquisition and retention teams  The retention team was struggling to grow because of an unwieldy email infrastructure  The infrastructure was built to support triggered  social notifications  but our strategy had evolved to more personalized  content based recommendations  These jobs were taking days to run and would send automatically when complete  even though someone might have received a social notification five minutes before  So we spent nine months rebuilding it to allow us to scale more effectively  The retention team saw a step change in its performance and actually hit its Q1 goal in the middle of January after it was complete   Evolving a Growth Team  A Special Forces Team Operating Across Borders  Goal  Reduce friction across the product that prevents people from connecting to product s core value  Team  PMs  Designers  Engineers  Data Scientists Analysts  Researchers  Marketers  Operations  As the growth team continues to grow  it involves more stakeholders and expands its scope  Instead of having clear areas of focus separate from the core product  the team shifts to analyzing the entire product and trying to figure out the biggest obstacles that are preventing the company from growing faster  At this point  the growth team has built up enough credibility that it doesn t fight turf wars   it is laser focused on finding and solving the biggest problems that prevent people from connecting to the current value of the product     Usually  the problems at this stage are deep inside product features and go beyond improving SEO  signup  viral and on boarding flows  and sending the right emails and notifications  though growth teams still work on those too   The growth team is now identifying the friction that prevents people connecting to the core value elsewhere in the product  A lot of this work is simplifying product flows or building country specific optimizations for slower growth countries  Growth teams can also become service organizations to marketing initiatives around this time  and I ll talk about that in another post     At Pinterest  we migrated to this phase rather recently  As we started to look at friction in the entire product  we saw in qualitative research that new users were getting bombarded with so many concepts it confused them  what a Pin is  where they come from  how to add your own Pins  what a board is  group boards  profiles  etc  The growth team made a list of the core things new people needed to know to get excited and start to build an understanding of the service  Then  we started experiments to remove everything else from the new user experience and only introduce it back once the core concepts were clearly learned  This helped improve activation rates     What I described above is an amalgam of what I ve seen in the market that works best  Of course  you should always tweak your approach based on the talent of your team and your company s culture  I would love to hear what you think of this approach  and any additional insights you think would be useful to share with other growth leaders,"[1241 39 1385 1030 826 190 17 1061 115 975 116]"
47,training-dataset/business/1003.txt,business,A new team at redditLast week  Yishan Wong resigned from reddit     The reason was a disagreement with the board about a new office  location and amount of money to spend on a lease   To be clear  though  we didn t ask or suggest that he resign he decided to when we didn t approve the new office plan   We wish him the best and we re thankful for the work he s done to grow reddit more than 5x   I am delighted to announce the new team we have in place  Ellen Pao will be stepping up to be interim CEO  Because of her combination of vision  execution  and leadership  I expect that she ll do an incredible job   Alexis Ohanian  who cofounded reddit nine and a half years ago  is returning as full time executive chairman  he will transition to a part time partner role at Y Combinator   He will be responsible for marketing  communications  strategy  and community   There is a long history of founders returning to companies and doing great things  Alexis probably knows the reddit community better than anyone else on the planet  He had the original product vision for the company and I m excited he ll get to finish the job  Founders are able to set the vision for their companies with an authority no one else can   Dan McComas will become SVP Product  Dan founded redditgifts  where in addition to building a great product he built a great culture  and has already been an integral part of the reddit team I look forward to seeing him impact the company more broadly   Although my 8 days as the CEO of reddit have been sort of fun  I am happy they are coming to a close and I am sure the new team will do a far better job and take reddit to great heights  It s interesting to note that during my very brief tenure  reddit added more users than Hacker News has in total,"[47 190 19 17 1061 826 973 1030 742 1292 975]"
63,training-dataset/product/1240.txt,product,How do you keep the CEO and PM on the same page The PM Mind Meld How do you keep the CEO and PM on the same page   Do you want to kill a product  Have a CEO and product manager with different ideas for where it s going  If you re lucky  the disagreement gets resolved and things get back on track  If not  your company dies a million deaths as the power struggle gets played out in the product itself  Everybody loses  users most of all   More than anyone else at the company  it s essential that the CEO and the PM be on the same page  or in the case of a bigger company  a general manager or senior product leader   Remember the Vulcan Mind Meld from Star Trek  That s where Mr  Spock could touch someone s head and share their thoughts telepathically  Yeah  it s like that  Here s some advice for putting this into practice  without all of the face touching    Talk about the future  A good Product CEO spends most of their mental energy in the product s future  not its present  Their vision will change and evolve  and both the PM and the CEO need to stay in sync  The PM needs to keep the team aiming at this north star  Ask the CEO where the product will be in five years or ten years  the best product CEOs will treat those as two separate questions  1   2     Frequent one on ones with the CEO  Ideally the CEO and PM are meeting one on one weekly  In a smaller company  this should be easy to accomplish   And don t let anything get in their way   Regular private time allows both of you to share unformed ideas  to debate when you disagree  and for you both to share what you ve learned from your team  your customers  and the product  PMs shouldn t have to piece together the CEO s strategy from scattered pieces of cuneiform  they should hear it directly  and regularly   Find those third rails  There are certain areas of the product that the CEO will be most opinionated and passionate about  The CEO will need to be more involved in these details  Knowing where these  third rails  are will help the PM avoid surprises and front load debate before code is written   Make sure the conversation goes both ways  PMs shouldn t just be the CEO s implementation lackey  CEOs should listen as much as they talk  PMs shouldn t restrict the conversation to tactical updates on progress  but about their vision for the future too  After the mind meld you should share thoughts  but not a brain    My mind to your mind  my thoughts to your thoughts     Mr  Spock  Good Reads   I had to quit to put myself in a position to believe in myself   My friend Ellen Chisa quit Harvard Business School to join a startup  She shares her best advice about something we rarely discuss  the fine art of quitting   Saying  no  is a tool to do the few things that matter to you very well    Building your business on someone else s platform can be like strapping yourself to a rocket  but a rocket that could come crashing back to earth  Josh Elman knows platforms from his days at Facebook  Twitter  and LinkedIn  and he shares what he s learned in this presentation   Build your product to be independent  Only use the platform for acceleration     You should not torture yourself with any assumed blame   Bob Ebeling was an engineer at space shuttle contractor Morton Thiokol in 1986  With a handful of other engineers  he argued unsuccessfully that the Space Shuttle Challenger should be grounded due to risks that the O rings would fail in the freezing temperatures  To his horror  the weakened O rings ultimately claimed the lives of seven astronauts  Ebeling has carried this burden for more than 30 years  But when NPR s All Things Considered shared his story  an outpouring of support from listeners  other engineers  and his former colleagues helped him shed years of guilt  Read or listen to this remarkable segment about an engineer s redemption   How should you take notes during customer interviews  Teresa Torres shares her advice on everything from whether to record the conversation to why writing your notes by hand might be better than typing   The New York Times Magazine s entire weekend issue was dedicated to the future of work  Don t miss their article on the work life equation or what Google learned about building the perfect team   As the researchers studied the groups  however  they noticed two behaviors that all the good teams generally shared  First  on the good teams  members spoke in roughly the same proportion  a phenomenon the researchers referred to as  equality in distribution of conversational turn taking   Second  the good teams all had high  average social sensitivity    a fancy way of saying they were skilled at intuiting how others felt based on their tone of voice  their expressions and other nonverbal cues    Gross profit  not revenue is the metric companies should be using to compare themselves to others  So says Tomasz Tunguz  in Not All Revenue Dollars Are Created Equal   The higher the gross margin  the more revenue can be reinvested in growth  the less money the business must raise to grow  the less dilution incurred     I ve made some dumb purchases   There are two essential annual reads for anyone in business  Mary Meeker s Internet Trends and Warren Buffett s Shareholder Letter  If you haven t made a habit of reading Buffett s letter  which was just sent  now is a good time to start  I recommend this annotated version on Bloomberg com   Product Jobs  Subscribe to the newsletter to see these job listings   Previous newsletters,"[63 19 1292 1061 1218 190 742 826 962 116 854]"
74,training-dataset/business/768.txt,business,The Case For Startups to Put CX at Their CoreCustomers often want to call support representatives bad names  not praise them by name  Not so with WiFi system startup eero  thanks to its CEO and Co founder Nick Weaver and Head of Customer Experience  CX  Dana Lindsay  While most founders tack on customer support as an afterthought  Weaver purposely created and integrated it from the start  That meant establishing a dedicated team to gather feedback for its beta and bringing aboard eero s first CX hire at a stage when most startups are solely focused on engineering  Weaver understood that to get where it needed to go  eero needed service so superior that it rivaled its product   Delighting customers in the traditionally confusing and irritating realm of WiFi networking is more easily said than done  Luckily  every organization in Weaver s background reinforced that service is the product  Before starting and leading eero  Weaver co founded incubator StartX  worked as analyst at McKinsey and alongside startups at Menlo Ventures  Before joining eero  Lindsay trained and scaled remote teams for digital publishing platform  Inkling  She also onboarded clients and new hires to the platform   skills which accelerated her ability to define and deploy eero s Customer Experience operations   In this exclusive interview  Weaver and Lindsay share the choices and practices that have established the CX team as eero s  truth squad   From the rationale behind the name  customer experience  to the timing behind building the CX team  they give thoughtful tips on starting and scaling an often overlooked discipline  They offer tactics and a rubric that will help any young company spin up its CX team and bring a better name to technical support  Let s get started   It s Customer Experience  Not Customer Support  It s not just semantics  Customer experience is the interaction   and relationship   people have with a brand  Customer support centers on resolution to specific customer issues   We don t want to wait until we re contacted with an issue  We like to initiate the relationship with the customer as early as possible  For us  the most measurable milestone is the moment a customer purchases an eero   says Weaver   I started fixing routers in high school  so I know people often need help before they ask  If you can equip customers with what they need before they request it  you ve not only tallied a win for your support team  but also for your brand  That s why we have a customer experience   not support   team    This philosophy is baked into how eero helps customers set up  use and service the product   From start to finish  eero is designed to be set up within minutes  The instructions in the eero app don t begin with eero  but the product it s replacing  It guides customers through the process of disconnecting the old router before connecting your first eero  It advises how to find the best locations for subsequent eeros for optimal performance   says Weaver   The app allows customers to easily share WiFi passwords with guests and manage children s screen time  The system can auto update to ensure the network is performing at its best without any customer effort  Customer experience is about serving and anticipating a customer s entire experience  not just fixing pain points  The goal is the relationship   resolution to an issue is just one opportunity to strengthen it    Receipts are the first support tickets  Customers may not have asked for help yet  but the relationship has begun   Hire for CX Before You Have Customers  Most startups front load hiring engineers on their founding teams  As they build the  product  part that will lead to product market fit  they often leave it to the founders to focus on the  market  component   This is not Field of Dreams  Building it doesn t mean they ll come  Customers must be etched into the collective mentality of the team   and that s a full time job  That s why eero s second hire was Sean  Harris   our Head of Marketing   says Weaver   It seems counterintuitive to build a customer base function before you have customers  but in order to be ready to go on Day One  someone needs to be in the office making decisions about the tools  infrastructure and hiring needed for launch    At the very beginning  the first CX hire should ask   and be guided by   five main questions   How should people first experience our product   How will they buy it   How will they unbox the product and be onboarded to it   How will they receive support for it   What are the series of touchpoints they ll receive along the way   A common mistake that startups make is hiring one CX person and calling it a day   The truth is  customer experience doesn t only reflect how your customers experience your product  but also how your company experiences your customers  They re both stakeholders for CX   says Lindsay   So as Sean focused on the best tactics to reach and communicate with future customers  Nick began building a CX team focused on establishing a feedback loop between existing users and the company    It s never too early to have a customer advocate   Customer Experience Begins At Home  Eager to define the pulse of the customer  it s tempting to jump into the field with surveys  However  in eero s experience  foundational work is key and starts with getting your house in order  Here s what eero prioritized to make that happen   Use a company wide milestone to showcase what CX can do  When Lindsay joined eero just months before the company launched  she knew she had a unique opportunity to elevate CX as one of eero s most critical functions   The goal is to become the source of truth for your customer to everyone internally  It doesn t happen overnight  but a company wide inflection point   like a beta   can be an opportunity to show how CX can make big contributions to the broader team   says Lindsay   We focused on establishing ourselves as the voice the customer during our beta  We gathered  analyzed and aggregated feedback by manually tracking customer contacts and survey responses in Google spreadsheets    The CX team focused on finding answers to simple questions like   What are people asking us about   When and how are they contacting us   How happy or unhappy do they appear to be   The CX team categorized the feedback by trend and proposed recommendations for the company based on pressing themes   At the start  this is a messy  time consuming practice  But it s vital  Automated tools and numerical surveys can miss the nuances in language that convey how customers really feel   says Lindsay   But that s the insight you need to show your early users you re listening   and to demonstrate to the rest of the team that you re in the trenches with them  It wasn t long until our engineering  product and marketing colleagues would turn to us to ask   What s the pulse now  What s going on in the field     If you re going to ask for feedback  read it yourself and use it  Respect the time your customers took to share   Get more ears   and minds   on the ground  In addition to leading the charge in San Francisco  Lindsay helped eero expand the team through a call center based in Austin  Texas   Outsourcing gets a bad rap  It s because most companies see it as an opportunity for delegation not augmentation   says Lindsay   There are significant benefits to working with an experienced call center  They ve done it before  can quickly staff up or down depending on demand and can help you keep a personalized touch even as your customer base grows    The key is to stay involved  It sounds simple  but your CX leaders need to dedicate time to establishing an active partnership from the start   In the last year  I ve spent nearly two months on the ground in Austin doing check ins  running training programs and shadowing our 25 person team   says Lindsay   The byproduct is that our work together is characterized by mutual respect and partnership rather than command and control  If I suggest something that sounds good from my seat in San Francisco but doesn t make sense practically  the team knows they can and should push back     For example  when Lindsay started working with the team  she saw each member as a Swiss Army knife  versatile representatives who could resolve any problem without redirecting customers to another specialist   The team in Austin demonstrated   through their experience as well as metrics   that while a single point of contact seemed appealing  it required specialists to master too many tools and solutions to be efficient  They noted this would only become more strained as eero s products and services matured   says Lindsay   As a result  we established distinct functional roles between order management and technical support  This enabled team members to receive focused trainings and establish domain expertise    Dana Lindsay  This type of collaboration has allowed Lindsay to cut time consuming steps   and trust her team to execute   These call centers are already designed to quickly grow your team as you need added capacity  Given the relationship we ve established  our remote team will recruit  vet and interview new team members   says Lindsay   This enables me to conduct final phone interviews with promising candidates once they ve been approved by our managers in Austin  It s a significant time saver    In addition to on site visits and trainings  mind the smaller things   Our team in Texas operates like a remote eero team  so it s important that they feel that way  From company wide CX overviews to weekly meetings  our CX leads in San Francisco acknowledge and celebrate the contributions of our teammates in Austin   says Lindsay   Whenever a new Austin based team member asks  How do you do this at eero   I correct them by saying  You mean how we do this at eero   I don t want there to be an outsourcing divide  We are one CX team  That s how it s designed and we work hard to make that clear    In the weeks leading up to eero s public launch  Lindsay personally ran a training program for the entire team in Austin  Here are a few key attributes of an effective CX training   Thorough  but flexible   Our initial training program ran for two weeks prior to launch  While that was a busy time for eero  it was the right moment to expand the CX team and our training material was most resonant and relevant then  Consider a mix of classroom sessions  exercises and knowledge checks  We scatter various learning formats throughout the day to keep things interesting and engaging  We introduce the team to eero s values and CX approach  do deep dives on our hardware and app  listen to support calls and review sample e mail exchanges with customers    To the point    Before creating any training material  draft an outline listing everything team members need to know about your product   from technical specifications to team procedures to soft skills  Under each topic  include a description   In this lesson  you will learn _____  Our goal in providing this information is _____   This overview will keep you focused  It made our training program feel more cohesive and thoughtful    Groups of 15 20 people    We ve found this size to be the sweet spot  The groups are large enough to be efficient  but small enough that trainees feel comfortable asking questions    Test trainees and trainers   End every training day with a knowledge check  a survey where team members are asked to share written answers to questions like   How could today have been better    What information confused you   Ask questions about topics trainees should have absorbed that day  For example  we ask   What wireless networking standard does eero support   These types of questions help trainers identify problem areas so they can circle back the next day and review confusing material more thoroughly    Reconnect and rally the full team   On one of our intro slides  we show a bulletin board in San Francisco that has a photo of every team member at the call center in Austin  We want new specialists to know we value them as individuals from day one  During training  all trainees create short presentations to introduce themselves to the team  This gives us a chance to get to know one another and prompts folks to unveil hidden talents or hobbies  In that process  we learned that we had a skilled photographer and musician on our team  As it so happened  the musician ended up creating the call center s hold music and the photographer took shots for eero s blog    Your CX team can t treat your customers well if they aren t treated well   Nick Weaver  Don t Just Be Another Support Team  When eero launched its CX team  it kept a single question in mind  Tech support is everyone s worst nightmare  How do we do it so differently that we reset expectations  Here are some of the key tactics  processes and definitions of success that can help guide CX teams through customer interactions   Master a few channels before expanding more broadly  Prior to launch  eero chose email and phone as its support channels   Don t race to meet customers through every communication and social media channel under the sun  Start with the number of channels you can successfully manage so that every customer has a positive experience   says Lindsay   Having two channels didn t limit our customers   or us  From the start  we put our support email address and phone number in as many places as possible so it s easy for customers to find  We now have a Twitter handle   eerosupport  a customer community where customers can ask and answer each other s questions  and we offer chat support through our Help Center  Despite new additions  phone and email remain our most popular support channels today    Don t be afraid to supplement and switch channels  eero responds via the same channel by which it received a customer s message with two exceptions   First  phone calls are suggested when a challenge is too difficult to solve by email  If our specialists believe it may be easier to troubleshoot over the phone  they ll ask the customer if it s okay to call  After every call  we follow up with a brief recap email detailing the topics covered  and encouraging the customer to reach out directly if they need more assistance  This gives customers an avenue back to the same person they already worked with   says Lindsay   Second  we send emails to customers after reviewing their survey responses  should we need to gather more information or offer additional assistance  These follow ups reiterate that we re listening and that we re here to help    Think safety net  not filter  Many CX or support teams elevate speed to resolution as their key metric  so they focus on how to better qualify and triage problems  For eero  every support interaction is an opportunity to make customers feel heard and to reinforce the team s mission to be helpful  intelligent and approachable   Issuing a fast resolution while also conveying these values requires breaking some common CX habits  like punishing representatives for long call times  refusing to apologize or acknowledge company mistakes  and retreating when a customer s problem isn t directly related to your product   says Lindsay   Instead  view the CX function as a safety net  Your job is to catch these individuals who haven t had the perfect experience  put them on the right path  and ensure that they feel positive about where they stand  How  Speak to them naturally  Take them seriously  Offer solutions  And conduct thorough troubleshooting to ensure they don t face similar challenges in the future    Each interaction with a customer is an extension of your values   Scrap the scripts  If you ve made a choice to staff real people   not bots   as your customer experience team  give guidance and then allow them to be creative problem solvers   We don t give scripts  because we want our specialists to be human  That s the purpose of staffing real people  They can respond on the fly and use their judgement to determine the best way to handle a situation   says Lindsay   Especially when individuals have past CX experience  you must emphasize that you genuinely want them to have a voice  As a result  our specialists often discover and implement solutions that improve the company s workflow  For example  the team added lots of new training material on advanced network troubleshooting based on interactions they ve had with real customers    Identify metrics that matter to you  eero s main CX metrics fall into two categories  operational efficiency and support quality  Here s the breakdown   Operational efficiency entails metrics such as call length  90th percentile wait times  and abandon percentages   the number of people who hang up due to long hold times   Quality metrics include customer satisfaction scores  CSAT  and Net Promoter Score  NPS   While it can be difficult to decouple the two  eero uses CSAT to reflect the way people feel about their support experiences and NPS to reflect customer perception about the product holistically  Lastly  it also includes eero s own internal Quality Assurance  QA  program   eero s CX team created a custom rubric to use as a guide for successful customer interactions  It s simple to recreate this kind of tool in Google spreadsheets  it includes   Four high level goals and accompanying descriptions  eero s are   Drive toward resolution    Represent eero effectively    Demonstrate technical expertise   and  Set our team up for future success    Keywords that describe the qualities of a successful eero Specialist such as committed  curious  instinctive  authentically empathetic and empowering  These guidelines provide the team with attributes to channel as they work with customers   Three sub buckets per topic with specific requirements to be evaluated during a QA review  For example   Understood the customer s symptom  Displayed active listening  paying close attention to key details and clues  When necessary  asked clarifying follow up questions and avoided jumping to unfounded conclusions    These are the specific criteria through which individual performance is measured   Here s an example of eero s rubric   An example of eero s rubric  eero has an analyst in Austin whose full time job is to review a sample of CX calls and email exchanges from team members   especially new hires   every week   This information is similarly stored on a Google spreadsheet  All team members are scored on each sub bucket with a pass  fail  coach or N A grade  Our analyst provides notes on every customer interaction and offers insight on what we could have done better   says Lindsay   Managers review this information and share it with their direct reports in 1 1s    The Give and Take Between CX and the Rest of the Organization  A change in a checkout flow  A tweak to shipping emails  An update to marketing language  Every company decision changes the frequency and way your customers reach out   Customer experience teams are on the front lines  collecting bits of data and strands of conversations that relate to the changes a startup makes   says Weaver   This team has to know what s going on in the company   and the rest of the company should know CX measures the pulse   and health   of the customer    Here s how eero marries CX to other disciplines in the organization   A rolling release process between CX and Product and Engineering  eero has developed a culture where CX works hand in hand with Product and Engineering to closely monitor early customer responses to new releases and features   This is perhaps one of the most powerful alliances a CX team can form inside their organization  It doesn t happen overnight  but you ll know when it does   says Lindsay   You want a culture where teams run new ideas  features and updates by CX  I knew we were successful when Product or Engineering would ask themselves   and us   When I make this tweak how might it impact the customer  Could it cause confusion at first     How did that alliance form   Most startups will slowly roll out new features to specific subgroups of customers  Turns out that if the Customer Experience team is prepared to monitor feedback from that group  it provides an additional source of insight for catching bugs and eliminating issues before the release reaches more customers   says Lindsay   While it may seem rash to draw conclusions from a small number of early reports  even an initial data sample can uncover patterns or roadblocks worth addressing before broader release    CX inherits every decision every team in the company makes   A  field report  meeting  Every two weeks  the CX team leads a meeting with the company s senior leaders as well as the Heads of Product  Engineering  Marketing and Sales to relay and address major customer concerns and requests   We plan the agenda and provide the high level customer insights that we feel team leads should consider  Topics can range from emerging trends  such as new support patterns  to more pressing concerns  such as the impact of a bug in a new release   says Lindsay   Our only goal is to accurately represent our customers  needs through data  There is no other agenda  Whatever bubbles to the top is what we cover during that meeting    As soon as the CX team finishes presenting a field report  it starts on the next one  It s this level of preparation that has made CX the go to resource for customer insights within eero   Our team spends two weeks prior to the meeting analyzing data  assembling slides  and preparing for possible follow up questions   says Lindsay   A typical slide may focus on a new feature release outlining the support contacts received and the usage stats from early adopters  We recommend pulling together all that disparate information into a platform like Looker so that you can form focused recommendations like   Based on our testing period  we need to be prepared for X  Y and Z prior to broader release   eero has a full time data analyst on their San Francisco CX team who helps the company monitor customer trends  make sense of the data available  and focus team attention on the right priorities   One time  Lindsay s team noted a spike in questions related to setup   Six weeks after launch  we reviewed every setup question received from customers  We identified patterns in how our specialists resolved setup issues and then shared our findings so bugs could be fixed and internal processes could be adjusted   says Lindsay   Turns out customers weren t fully power cycling their modems  even though we requested they do so in our instructions  We observed that customers would be more successful if we broke discrete instructions out onto separate app screens  extended the buffering period in the app by 15 30 seconds  and beefed up the troubleshooting suggestions in our Help Center    Curate company CX channels  Between product iterations and field reports  establish more ad hoc pathways to distribute information to the team   Your work gathering and analyzing customer feedback is futile unless it can be relayed to the right people  Storing CX data in a general document that no one references provides no value to improving your product   says Lindsay   eero uses a series of Looker dashboards and Slack channels   each with its own definition and expectation for involvement   to distribute CX information  For example  every NPS response posts to a Slack channel so anybody who wants to can opt in to see them  And every comment added to the eero support community posts to a channel where CX team members can actively monitor  and participate in  the discussion  Looker dashboards relaying CX team performance against key metrics and trending customer issues are also open to all interested employees    Success is measured in happy customers  not product releases   Tying it All Together  The moment people buy a product  they ve initiated a relationship with your company and may seek answers for questions they haven t yet asked  There may not be an immediate request for support  but that s where the customer experience begins  CX is not only about how people experience your product  but also how your company experiences your customer  That is the critical bridge that must be formed early on  so hire someone focused on the customer experience before you have customers  Outsourced teams can be invaluable  but only if you train and treat them like a remote team  Don t be just another tech support team  Track  but de emphasize traditional CX metrics like call length  Use a custom rubric to channel the values of your company while you resolve customer issues  CX wins when the company integrates it into product development because it s the source of truth for the customer    We re in a world that s increasingly intrigued by AI  bots and self service models  Support interactions between humans will become increasingly rare   and even more atypical from those who deeply know and care about the product they represent   Lindsay says  Weaver adds   But the moment you have a genuine  kind and human interaction that resolves your problem  it s surprising and delightful  I still remember the early days of Apple s genius bar  When they asked   Can I help you right now   it was a magical moment  When they said those six words  they were present  When I heard those six words  I knew it was a brand that would stand by its product  That s powerful    Photography by Bonnie Rae Mills,"[74 1061 296 277 76 1265 17 190 826 19 1030]"
76,training-dataset/business/296.txt,business,How to hire a great customer support repNo matter how great the product  poor support guarantees a bad experience  As the face of your company  your support team is on the front line  One bad hire can damage your entire company s reputation  wreak havoc on the morale of your team  and create long lasting damage   But what should you look for when hiring someone to join your team  What traits and qualities make a great support hire  and how do you create an interview process that will maximise your chances of finding the right candidate   At Intercom  our interview process is long and challenging  However  many new hires tell us it made them want to work with us even more   it shows how much we care about who joins our team  The decision to add a new member to our team is not one we take lightly   I m going to share how we hire  strategies that work for us and pitfalls to watch out for when expanding your own support team   Technical skills can be taught but teaching someone to operate in a way that isn t natural to them is nearly impossible   Core qualities of a great customer support rep  Although it may sound obvious  getting enjoyment from helping people is key  There s no point hiring someone who s uncomfortable chatting with others or lacks empathy  your customers can spot this a mile away  We work as a pretty tight knit team and hold each other accountable for our actions  A strong sense of team spirit and ownership are necessary for a high performing group   The Intercom platform and products are big and complicated with lots of moving parts  We encourage and nourish proactivity and resourcefulness on our support team  They need to able to work on their own initiative  find answers to questions themselves and recognize the best resources people to consult when they get stuck   A passion for problem solving  curiosity and a desire to dig into root causes make for great troubleshooting skills  Sometimes things break  Every software company experiences bugs  outages and just downright busy times  Keeping cool under pressure  multitasking and never letting quality slip contribute to our team s high bar   Radical candor across our organisation is not only encouraged  it s mandatory  We give constant constructive feedback to each other  managers to reports  reports to managers  support teams to engineering teams  Critical thinking and expression of those thoughts in a clear manner are imperative in a cross functional organisation   The above are examples of some our team values  Always consider your own company team values when hiring and assess if potential candidates align with them  Technical skills can be taught but teaching someone to operate in a way that isn t natural to them is nearly impossible  At Intercom  someone with a sense of humor and an ability to carry that across to customers is important  because our product is all about being personal  We encourage casual conversations  peppered with smiley faces  gifs and emoji  We don t deal in  Dear Sir Madam  interactions   How we hire for support at Intercom  Our interview process for every role is in depth   you have to meet and impress a lot of people   The email and phone screeners  We ve written before about the benefits of email screening when hiring engineers  and it s something we do with support rep candidates too  You can use email screening to dig deeper than resumes  asking questions to gauge how candidates think about certain issues and evaluate their writing ability   For example  some of the questions we ask focus on prioritization and resourcefulness  We provide a sample todo list  explain that they re not going to get all tasks done in a day  but ask which three they would focus on  and why  There s no right answer for something like that  but it gives you insight into how they think   The real challenge is finding someone who thinks differently to you but also fits into the culture   We explore what technology candidates are interested in  We have dedicated support engineers  so our support reps won t need to handle overly technical queries  But a good support rep will become a product expert and intimately understand how your product works as well as grasp technical concepts  A keen interest in technology  even if not in engineering  is necessary for success in the tech world   If answers to the email screener are in line with how we want people to work on our team  we move to a phone screener  Candidates applying to Intercom go through two phone screeners  which feature a mix of competency and value based questions  If we re happy with those calls  we bring the candidate on site   The on site interview  Our in house session involves 4 5 interview slots with different people across the team and company  It s important for candidates to speak to people from different teams  We want to ensure they re able to work and communicate clearly with a wide mix of people  not just the support team  and understand what those teams do   We structure on site interviews so each meeting has a focus  One might cover how the candidate deals with customers  another could explore their ambitions and goals and the next can look at how they work as part of a team  In each case  we ask questions specific to the topic of that interview  This way  candidates have a chance to show the entire interview panel lots of different skills and values and avoid repeating themselves   After the interview  everyone involved gets together for a debrief  We review all feedback  discuss the candidate and make a decision  with the hiring manager making the final call  Our process is optimized to be very selective but also require minimal time commitment at each stage   Five pitfalls to watch out for  Candidates can tick boxes for proactivity  resourcefulness  stress management etc  but there are still some warning signs you can uncover in the process  Here are some important things to look out for   1  People solely interested in getting a foot in the door  Look out for anyone who wants to work at your company  but doesn t necessarily want to work in support  It s great to be ambitious and to want something else long term  but it s not going to be worth it if they re not all in on the team they start with  They could potentially go on to become a great product manager  if that s what they re aspiring to  but if they re not a great support rep they re never going to prove themselves  You want people who are committed to the cause  who enjoy helping people and who won t be looking elsewhere in three months  time   2  Hiring under pressure  Don t hire somebody you re not sure about to solve an immediate problem  When things are busy  your team is flat out and your inbox is on fire  it can be tempting to simply focus on getting someone in the door  In the long run  you re shooting yourself  your team and the new hire in the foot if you rush in  Even under pressure  our team appreciates how much we want to bring a teammate to them who is exceptional  instead of somebody who ultimately doesn t work out   3  Not involving your team in the on site interviews  When you involve support teammates in the hiring process  it gives them a taste of people management  a voice in the direction of the team and helps them understand how and why we hire who we do  Some of our in house sessions will have two people in them  with one person simply observing as they learn the ropes   4  Falling into the culture fit trap  A lot of startups hire for  culture fit   Inevitably  this becomes people they think will easily fit into the team  which can end up meaning people who are like them  You re never going to build a diverse team and tackle your weak points this way  The real challenge is finding someone who thinks differently to you but also fits into the culture  It s important that new hires are aligned with your values  but that doesn t mean they ll always come in a familiar package   5  Not giving rejected candidates feedback  If you ve brought someone through your entire interview process and decided they re not a right a fit  don t simply send a stock  no  you re not what we re looking for right now  message   We pride ourselves on giving detailed  candid feedback on the reasons why we didn t hire someone  We want them to be able to understand our reasoning  and be able to learn from that and take it with them when they go somewhere else  Just because they re not who you need right now doesn t meant they may not be who somebody else needs  or what you may need on the team in the future  I applied to Intercom once before I was hired for my current role  I came back and tried again because I received genuine feedback and encouragement   We built this process from the ground up  from disorganised and messy to a well oiled machine  We ve iterated on it and will continue to do so  We ve made mistakes  We ve hired the wrong person a couple of times  and we ve lost good people we wanted to hire because we managed their hiring loop poorly   When building your hiring process it s important to try new ideas for interviewing  take suggestions on board and always ask your candidates  successful and unsuccessful  for feedback on their experience  Unsuccessful candidates are even more important in getting your company profile out there  You want them to say good things on recruitment boards  not rant about poor feedback and unfair decision making  If you can impress someone you ve said no to  you know you re onto a good thing   Interested in joining our team  We re hiring a Customer Support Representative,"[76 296 17 304 1265 277 269 1146 315 363 1385]"
77,training-dataset/product/1265.txt,product,6 key things all UX designers should keep in mindUser experience designers never stop learning  Sometimes the lesson is eye opening and lands you at a brilliant solution  while other times it shoves you straight back to square one   I ve spent years as UX designer and product strategist  and I publish a weekly newsletter  The UX Notebook  that helps people learn to think like designers  I d like to share a few of my favorite insights on great UX design  along with a couple of questions and activities to try out with your team to spark ideas   1  Feedback won t slow you down  Feedback fuels momentum  Seek frequent feedback to help adjust course faster   Hindsight  It s a great thing  There s nothing worse than launching a new product or feature and then realizing people aren t using it   When you finally stop and think about it  hindsight shows you probably failed to get feedback from people early enough   In product development  it s easy to get sucked into the details of execution  This momentum is great when it s time to get things done  But  you have to be constantly asking if you re getting the right things done   Create time in your product development process to seek out feedback from other team members  people outside your team  and users  Feedback serves as a critical reality check to keep you from going too far down the wrong path   Questions and activities to help spark discussion and ideas on your team   Reflect on a time when your team created a product or feature that wasn t a success  Did you get feedback during the product development process  If not  why did you skip feedback  Think about a product or feature you re working on right now  Commit to getting feedback in the next 2 weeks  Brainstorm how you could go about getting this feedback   2  Think beyond the screen  Tunnel vision  It s easy to get fixated on a single screen or a single feature in a product  When we re passionate about what we re working on  we can easily get stuck in the details   When people are using your product they aren t going to think  Wow  that one screen was amazing    It s not about one screen  It s about how all the screens fit together to help solve the user s problem or complete the task at hand   As much as we want it to look perfect  it doesn t matter  We are not the normal users  The average person using our products is happy when it solves a problem  not because it s pixel perfect   Questions and activities to help spark discussion and ideas on your team   For every screen that you work on ask yourself 2 questions  What did someone do before this screen  Where will they go next  These questions help establish context that s so easily lost when you focus on one screen  Is your team stuck on a single page  Take a moment to zoom out by sketching out a rough screen map  site map  so you can see how all the screens fit together   3  Get comfortable being wrong  To create new ideas  you have to be willing to go into unchartered and uncomfortable territory   No one likes to be wrong  But as designers  it s impossible for us to always be right  Part of being a designer is about being wrong because on the road to a great idea  we throw away a lot of other ones   You have to learn to be fearless  But there s a difference between being fearless and being reckless   Fearless means you are thoughtful and calculated  Reckless means that you don t think enough before you had   New ideas require that we get comfortable being fearless  exploring new ideas  and committing to validating those ideas through feedback and data from our customers   Questions and activities to help spark discussion and ideas on your team   Gather your team and have a discussion about what you would do if you didn t have any time  money  or resourcing limitations  What ideas would you explore if you had no constraints  What has stopped you and your team from pursuing new ideas in the past   4  You must create space to think  Great designers spend a lot of time thinking  not doing  Focus on learning to think like a designer   When you re working on a project  it s exciting to see the progress  This often fuels teams to keep working away based on whatever is on the project checklist   The danger getting into a cycle of doing is that you never give yourself a chance to think  Moving from task to task can easily stop you from enough time to think   A lot of times  ideas and insights come in the quiet spaces  But if you re constantly in do mode  then you ll never have time to think   There s a reason that people have ideas in the shower or when they re out on walks or while driving  It s these quiet moments that allow your brain to actually think   Questions and activities to help spark discussion and ideas on your team   Find time on your calendar this week to schedule a  thinking  session  Then  plan an activity outside of your office for thinking a walk  a lunch outside  a trip to a museum  Encourage your team to share their ideas by creating an idea board that people can always be adding to and reading  Don t make this electronic it will definitely get lost   5  Confirm the problem before creating a solution  A lot of products fail because they didn t solve a true problem  So how do you avoid this  How do you make sure that you don t invest a lot of time  money  and energy in something people don t want   Get into a habit of validating each idea before you spend too much time on it   Sometimes the solution can be like a mirage  You get so fixated with the solution that you fail to stop and and ask why people actually need your solution and if there is a real problem within sight   Questions and activities to help spark discussion and ideas on your team   For the product you re working on  ask everyone to write down the problem you re solving  Have people do this anonymously  Then compare notes and use it as a chance to get on the same page  If you have not confirmed the problem yet  then commit to doing some customer research in the next 5 days   6  Sometimes you just have to make a decision  Every decision we make has a corresponding impact to our team  product  and users  The problem is that in our quest to make the right decision  we waste a lot of precious time one of the most important variables in product development   Decision paralysis leads to slowed momentum  second guessing  and a sense of unrest on your team   There s a time to deliberate and there s a time to get it done   The challenge lies in knowing the difference  And this comes from experience  A good gauge to consider is the ease at which the decision can be measured and changed   Questions and activities to help spark discussion and ideas on your team   What decisions are paralyzing your or your team  What s stopping a decision from being made  What s the worst that can happen  Test the decision by asking why  For the decision at hand  force you and your team to ask and answer why and justify the decision  Do this 3 times for each decision   What s the most important thing you ve learned about UX design  Tell us on Twitter   InVisionApp  And if you d like UX tips from Sarah that you can hold in your hands  check out her Shopify store here   Read more from Sarah Doody,"[77 17 839 1030 1146 1387 1376 76 1244 116 390]"
93,training-dataset/business/279.txt,business,Passing the Baton   Nothing VenturedIn the 2003 World Athletics Championships  Team USA had by far the best team in the women s 100 metre relay  Including the overall fastest woman on earth and the fastest 100 metre sprinter at that time  not bad for a team of 4  Based on their individual 100 metre sprint times that year  they should have finished over twenty feet ahead of any other team  but on the day they came second   Instead the French team won while containing fairly average sprinters  or as average as they get in a world championship    They say that the best teams are better than the sum of their parts  and this French team is the greatest example of that that you will probably ever see   Each runner had a slightly slower time than each sprinter in team USA but they passed the baton faster between runners and the baton itself moved faster than any other team  Each runner sacrificed the last few yards of their sprint to focus on passing the baton cleanly to the next runner and setting them off faster  The job of cleanly passing the baton was on the runner holding the baton  not the runner about to start their run as was the usual rule  Simple focus on passing cleanly won them a world championship   Passing the baton in 2003  So what can you and your team take from this French team  could you pass the baton better  Regardless of the discipline  we all need to work harder at removing the  cold transfer   The true professional hands a task over over not just done  but with the next move and momentum in mind   Lets look at an example from the software world   The Software Development  Sprint   In agile software development  we even use the word  Sprint  to describe a block of development time  usually a two week block  Software developers try to get their work done within that time  sometimes sprinting to the finish  checking the box and moving on  Meanwhile testers are trying to test as quickly as possible  and product managers and designers are moving quickly to get features lined up for the next sprint   In the end  while agile is supposed to be focused on the team and was created to foster a team France mentality  often the individual still takes over  You can have the fastest developer in the world who nails a feature two days early but if it takes a tester an extra four days to get it tested then the development speed was not a good thing   Lost in translation  It goes across the board in developing products  From different areas of the company not being clear or changing their mind on what they need  to product managers not being clear on requirements and developers passing those features on to a tester with no possible way to test or ship it  Imagine the impact we could have if we focused solely on the time it takes to get a feature out the door and not how long it takes for each step   Everyone is guilty of being team USA from time to time  so why not treat the  Sprint  as a  Relay    Summary  Yves Morieux gives a great TED talk about working together better and not following the usual rules using this race as an example  you can watch it here  It was watching this talk that got me thinking about how it applies to software development   I would love to hear how you could take this concept forward in your own teams  If you are a support team who pick tickets up cold and have to ask the customers the same questions again or a sales team picking up leads with no background to it  you might look fast individually but really you re team USA   We all need to take it on ourselves to make sure our team members can get ahead faster because in the end  we re all running a relay and not a sprint and we can be greater than the sum of our parts,"[93 220 1030 17 519 955 168 973 1385 655 190]"
107,training-dataset/product/1427.txt,product,Here s How Asana Won With Its Product RedesignProduct redesigns heat sink to headlines  Instagram Gets the Redesign We ve Been Waiting For  Medium s redesigned website wants to bring us back to blogging  Facebook co founder Moskovitz retools look of future of work startup Asana  Then there are your users  Whether it s a consumer or enterprise product redesign  they re the ones who declare success or failure   either through praise and referral or by voting with their uninstalls  How can a company own its evolving identity when the verdict on a redesign so often comes from the tastes of its users   Asana product manager Sam Goertler has thought about this question a lot  especially as it relates to improving team collaboration  As an early member of Asana s product team  she s focused on building an easy and powerful product that helps teams track work better together  Previously at Yammer  Goertler worked on enterprise social networking in its early days  She s familiar with the late night pushes  behind the scenes kerfuffles and the ramp up to the big unveiling  There s also the redesign expectations that can split like a middle school dance  On one side are the designers  with their big dreams  expansive thinking and hope for a silver bullet to fix all product problems  On the other are the PMs  grappling with impossibly high stakes  fear of user backlash and complex plans to execute  And those are just two types of stakeholders   In this interview  Goertler covers why redesigns   even of apps users have already come to love   are as difficult as they are inevitable and how to navigate them with grit and grace  Using Asana s successful redesign as a case study  she outlines the team who needs to be assembled  the obstacles to flag and how to plow through them  Lastly  she digs into how to take a uniquely iterative approach to a redesign and when to declare success   Why Redesigns Are So Hard But So Inevitable  There was a time when Microsoft Word came out with a new version at the same cadence as the Olympics  but that time has passed  People have adopted agile methods and rapid release cycles  There s a shorter runway to extend design systems now  the unit of time is weeks not years  It s not unusual if SaaS companies ship new functionality every few weeks  so redesigns become a natural consideration to match faster product development cycles  According to Goertler  there are two key factors   one external  one internal   primarily driving this change   The prevalence of digital interfaces in our daily lives has accelerated the evolution of design trends   Pretty much everything we do now  whether it s shopping or managing our finances or making a doctor s appointment  we re doing it through a digital interface   says Goertler   That means there are more designers out there who are collectively advancing design languages and pushing visual styles forward  In turn that leads to a faster rotation of design trends  It s a virtuous cycle    But virtuous cycles are also vicious ones  Those who don t spin at the market s speed can be spat out entirely   What it comes down to is that design trends are moving quicker than ever  As soon as a new style rolls out  the previous version seems incredibly outdated by comparison   says Goertler   One stark example is when iOS launched it s new flat design to replace a more skeumorphic design that had been long favored by Steve Jobs  Now  if you look at that early design  it feels like a relic from an older world  Iconic brands like Apple endure because they evolve their brands  If you can t keep up  you ll have a tough time attracting and retaining users    If the rapid cycle of design trends is the external trigger for a redesign  there s another internal reason one should be initiated as well  the pace of product development   It s not just design trends that are moving faster  We re seeing more functionality and features developed in a shorter time span   says Goertler   In a year  you can go from an MVP to a product that s chock full of functionality  which  when more features are piled on at top speed  can become untenable  That s when you hit the limits of your original design  You can t extend your design system to accommodate new feature development  So it s time for a redesign  The alternative is to continue cramming everything into an already cluttered UI  which stifles all your feature development work    With dynamic forces at play  you d think it d be relatively easy to jumpstart the redesign process  Yet there are cases in which executive teams and product managers can drag their feet with redesigns  When they do  let your users speak for you  Here s a closer look at these key stakeholders   Expect executive teams and PMs to take a risk averse stance towards redesigns   It s definitely tough to get their buy in for a redesign  They tend to prefer projects that are more straightforward in terms of returns on investment and amount of risk   says Goertler   For example  by comparison  feature development work can seem much more appealing to PMs and executives because it s presumably more straightforward to build features incrementally  That means lower risk and clearer metrics for success with the help of A B testing  The assumption is that in order to successfully execute a redesign  you have to go heads down for several months and come out the other side with a big reveal  You cross your fingers that you didn t miss the mark  That can be very scary and unappealing for executives  PMs and other key stakeholders    Highlight the urgency for a redesign by channeling your users  Your users are your bellwethers and spark for a redesign  so poll them every 24 weeks by folding in a question about design in your periodic surveys  If you ve already made the case for hitting the limits of design extensibility  stifling the success of all feature development or cluttering your UI  let your users speak for you    If your company still isn t feeling the need for a redesign and kicking the can down the road  reach out to your users  I think the best way to track the need for a redesign is to get a pulse from your users through net promoter score  NPS  surveys  A lot of companies use NPS to gauge word of mouth growth  so it s a familiar tool for both companies and customers  It asks whether or not they d recommend your products  with an option to give additional color   Goertler says   At Asana  we were seeing that the original design was the top reason why people wouldn t recommend our product  That was a clear sign that we weren t able to fit into our users  modern lives and our cluttered UI was preventing them from getting value out of new functionality  It was evidence that our design was hindering us from growth and engagement  two metrics that grab the attention of and matter deeply to executives and PMs    If your users don t swing internal momentum for a redesign  mirror the tactics of the product team  That doesn t mean changing the goals of the design team to those of the product team  but rather adapting to the way they achieve and measure objectives   We mitigated internal concerns about a redesign by pitching an incremental strategy that would take all the benefits of what we ve learned from the feature development process and apply it to the redesign process   says Goertler   This approach allows you to validate your assumptions early  build momentum  know when to change course and recognize when you hit diminishing returns  When we were able to take those aspects of feature development and apply them to our redesign strategy  everyone got on board    How to Assemble Your Redesign Team  A redesign affects not only how your company uses your product  but how they connect and feel about it on an instinctual level  Logistically  that means that this is a unique undertaking that impacts the entire organization  but practically cannot involve everyone at every step  Here s how Asana built its team responsible for its redesign   Convene a temporary  cross functional crew  Goertler  as product manager  and Vanessa Koch  the lead designer  partnered to spearhead the redesign  They assembled a team of product managers  designers  executives and user researchers who d work together for a defined sprint   It s important to have two leaders   one from product and one from design   to make this work  Vanessa was a huge part of why this project was so successful for us  She was able to get the entire design team involved in the exploration phase of the project where we were considering all the different visual styles and UX changes to make  She was able to get input from the entire design team and consolidate that into a single vision  which is critical   says Goertler   As for the team  we organized our  program   which for us is a cross functional team that s assembled for a four month period to solve a higher level problem  In this case  it was about user confusion   we didn t yet know that a redesign was the solution  We received a signal from our NPS reports that our UX was puzzling to users and that we needed to dig into the problem  Only then did we realize the extent of the issue and the need for a full overhaul    The key to the genesis of our redesign was that we first convened to solve a problem  not to implement a solution   The redesign program kicked off its collaboration with the team by relocating to a cabin in the woods  The goal was to get out of the office  block off a huge chunk of uninterrupted time to work together while not being distracted by the existing design   The team   designers  product managers  executives and user researchers   got started with brainstorming exercises led by our user research team  They d paint the picture of the problem by presenting a lot of qualitative data gathered from users   says Goertler   Then they d pepper in anecdotes  One use case was about a construction company that uses Asana to help their team coordinate homebuilding  We really got to know exactly how users work  how they use our product and what other products they use to get their jobs done  Once we had a really clear understanding of their workflow  we then started to brainstorm ways that our product could improve the way they tracked their work    Resolve philosophical differences by picking up from pain points  The contingent of product managers on the redesign team were eager to use an iterative methodology to product development  Broadly speaking  that meant starting with an MVP  A B testing it and iterating to a better end result  Yet that approach didn t immediately sit right the designers   They believe that a redesign is more than the sum of its parts  As such  they couldn t imagine launching a redesign in a piecemeal way or stomach putting users through a Frankenstein experience  where parts of the old style would exist along remnants of the new design   says Goertler   Goertler and Koch wondered if there was a way to get the best of both worlds and marry the instincts of the designers and PMs on the team  They found a way to take an iterative approach  while also building in a grander unveiling that was more comprehensive and holistic to users    Instead of choosing the designers  approach over the product manager s methodology  we looked deeper into what the users had flagged as the main problem  We realized there were two sets of issues  structural issues  such as broken navigation and lack of hierarchy  and visual issues  such as outdated button styles and a drab color scheme   says Goertler   Making this distinction in the pain points allowed us to merge our team s different philosophies  We realized that we could incrementally launch structural improvements in our old visual style without putting users through a Frankenstein UX  Once the structural changes were integrated  we could do a visual refresh in one fell swoop  having already mitigated the risk of user backlash because they wouldn t have to change their workflows overnight    We knew the designs were going to shift  but we needed a North Star to guide us through the incremental work   How to Take an Iterative Approach to a Redesign  At Asana  an incremental  iterative redesign plan got the green light  but it didn t immediately quell all the concerns or rally the organization  It took more steps to transform the nervousness into productive teamwork  To kickstart the iterative style to a redesign  draw from the same methods used in feature development  Set a general vision  break it up into independent parts and sequence their launches  Here s how the redesign team got the process started   Set a general direction   Our user research team led brainstorming exercises to tease out a vision that would solve our user confusion problem  Our design team laid out specific possibilities that might improve clarity for our users  After our trip to the woods  Vanessa took all of those ideas and consolidated them into a single concept mock that didn t have to be perfect   says Goertler   Since everyone knew we were taking an incremental approach  it was easier to get consensus on a general vision and buy in from other stakeholders  Everyone knew that we d never have to ship those initial designs  so it lowered the stakes and made it easier not to nitpick over which shade of blue was best    Break up the design into parts    Once we had the general direction  we had to build the steps to get there  That meant breaking up the concept mock into all of its independent parts  such as top bar and sidebar navigation   says Goertler   It can be easy to lose your way here  so lean on a mantra   we used  maximize clarity   As we put designs together we had many versions of the new navigation  So we returned to our mantra when we got stuck  If we thought one design would bring more clarity to a user than the other  we chose it and moved forward    Sequence the launches    After identifying the independent parts of the redesign  we had to figure out how to sequence the launches in a way that would optimize for learning up front  To do that  we listed out what we believed we could learn from each individual release   says Goertler   If it was a huge departure from the status quo or if it was a design based on assumptions that we weren t able to test with a prototype or get user feedback on  then we knew we had a lot to learn from actually launching it  We wanted to get those insights early on so that we could course correct our way to the best end state    Validate assumptions early    The major advantage of an incremental approach is to learn along the way  You get to answer your biggest open questions before making big decisions on false assumptions  and therefore lessening the chance of a big catastrophe down the road   says Goertler   But another advantage is that you can also build momentum along the way  You re not holed up in a room for months with the A Beautiful Mind approach   you can ship  get feedback and garner trust with the organization    Notch a first small win  Even after Asana initiated its plan for a redesign  there were still nerves  It took a mini victory before people truly got on board with the redesign   Sentiment finally changed as soon as we got initial results from our first few launches  Showing how our work was moving the needle helped to change people s minds and get the company to rally around us after that   says Goertler   Our first launch was a redesigned top bar navigation that we had A B tested  It was a big victory for core metrics  Once people saw small changes working  they realized they didn t need to be afraid of a bigger transformation    Sam Goertler  How to Let Users Help Guide Your Redesign  It s critical to define a rough timeline  launch strategy and feedback loops  but your users will help you refine each of these elements  Here are Goertler s recommendations on what to do to allow your users to have an additive role in your redesign   Sprint to a signal  not a deadline  The Asana team working on the redesign did not linger  but they also didn t drive to a predetermined deadline   While we did have an upper limit of how much time we want to spend on the design  the more valuable measurement was time bounding our efforts to get a specific signal   says Goertler   Remember  we were working through incremental steps  We would sprint towards the next launch and once we had A B test results from that launch  they d give us signal on what to do next  We let the strength of a signal guide us  For example  the navigation launch was a huge win for our core metrics  But as time went by  the effects of each subsequent change was more and more subtle  That s when we knew that there s probably higher impact work to be done elsewhere in the redesign versus chasing diminishing returns    Resist over bundling features for releases  The advantage to an iterative approach is that interactions with your users help you isolate issues better and faster   If we had launched our sidebar navigation with our top bar navigation  we may not have gotten a clear read from our users  The top bar navigation really helped with a pretty cluttered UI that had too many calls to action everywhere   says Goertler   But if we had paired it with our sidebar navigation release  we may have had to untangle that feedback  We realized the sidebar didn t scale well for larger organizations that had many shared projects  It was painful to get those A B test results back  but we were really glad that it had launched independently so we could find our misstep  roll it back and fix it  Otherwise it might have tainted the overall launch    Asana s initial design  Asana s new design  Incorporate your customers into your big design reveal  If you re just thinking of your customers as mechanisms to run your design A B tests  you re missing a big opportunity  Asana purposely activated them for their big launch   All of the incremental UX changes had a minimal amount of go to market strategy built in because we were A B testing and not sure what we might roll back   says Goertler   But when we unveiled the new visual style at the end  it was our opportunity to tell the world about all of the progress  The marketing campaign leaned into customer love  a special event for press  engaging social media  and blog posts all centered around the customer s stories in announcing the all new Asana  User response  in the wild  was also core to the process   their response was key to our release    We gave users an option  the newly designed Asana or a return to the older version  Fewer than 1  went back   A redesign should not only be a reflection of a company  but the customers who use its product  Both continue to evolve  accelerated by the proliferation of digital interfaces and pace of product development  Despite the inevitability of redesigns  expect internal resistance given that they are perceived to be risky  unpredictable endeavors  Assemble a cross functional team  Mirror the metrics and marry the methodologies of each participating function to kickstart an iterative approach to the redesign  Set a general direction  break it into parts and sequence your launches to learn faster early on  Lastly  involve your users to help measure and celebrate success    One of the most important aspects of a redesign is flexibility  When you are taking an incremental approach  your plans are going to change based on the feedback you collect along the way from your users  That s a good thing because it means you re learning and getting closer to that ideal end state that was fuzzy at the beginning   says Goertler   You have to start before knowing exactly where you ll end up  Though we  finished  our redesign at Asana  we ve created it in such a way that there s room for change as we evolve  If you re a company that plans to be around for a long time  you not only need a formula for growth  but a flexibility for it,"[107 513 663 190 1061 826 1030 116 233 77 1384]"
115,training-dataset/product/559.txt,product,Designing Modern Teams   David J Bland   MediumDesigning Modern Teams   What kind of team do we need to build our new product    This is a question I often hear from managers at corporations  both inside and outside of the valley  We ve realized building product as we have done in the past  is no longer the best path forward for creating new products  However it isn t always clear how to best design a team to blaze this new path   We need guidance on how to design a modern team   1  Modern Teams Are Cross Functional  Modern teams are cross functional and include at a minimum Product  Design and Engineering roles  This is important because the assumptions you make in new product development often revolve around desirability  design   viability  product  and feasibility  engineering   It isn t a secret that these roles are key in my Assumptions Mapping exercises   I advise teams from software to hardware  and they now often include additional roles such as Marketing  Finance and Data Scientists   If you are testing the consumer market with new product ideas  then   your landing page is useless without advertising   you ll still fail if you don t have a business model behind the product   you can t make a strong pivot   persevere decision without data   Create your team with Product  Design and Engineering and don t be afraid to include more roles when needed   2  Modern Teams Are 100  Dedicated  Modern teams are 100  dedicated  We ve seen countless studies on how multitasking kills organizations  It is the organizational equivalent of texting and driving  as our brains simply cannot handle the cognitive overhead   If you are trying to build a disruptive new product  then   you can t expect an engineer to fix Jira bugs all day and then magically be innovative   you can t expect a Product Manager to simultaneous keep 5 entirely unrelated products going strong inside your organization   you can t expect Designers to create engaging UX that hooks customers when they are spread across teams at 25  capacity   Creating new products is very  very hard  It s almost impossible to create a successful new product when you are dedicated to it  When your team members are multitasking across different initiatives  it s almost as if you don t even want to win   3  Modern Teams Are Data Influenced  Modern teams do not have to be data driven  but they need to be data influenced  Teams no longer have the luxury of just mindlessly burning down a product backlog of features  The accountability of modern teams now resides within the teams themselves  It is up to them to discover what to build and then keep discovering along the way   If you are testing a new product with customers  then   your minimum viable product needs to generate data  or it s just a prototype   you ll have to balance the quantitative  what  with the qualitative  why    you ll need to measure outcomes  not outputs   Your team should have strong opinions  held loosely  and be influenced by data  They are no longer held accountable by delivering a list of features  but instead giving an account of how they are making progress on business outcomes   4  Modern Teams Are Customer Centric  Modern teams are customer centric  We ve almost prided ourselves over the past decade in putting layers in between the teams and the customer  It hasn t exactly worked out well for us  To create new products today  teams have to know the why behind the work  This begins with being connected to the customer   If you are testing a new product with customers  then   don t stop doing customer interviews after you ve built something  keep seeking out how to better solve their problems   customer relationships are going to be a key part of your business model   remember that behind every feature is a customer job to be done   Modern teams are constantly connected to the customers both inside and outside of the product  If they ve purchased  ask them why they almost didn t purchase  If they re stuck on a pricing page  ask them what questions they may have  Customer discovery never stops   5  Modern Teams Are Diverse  Modern teams are diverse  Team members vary in race  ethnicity  gender  age and other dimensions  Of all the characteristics that make up a modern team  this may be where we are failing the most   The culture of your team makes it into your product   For instance  if a product was created by a team of all white males  there s a chance it will have a problem dealing with abusive behavior  You don t have to look very far to see real examples of this in today s world   This does not mean that all white males are inherently abusive  however if you do not experience online abuse  then it can be difficult to keep it top of mind when creating a product   A lack of diverse experiences and perspectives on a team will result in baking our biases right into the product   If we cannot design diverse teams  this is only going to become a bigger problem over the next decade with the scale of AI   Do you want your autonomous car to swerve away from a pedestrian   If you are a woman  should the VR headset you buy make you sick   If you are choosing team members for a new product  then   create a safe environment for different points of view to be heard   keep diversity top of mind  rather than an afterthought   lead by example  by having a diverse leadership team   Teams building products today require different points of view and the ability to have a healthy level of conflict  Your product will be better as a result   Designing Modern Teams  We have a long journey ahead in addressing the systemic problems in our organizations  specifically around team design  I am optimistic that by following these guidelines we ll not only have healthier organizations  but the market will reward you for solving meaningful problems,"[115 826 1030 39 1241 320 190 694 1061 1385 116]"
116,training-dataset/product/699.txt,product,Lessons learned from scaling a product teamThere s been lots written about how Internet businesses should build software  from books like The Lean Start Up  and posts from Google Ventures  but not many examples where startups open up their process and show how it really happens   Back in 2013  Spotify talked about how they build  but other detailed examples are hard to find  Maybe that s because it s a messy reality and people can be uncomfortable sharing that in public   Given the abundance of abstracted advice  primarily from advisors rather than operators  and lack of actual examples happening from fast growing startups  we thought it would be valuable to share more about how we work at Intercom  In the last 12 18 months  over dozens of releases from incremental improvements to huge redesigns  we ve learned a lot about scaling a product building team  and the nitty gritty involved in getting valuable product out the door as fast as possible   Our process is broken down into four main areas   A set of guidelines for making decisions Clear accountability A lightweight  transparent  comprehensive roadmap A culture of goal setting  Some things to keep in mind   This process is not right for every company  It is heavily influenced by our culture  Your culture is different  so what you do should be different   This process is by no means perfect  We iterate on it constantly  By the time you read this  we will have tweaked something   This process is generally working for us today  And whilst this works for our current team size  four Product Managers  four Designers  25 Engineers   it s not how we worked when we had a much smaller team  and it may not work when we have doubled our team   Nonetheless  we hope that by sharing how we work  we will help others reflect on how they build  and ultimately help them improve   1  We have a set of guidelines for making decisions  In order to grow and scale our product teams  people need a set of values to help them make good decisions that align with what we believe  To that end  we have a set of guidelines   Many small steps are better than bigger launches  We believe you achieve greatness in 1 000 small steps  Therefore we always optimise for shipping the fastest  smallest  simplest thing that will get us closer to our objective and help us learn what works  All our projects are scoped into small independent releases that add value to customers  Everyone should push everyone else to reduce scope and simplify  in order to move faster and not spend time on things that turn out not to be important   When we think about building  we think about daily and weekly goals  We believe Intercom has an incredible opportunity  but we are in a race against time  Every single day of work counts  Teams have weekly goals  broken down into daily and subdaily goals  Every individual should know at the start of the day what their goals are for that day  how they relate to the team s weekly goal  and to what is being released   We optimise for face to face collaboration  We believe things are faster face to face  Two people at a whiteboard generate more ideas faster and conclude in agreement quicker than any other set up we ve ever seen  Yes  remote working can be great for many things  but not for speed and efficiency of decision making  For that reason  our teams all sit together in one pod with one war room each  and we have a principle that if you can talk in person  you should do it   We fight against work work  Using software to build software is often slower than using whiteboards and Post it notes  We fight anything beyond a lightweight process  and use the minimum number of software tools to get the job done  When managing a product includes all of Google Docs  Trello  Github  Basecamp  Asana  Slack  Dropbox  and Confluence  then something is very wrong   The outcome matters much more than the plan  Having a plan is critical for success but nothing ever goes fully to plan  Plans are made with the information available at the time but only become fully clear as you execute them  The best teams absorb and react to new information  They are creative in executing a plan in an ever changing environment and fight to reach the same outcome in the same timeframe   2  We demand clear accountability  We work in small product teams  each of whom own a part of Intercom  These teams consist of a Product Manager  PM   Product Designer  Engineering Lead  and two to four Product Engineers  Because of this  it needs to be crystal clear who is accountable for what  To that end  we have a list   If the analysis of the problem to be solved is incorrect  it s on the PM  Ensure appropriate research is done   If the design doesn t address the problem  it s on the Designer  Ensure you understand the research and problem   If the design solves the problem  but doesn t fit with Intercom  deliver best practices  or is otherwise weak  it s on the Designer  Ensure you understand our beliefs  patterns and principles   If engineering doesn t deliver what was designed  or delivers it late  it s on the Eng Lead  Ensure you understand the problem being solved and design  plan appropriately and accurately before writing code   If it goes out with too many bugs and broken use cases it s on the PM  Ensure the team test realistic usage and edge cases   If the team is spending too much time on fixing bugs and not adding new value per our roadmap  it s on the Eng Lead  Ensure each project improves overall code quality   If we don t know how it performed  it s on the PM  Ensure success criteria are defined and instrumented   If it doesn t solve the problem  it s on the PM  Ensure there is a plan to improve product changes that don t fully solve the problem   Product building teams have natural grey areas and collaboration often means a better end result  So people within teams work this out themselves  But when it comes to analyzing what we spent our precious time building  the lines of accountability need to be very clear   3  We obsess over our lightweight  transparent roadmap  Our roadmap is the plan for what we will build over the next few months  It has three timeframes   The next 4 6 weeks are solid  with clear releases   The following few months are planned  with high level project briefs describing the problem and opportunity   Beyond a few months out is speculative  loose ideas that align with our mission   All other ideas for what we might build go onto a list  managed by the PM  reviewed regularly by the team   Our roadmap draws from three primary sources   Things we believe in   This is based on our opinion rather than research  in particular the opinion of our product leadership team  This includes trends we see and ideas we have   Qualitative feedback from customers   We have three sources of qualitative feedback   Solicited feedback from customers including studies by our research team  and conversations between product managers and customers  Our PMs use Intercom to talk to customers   Unsolicited feedback from customers that comes in via Intercom  Hundreds of conversations are tagged by our Customer Success team every week  reviewed by PMs  added to their list of things we might build in the future  and some are moved to the roadmap   Feedback from sales conversations  Our sales team share conversation notes with PMs so they understand barriers to people adopting our product  Our roadmap is reviewed monthly by sales and product leadership to ensure we re removing these barriers   Quantitative data based on measuring performance of our current product   We have two sources of quantitative feedback   The success metrics defined in every project   Product and team level success metrics   Everything in our roadmap is broken down by team objective  which is broken down into multiple projects  which in turn are broken down into individual releases  This is critical for us to live by our values  that we produce the most value for our customers with the fastest thing we can build  We also have strategic product themes that cut across all product teams  objectives  projects and releases  Below is a summary of how we tackle each of these phases   Product strategy themes  We currently have eight themes that we are folding into everything we do  To communicate the themes  we created a board for each that we hang on the wall of our offices   Each board has a title  a section describing why we believe it is important  the problem we re tackling  the opportunity it affords us  and illustrative concept sketches  Note that the board below is an old one  we ve since shipped integrations with Salesforce  Zendesk  Slack  and Zapier amongst others   Team objective  Each product team has an objective  This is a strategic goal that will take a few months to achieve  These are our big bets  the aggregation of which form our product strategy     The project brief  aka The Intermission   The Intermission is our quirky name for a project brief  This document is the responsibility of the Product Manager  It is restricted to less than one page and must succinctly cover the problem we re solving  how we will measure success  and the scope of the project  It never includes solutions because this comes later  The goal of the Intermission doc is to have a shared understanding of what we are building and why   The Roadmap in Trello  Because we move very fast with short release cycles  between one day and two weeks   we can have up to 5 or 6 Intermissions in play  and 10  releases being worked on at once  We use Trello to stay organised  Everything in Trello is owned by the PM  We have a Trello card for every release we do  and that card includes links to design work  We have five product teams and the colour on the card denotes the team responsible  To force accountability  we have a rule that only one team can own a release  If something slips we add a red label so we can keep track of any slippage patterns   The Intermission card in Trello  Each Intermission has a card in Trello  That card links to the Intermission doc  and to the releases within that project  It also contains a checklist to make sure we didn t forget anything  Sometimes we knowingly check things off without doing them  the checklist is for checking  not for mandating   The release card in Trello  Each release has a card in Trello that links to design work and any supporting docs that explain product and design decisions  Each release card also has a checklist broken into five sections  Design  Build  QA  Beta  Full release  Post release  Again  this checklist is for checking  not for mandating   4  A culture of goal setting  Weekly goals and Hustle  To ensure we stay focused and stay on track we set weekly goals in each product team  These goals map to releases from our roadmap  include reducing bug counts  and system improvements that will enable us to move faster in future  We built an internal tool called Hustle to keep track of goals  Hustle is worth a blog post in and of itself   for next time  As well as goals  it pulls in our roadmap via the Trello API  and pulls in a summary of our open bugs via Github s API  The main thing to understand here is that teams set weekly goals and are held accountable to them   Daily goals and the whiteboard  To hit our weekly goals  individuals have daily and sub daily goals  This reinforces the idea that every day counts  Each product team has a whiteboard that they use to track daily goals  They set them during their morning stand up   Weekly demos  Every Friday at 5pm  we all gather round our big screen in our canteen  people grab a beer and the engineers demo what they worked on that week   This reinforces all that we believe in  Cadence of building matters  We re in a race against time  Everything we build should be broken down into steps that can be built in less than a week   This process has changed  We are constantly examining and iterating our process  Every week we learn new things  This captures all we ve learned so far  These are lessons we learned that hard way  by getting it wrong and trying again  Building a product in a fast growing company in times of rapid change is very very hard  Hopefully this helps you reflect on and improve how you build product  We d love to hear your war stories below   Want to read more of our product best practices  Download our free book  Intercom on Product Management  It s recommended by folks like Ryan Singer  Hunter Walk  and Dharmesh Shah,"[116 1030 1218 333 826 955 17 769 190 1339 503]"
120,training-dataset/business/311.txt,business,The Pivotal Stories Every Startup Leader Should Be Able to TellAt Facebook  Don Faul and his team faced one of the more goliath tasks anyone in tech has ever faced  It was his job  as VP of Online Operations  to ensure a good experience for the site s hundreds of millions of users   including responding to reports of abuse  flagged content  and other bad experiences  This boiled down to supporting his intrepid team members   sometimes spending entire days dealing with the toughest of human issues   to do their best work and stay motivated against overwhelming odds  The skill that made the critical difference  Being able to tell good stories   It s not something that came naturally to him either  He had spent the first five years of his career as a Platoon Commander in the U S  Marine Corps    an environment that didn t exactly encourage emotional vulnerability  It was only through his work at Google and then especially Facebook where the importance of empathy and admitting failure took hold  and he poured hours of practice into relaying his experiences to inspire others    Whenever I meet with new leaders  I always talk about their responsibility to inspire people   to tap into that intrinsic motivation to be there and work hard   says Faul   We re fortunate to work in an industry where meaningful work is getting done  and people badly want their work to be meaningful  Stories connect the two  It s the skill every leader needs to learn    In this exclusive article  Faul shares the nuts and bolts tactics of influential storytelling he s learned at Google  Facebook and as Head of Operations at Pinterest  he s the first to admit he s still learning    and the three types of stories every manager and startup founder should be able to tell fluently   WHAT MAKES STARTUP STORIES WORK  No one will give you money or agree to work for you if you re bad at storytelling  Every pitch   whether it s to a VC or a sales prospect   is a story  and the best ones have compelling narrative arcs that connect listeners to a higher purpose  says Faul  Today  he s the COO of performance sportswear maker Athos  and this is critical to building the company every day  The number one factor for success  Enthusiasm   Can you raise the hair on the backs of people s arms  Inspiring confidence is all in your delivery   In most cases  a story succeeds when you connect a smaller idea or action to something bigger   a purpose  a movement  an emotion  This is how you get people to follow you on a journey  whether they re a customer following you through your product  or an employee agreeing to grueling startup hours to be a part of your vision  This skill becomes essential as soon as you have even one employee  says Faul  It s your responsibility to keep them connected to the dream of what you re building together   through the hardest of times  You have to look at it as an integral part of your job  just as or even more important than your product  engineering or design skills   THE LEVERS OF GOOD STORYTELLING  Connecting to Mission  The undercurrent of every story you tell as a manager has to be your company s purpose  At Facebook  Faul felt that his job managing the user operations team started with the organization s drive the connect the world in positive ways  He knew a thread had to run directly from this central company purpose to every single individual on the team  Every person had to be able to relate to the company s purpose  and their work had to have a clear and understandable impact on this purpose  In many cases  especially as companies grow  this becomes less and less clear  People s work becomes increasingly narrow and niche  Stories are vital for clarifying ties between people s every day and the long term objective    People s intrinsic motivation comes from feeling that they re doing something important  Their work moves people  It powers a vital part of the company   says Faul   Every single place I have been  there have been difficult times and tapping into this drive was the most important reason we retained talent and made it through  When I was in the Marines  we had a lot of unimaginably hard days  The leadership had to make us feel confident that our work  and therefore our commitment to the work  mattered    Amplifying Emotion  In addition to underscoring purpose  good stories evoke emotion   real  raw human emotion   What happens in those moments where you feel yourself on the edge of crying  Or you feel your heart expand  Or you smile involuntarily with joy    In these moments  really think about what is happening to trigger these feelings  How can you create experience with this type of resonance in the lives of your employees   Faul says   When people look at their work through the lens of human emotion  everything changes and they better understand the gravity and importance of their work    He often tells managers on his team that he wants every single person to feel excited to talk about their work at weekend parties and after work cocktails   because what they re doing is meaningful  When you look at the anatomy of this feeling  it s a combination of pride  conviction and happiness  What events and behaviors cause you to experience these emotions  Perhaps it s overcoming an obstacle  expressing genuine gratitude for a teammate  appreciating high quality work  When these things happens at your company  you can double down on the impact by pausing and reiterating what just happened  Really take time to soak it in and celebrate it  If you don t  your team won t  Everyone s default is to move on to what s next   Remember also that people attach emotion to individuals  They love rooting for people  They love experiencing the world through others  eyes  The more you can tell stories about actual people that connect to the broader purpose  the more your audience will feel and not simply hear what you are trying to tell them  For example  you might highlight the work of one team member in particular  and explain how it nudged the entire company closer to an important metric  You might emphasize the level of craftsmanship they brought to their work  how they assisted a teammate in need  how their depth of belief in the company led to something incredible  When you talk about the genuine feelings one person has  you re leveraging social proof to help others reach the same emotional place   Being in Service  Practice will make all the difference to the quality of stories you tell  Faul remembers when he first started focusing on storytelling at Google  he often came off as dry and not very inspiring  He had to invest hours and hours in becoming an a natural at narrative  But he couldn t have done this without finding his own drive   and that came from being in service to the people he was managing   The people in my life who tell stories that give others the chills   they work harder than anyone I ve ever known to do it  They practice hundreds  not just dozens  of hours    I firmly believe that leaders at companies need to be in service to their people  They need to ensure they have everything they need to succeed   says Faul   One of the most critical needs they have is a complete picture of why they should show up and pour their heart into their work every day  It s not a nice to have  it s a basic need    If you re having trouble prioritizing storytelling at your company  he recommends reframing the skill in this way  It s a service you re rendering to your employees   more important than lunch catering or great equipment  Give it the time that level of importance merits   Putting Yourself in Their Place  Your employees will be energized by any story that shows that you ve been where they are before  and that you   as their leader   understand their experience  says Faul  This is true for a host of reasons  They want to know that the people shaping strategy and making decisions see the impact it will have on people  They want to know they re on the same path to success  They want to be able to feel safe and heard and valued  The more you can make it clear that you ve been in their shoes  facing the types of challenges they face  the more effective you will be   This means really inhabiting and feeling the frustrations  fears  stress and disappointment that your team encounters along the way  These aren t positive emotions  They re hard to weather and relive  As a manager  it s easy to want to be teflon  to have all the answers  to seem effortlessly successful  and therefore credible   But real credibility comes from accepting how hard things really are and providing a roadmap for others to survive and grow stronger from similar challenges    At Facebook  I worked for a guy named Dan Rose who was really  really good at this   says Faul   In 2012  we faced a number of tricky situations and Dan would tell us stories about his time at Amazon and similar struggles he faced there  He was open about having the same anxiety we were all feeling at the time  Because he shared that so freely  we trusted him when he explained how he d navigated through those tough times  It gave people a level of comfort that we d find a way to work through it    By empathizing and making himself vulnerable to criticism  Rose built trust and confidence  It feels counterintuitive to let down your guard  You think it will have the opposite effect  but you have to lean into that tension and discomfort  As much as you can  you have to put yourself in the place of the people on your team so you can authentically relate   When asked about the best leaders he s ever observed  Faul immediately cites General James Mattis  who replaced David Petraeus as head of United States Central Command  He recalls one particularly cold  harrowing night in Afghanistan when the Marines needed to defend an airfield in the middle of hostile territory  The general spent hours standing a post side by side with a 17 year old soldier  talking to him to understand what his experience in the Marines had been like  how he was feeling  how things could be better  Here was a man in charge of all of the forces in the region  and he made it his business to fully comprehend the life of one soldier  Faul says   Obviously  running a tech startup is different  but the principles of good leadership are strikingly similar  If you don t have a past experience you can use to connect to your team s current plight  get familiar with what s happening for them now  Listen to their stories  so you can eventually tell one that will speak to people and make them feel seen   This degree of empathy is closely tied to the first of three different types of stories Faul believes every manager should tell frequently and deliver compellingly  Read on to learn how to develop each of these narratives and tell them in a way that moves people    1 THE FAILURE STORY   Being vulnerable is one of the most powerful things you can do as a leader because it shows you re genuine  Being genuine builds trust  Trust is the key to getting anything done   says Faul   If you re willing to tell everyone on your team about your mistakes  your shortcomings  what you re currently working on to get better  you seem more human  It s easier for people to connect with you  They have an easier time believing what you say  and that you re taking their wellbeing into account    It also gives people permission to take bigger risks in their own work  If your team knows about times you tried to do something and failed  they will also see that you recovered and went on to succeed  They won t feel hard pressed to be perfect or place small bets so they always win  When you re at a startup  you can t afford to play it this safe    At Facebook  Sheryl  Sandberg  used to talk very publicly and encourage other leaders at the company to talk very publicly about things they tried that didn t work and what they learned from it   says Faul   She would tell specific stories about the smartest people she knew  how they had stumbled  and how they had worked through failure  The way she told these stories  the people were very real to us  The feelings they experienced when they failed were very real  But the idea that the company was learning and moving forward was also very real  She made it clear these experiences were the foundation of Facebook s culture and something to take pride in    Faul remembers when he first started leading people in the Marines  being vulnerable was very difficult for him in the same way it s hard for many new tech managers   You don t want to show any sign of weakness because you want to convince everyone   maybe mostly yourself   that you re there for a reason  you re not a fraud  you don t have any doubts   he says   His attitude toward vulnerability and sharing failure didn t start changing until he arrived at Facebook and saw the example set by Sandberg and Mark Zuckerberg  Now he feels responsible for modeling this approach to the managers on his own team  It s one of the most powerful ways to pass these skills along to more people and strengthen your entire organization   I saw firsthand the way my relationship with people changed once I started talking about mistakes  The entire environment of my team changed  Everyone started sharing more openly   One of the key failure stories Faul shares draws his time at Pinterest  Early on  he worked on major projects related to the company s culture   I know there were many pieces of this I approached the wrong way  I made some bad decisions  including one that didn t get the response we wanted at all inside the company   it just didn t land   he says   It was my first big  visible failure as an executive  and I knew it reflected poorly on me  I had to work through that  acknowledge the failure  apologize for it  discuss it over and over again  It was incredibly hard for me to do    Instead of sweeping the episode under the rug  he now tells this story again and again  Whenever his team confronts a similar situation or makes a mistake  he recalls it  Because the truth is  he did get through it  His team at Pinterest not only survived but went on to other successes  Knowing that recovery is possible on this level generates productive psychological safety for everyone involved   There s another story in this genre Faul tells  that almost everyone working at a startup will relate to at some point  After he was at Facebook for a while  Sandberg   his manager at the time   hired someone new to take over a large part of his job   This was honestly one of the hardest moments in my career   one of those big moments where I felt like a failure  like I wasn t moving forward   he says   When we talked  she told me that it was because the company was scaling and this is a normal function of scale  Now I can see it was 100  the right decision  but at the time it felt awful    Fault s told this story 100 times  he says  to make it clear to people on his team that this is something even the best employees will go through at fast growing companies  It s important that he admits the depth of the emotion he felt  and even that he questioned what was happening and doubted himself  Because this is what he knows people he manages will experience    I can tell people   I ve been through this and I legitimately know that you re going to make it through this and be fine  be better  do more    he says   Now I have three or four stories over the course of my career like this that I tell to soften these hard moments for the people I work with and give them the confidence to endure and stay excited    Being vulnerable doesn t weaken your authority  It strengthens everyone else around you   Let s say you re new to management  new to storytelling  and uncomfortable with being this open  If this is the case  start small  Faul says  For instance  if you re a founder  and being vulnerable with your whole company feels impossible  start by being open with just one of your first employees  The more people you try to reach this way initially  the more pressure you will feel  and it can break you   You want to get some success under your belt  Open up to just one person  or two people you really trust  See how they respond and how it changes their work style and ethic  Chances are  you ll get a positive reaction  he says  Plus  it will give you a chance to strike your own balance between vulnerability and confidence  You don t want to share messy  doubting  fearful emotions without some resolution  Don t leave people scared about the direction and future of the team or the company  Instead  use vulnerability to fuel your conviction in the path you re charting now   The second tactic for nailing failure stories  Choose your words carefully in advance   When I feel people getting worried around me or not taking the big risks  or trying to rebound from a mistake  the first thing I do is sit down and write out the story I want to tell them   says Faul   It s so important that I find the right language that will make it clear I know what their feeling and that there s a solution  I ll even practice with my wife  I don t think people should expect to be good at this spontaneously  And it s so important to get right    When he prepares what he wants to share  he always asks  Is my message clear  Is it simple  Does it evoke emotion  Is it the type of story that members of your team will tell your friends in a conversation about why they love their job or the company  The answers all have to be yes   Don Faul  left  talking about his experiences in the Marines in front of an audience at Facebook    2 THE GOOD EXAMPLE STORY  One of the best stories to encourage great work  behavior  actions  etc  is a story exalting an individual has exemplified these traits    Stories are incredible tools for reinforcing the quality of work you want to do or the type of behavior you want people to exhibit   says Faul   Especially when you re trying to help your team live the company s cultural values  giving them lots of rich examples of people doing it already makes a huge difference    For instance  Faul has continually noticed how hard it is for people to offer feedback to managers  particularly those a couple tiers higher in the organization  As a result  leaders often get the least amount of constructive advice for improvement  when they should probably receive the most  People are afraid  They re intimidated  They don t want to offend or burn bridges  Telling people it s important to offer this feedback isn t enough  The only thing he s seen work is telling stories that champion this behavior    At Facebook  there was a well known story about an intern who  when given the chance to ask a question of a top executive  offered constructive feedback about a television interview the person had recently given   says Faul   That story has been told now dozens of times to show how important it is to speak your mind if you think leaders can get better  To show that that type of courage   to say something difficult to help boost performance   will be rewarded    You want good example stories to become part of company lore  This is how values truly become the fabric of your startup   not by posting them on the walls or repeating them during an all hands   There are now thousands of Facebook employees who can probably tell you some version of the intern story   says Faul   Repetition is your key to success here  Even if people memorize your mission  vision  value statements   they probably won t internalize them  Stories about other people living these words are the best way to make them meaningful    At Pinterest  CEO Ben Silbermann did this extremely well   he says   He would start every all hands meeting with a customer story   a different customer every time   and how different people within the org had made success happen for the company and that customer  He s always deliberate and crystal clear  Everyone got to see our mission and the way we want to work in action through these stories every other week    Getting good at this is vital for early stage companies  There s so much going on  so many needs  so much fast action required  that communication ends up being very ad hoc and fragile  It s easy for people to lose track of what s going on  company priorities  why the work is important  Telling stories about people doing good work that maps to your highest priorities will align everyone around what they should be doing   This solves another common issue too   Most startups don t spend nearly enough time recognizing people   says Faul   Most people need to know their managers and org leaders see their hard work and value it  They re hungry for this type of acknowledgment  When you tell a story about them  you kick their motivation into hyperdrive  and you make them a model for the rest of the team to follow their lead    One of the best ways to build a good example story is to slowly zoom out  Faul gives customer operations as an example  Perhaps a support team member had an incredible win and saved an account for the company  You d start by explaining what this person did objectively and what they achieved  Then you use what they did to explain why the customer support function is so invaluable to your company strategy  From there  you can talk about the level of service you want to provide company wide and what this looks like  And finally  you can touch on how this will power the overarching mission   Another example  Instead of telling everyone how important it is to hit deadlines  or castigating a team over a missed deadline  you can take every opportunity to acknowledge the people who excel on time  You can use their experience to explain why timely work is so important  what it makes possible for customers  how it changes the way the company is perceived  and how it helps everyone deliver on the promise they ve made to the market   With one narrative  you can fuel a top employee  set a positive example for an entire functional area  underscore company values  and connect the work of individuals to the bigger picture  This is what makes the good example story indispensable  It s incredibly versatile and effective    You have to treat things like quality and discipline as core competencies your organization needs to win   says Faul   At Athos  we re trying to build the most sophisticated strength and conditioning training system on the planet  To do this  we need everyone to know how high quality our products are and how aspirational our brand must be  If we can t get this across  it won t matter how good our product actually is  So everyone needs to be pushing for this all the time    The stories he and his fellow executives tell are about people who believe every tiny detail matters and act accordingly  The people who are immediately responsive over email to customers  The people who think through more graceful packaging solutions  The person who decided to use a certain color thread in Athos  garments to give them their premium look and feel  These stories get told repeatedly over email and in meetings  until everyone automatically connects these actions to the long term vision of the company    3 THE INSPIRATIONAL STORY  That connection between individual employees and the broader purpose of your organization is very delicate and one of the first things that breaks during scale if you re not very careful  Inspirational stories serve as the glue making sure these separations don t happen  As a founder  it s important that you not only invest in telling these stories  but also in your managers learning and being able to do it too   Telling an effective inspiring story starts with psychologizing your audience   and  to an extent  building an audience you know will be receptive to your message  For instance  at Athos  Faul knows that employees are passionate about athleticism  about helping athletes achieve better performance  Many of them have a background playing sports or doing yoga or strength training  He himself was heavily involved in high school and collegiate sports  Based on this knowledge  he knows the company s mission to build better athletes will resonate  and that telling stories about how Athos is actively strengthening athletes will incentivize excellent work    You want to tell these same stories in your recruiting process and watch carefully to see how they land with candidates   he says   This is how you can select for people to enter your mission who you know will care about it  These people will always do better work than those that choose to be there for the money or the brand association  or even because they think the product is cool or the problem is interesting  As you build an organization  you want to draft people who will not only be bought into what you re doing  but the stories you tell to drive people forward    Inspiration requires even more rehearsal than the other types of stories  Whenever Sandberg needed to rally people behind a project or cause  they would dedicate hours to refining their language  practicing and infusing their words with the emotion they wanted people to feel    Trying to be inspiring and missing the mark is painful and damaging   says Faul   I know because I tried to do it a many times before I was ready  Now I take the time to think through every inch of these stories  I feel that I owe it to my team  It s one of my biggest responsibilities    Knowing what you want to say is a good start  but you really need to have the right structure  You want to sit down and outline  What information should come first  Who are the protagonists people can relate to in your story  What is the arc of the narrative that makes the story new  interesting  different  counterintuitive  resonant  When you practice in front of people  what grabs them  When do you see the emotion on their faces  How can you double down on those remarks  Sometimes  Faul s team members will see him apparently talking to himself in his car in the parking lot  But he s not  He s practicing stories    You have to figure out what works for you  I personally don t like memorization because it doesn t feel organic  and my delivery can be a bit stilted  Some people love memorization   he says   Some people want note cards with the four bullet points they have to hit  The real advice here is to do whatever makes you feel and act comfortable  That s all that matters  And know that it will definitely feel uncomfortable the first few times you do it  That doesn t mean you re doing it wrong    Remember  an inspiring story is a service you re providing for people you care about   There are several components most inspiring stories share   First  they re aspirational  They touch on what the future could look like  Actions your team could take  Quality you have the ability to deliver  Stretch goals are motivating  People want to tackle new things so they can learn and grow  The suspense adds drama that moves people to be their best  There s positivity in accomplishing a leap  of course  But don t discount the positivity that comes out of trying  failing and learning too  Don t be afraid to set the bar high   Competition inspires  People instinctively want to be the best  But you don t have to be talking about competition with another company or a common enemy  You an talk about competing with last year s numbers  last month s customer pipeline  etc  People want to compete with themselves  But if you don t frame things in this way  you re missing out on that source of motivation   Express the confidence you want people to have in themselves and the organization  Act as if it s already been earned  You know something they don t  You see the successful outcome already  According to Faul  this was another strength of General Mattis   Shortly after 9 11  Faul found himself in Kandahar listening to Mattis give a speech to 300 Marines   I remember  we were all extremely nervous but not admitting it  Candidly  we were scared and we had no idea what was going to happen   he says   The general didn t ignore this  He talked about the sacrifices he knew we were all making  and how natural it is for humans to feel fear  But then there was a turn and he shared  plainly  how confident he was in each and every one of us  He reminded us about our training  how prepared we were  and how he was certain that we would triumph    That speech touched on so many of the great storytelling mechanisms  He empathized with how he knew the Marines were feeling  He held up the example of those that had excelled in training  He challenged them to rise to the higher purpose they were serving  and he expressed unqualified confidence in their abilities    I remember feeling this incredible level of strength and optimism after hearing that speech   says Faul   I had probably exchanged three words with this man  but the story he told about us and our training made me trust him and trust myself  I remember thinking how the right words can be so powerful  They can make you feel like anything is possible,"[120 1061 17 19 1154 190 1421 1003 826 1146 962]"
128,training-dataset/product/578.txt,product,Defining work plans and high level objectives with  Roadmap Week When Asana was a young company of just a few people  we experienced a phenomenon that s common with early stage startups  Just about every day  someone would come to work with a new idea   A good idea  no less   Most of the time  we said   let s do it   Until we got distracted by the next new idea   On the one hand  it s hard to make meaningful progress when you re constantly open to changing strategy  On the other hand  rejecting all new ideas is the opposite of fostering the kind of organization that can learn  adapt  and react quickly   That s why setting aside time to make meaningful  structured work plans and then carrying out those plans is so important  At Asana  we consider the planning process to be just as critical as the execution process  You wouldn t run a race without a route  Similarly  it s difficult to run an organization without mapping out clear goals   Sketching out a roadmap  There are many ways to do planning  After years of prototyping our own systems  we ve landed on a model that works well for us  and that may work well for you too  We structure our calendar into  4 month periods we call  episodes   During each episode  we stick to our plans  As new ideas come up  we write them down and table them for later   In between each episode  we hold a weeklong event called Roadmap Week  Roadmap Week is when we reflect  integrate new ideas  and plan just how we ll carry them out  The whole company comes together for both high level reflection on how the last episode went  and high level planning on how the next episode should go  It s a time to dream big and review all those ideas we wrote down over the past few months  Large strategic pivots are now on the table   The week is driven forward by committees that facilitate a series of meetings focusing on everything from deployment and scalability to metrics and design  We take an honest look back on our successes and failures  discuss our goals and deliverables  map out the next episode s key milestones  and envision new ways to experiment  Because we consolidate many meetings into that week  we have fewer meetings throughout the rest of the year   Sometimes people say   I don t have time to do these kinds of planning exercises   We ve found that we don t have time not to do these exercises  Without a clear plan  you might find yourself running a race without a route perhaps quickly  but in the wrong direction   Ultimately  organizations exist to accomplish goals  Succeeding at those goals comes down to being clear about exactly what you re trying to accomplish   clarity of purpose   and how you re going to get there   clarity of plan     Here are some of the major ways we ve benefited from implementing Roadmap Weeks   Learn from your failures   We look carefully at our ideas and goals set forth during our previous Roadmap Week  and inevitably  many of them won t have come to fruition  That s okay  You can often learn more from failures than successes  Deconstructing where  and why  something went wrong gives you the chance to both identify warning signs and avoid similar courses of action in the future   But also from your successes   Of course  it s just as important to recognize and celebrate our achievements so we can replicate them elsewhere  Looking at how ideas were implemented successfully means we can use similar approaches that will lead to more successes   Lean into big  bold ideas   Roadmap Week is our chance to look at all of the big ideas that came up during an episode  and evaluate them objectively  In the course of an episode  I personally will generate five new big directions we could take the product  they all look great when they re shiny and new  but by the time Roadmap Week rolls around  only one of them will seem actually worth pursuing  Once we identify the ideas that have staying power  we sketch out a realistic work plan  and put individual next steps in Asana   Collaborate with teams that otherwise wouldn t work together   Roadmap Week is an opportunity to bring together individuals from teams that don t normally interact day to day  It s a chance to hear from people from different parts of the company  who might have ideas about areas they don t normally work on  For example  often a product team will present an idea for a feature  and someone from our customer success team will be able to correct their assumptions about what customers actually want from the feature   Anticipate problems   In mapping out how to execute a goal  it s worth brainstorming all the potential roadblocks that could impede you  These obstacles can often be gleaned from past failures  Other times  they re determined by vividly imagining just how certain scenarios will play out   Pre morteming  is surprisingly effective  Pretend it s four months from now  and the project has failed  what went wrong   Capitalize on collective energy   Roadmap Week is not only a reset  it s a time for teammates to come together  celebrate all you ve accomplished  and enjoy the freedom of open ended creative exploration  Ideas produce inspiration  and inspiration produces dopamine      It s a pleasure to harness the collective passion and excitement that comes out of dreaming big  together   If you re interested in building a framework to create your own Roadmap Week  read our guide to forming successful committees that host productive planning meetings,"[128 769 116 17 333 503 180 77 458 391 1218]"
141,training-dataset/business/1321.txt,business,Three Powerful Conversations Managers Must Have To Develop Their PeopleThe fog of war envelops every battlefield  When the plan breaks down amid the chaos and ambiguity  how do young Marines know what to do next  How can they take relevant action in the present when their carefully detailed plan has been rendered useless  Every leader communicates something called Commander s Intent   effectively an end state or envisioned future of the battlefield when all is said and done  Understanding this vision  even the most green Marines can take decisive  relevant action right now  Managers should equip their people to achieve the same level of clarity in their careers  says Candor  Inc  co founder and COO and former military leader Russ Laraway     Laraway believes that managers can grow and retain top talent by helping their employees articulate long term vision for their careers  His approach has made him a sought after advisor on the issue of employee retention and talent development  While at Google  his framework for career development led to more than a 10 point bump on engagement scores across hundreds of employees  In addition to Google  Laraway s career spans operational and management roles at Twitter  founding and leading his own supply chain consulting firm and serving as a Company Commander in the Marine Corps  in which he oversaw 175 Marines   Drawing from his talk at First Round s CEO Summit and additional conversations  Laraway explains a servant leader s approach to career conversations  a tool that accelerates development  enhances engagement and boosts retention in teams  He lays out a step by step approach for creating meaningful dialogue and details pitfalls to avoid  Any startup seeking to keep its talent for the long term will gain helpful tips from Laraway s framework   Why Career Conversations Are Your Secret Weapon  Companies face both a threat and an opportunity when it comes to their employees  long term career aspirations  First  the threat  if managers just lead their employees merely with the day to day in mind  they ll lose some of their best people sooner than they might have otherwise  Laraway has found that career conversations   deep  meaningful dialogue coupled with action plans around measurable goals   go a long way in keeping them around for longer   Conversely  the opportunity when it comes to managing your people is the chance to be a servant leader  a concept coined in the 1970s that says the best leaders live to be in service to their teams   One way to know if you re exhibiting service leadership   Laraway says  citing leadership expert Robert Greenleaf   is if the people under you are growing and developing     I ve seen this play out in practice over and over and over  People are surprised that they can grow towards their dreams and stay put in their current role   says Laraway   This is one of the side benefits to this approach to career conversations  It can reduce any ants in the pants of wanting to leave or be promoted  As a manager  one of your prime jobs is to help the people on your team develop    Leaders  do you have what you need to invest in your people with the same focus and fervor you want them to give your company   Candor  Inc  s COO Russ Laraway speaks at First Round s CEO Summit   Four Ways To Screw Up Career Conversations   You have to be careful not to take shortcuts around this initiative   Laraway cautions   Your people will grow with or without you  The question is who will they grow into    Laraway has refined a process for figuring that out  He outlines four approaches to career conversations that frequently backfire   Don t have them at all   The first problem with career conversations is that they re not happening  A lot of times  folks don t know it s their duty to talk to someone about their career  Or  if they do realize it  they don t know exactly what to do   Laraway says   Even worse  there are  imposter conversations   such as performance reviews  which are inherently backward looking  whereas good career conversations are mostly focused on a dream in the future    Performance reviews are backwards looking  while career conversations are forward looking  Performance reviews   career conversations   Limit them to the near future   In thinking about career conversations  the short term is not a good way to think  The idea that discussing promotion equals discussing career  Nope   Laraway says   Promotions  at their very best  represent an incremental increase in scope and growth  At their worst  they re nothing more than a title and comp change  a nice formal recognition for a job well done  Promotion conversations do not equal career conversations    Just check the box   Big Bad Company Inc  s CEO convenes all the VPs and they put up on the screen the recent scores from the engagement survey  They discover that in three to five years  a bunch of people are going to leave because they re concerned about career growth and development  Panic ensues   says Laraway   I ve seen this a number of times in more than one company  An HR person chimes in and says   You know what  We ve got to get everybody on an IDP  an individual development plan   Boom  Problem solved  The VPs  desperate for action  say  Yes   and relay the message down the line to directors  managers and their teams  Employees burn their weekends putting together their IDPs  Monday comes  They say   Got my IDP   Box checked  squared away  Then no one looks at the IDPs again  It is a terrible process  but the box has been checked  That s a problem    Improvise  People sometimes approach career planning in a start and stop  half baked way   We plan a lot of things  We plan our families  plan our weekends  plan our vacations and plan our meals   says Laraway   It s a little crazy to me that we don t often put a lot of energy  intentionality  or conscientiousness toward our careers  We need to put a little more structure around that    The way to fix this imbalance is to follow the framework Laraway lays out for developing career action plans and having serious  meaningful   and even amazing   conversations with your employees  By doing that  you can really help them grow towards their dreams  By investing in your people in this highly differentiated way  often they ll say   I m growing and my manager has my back  The grass isn t always greener on the other side    It s hard to keep books upright without bookends  You must understand someone s past and future to know how to order the present   Three Career Conversations You Should be Having  A decade ago  in a conversation about career planning  Sheryl Sandberg told Laraway   You have to have a long term vision and an 18 month plan   Her advice was in response to some flawed thinking that she d observed in how people   including herself   were thinking about their careers  She talked about two broad problems  First  people are inclined to plan their careers step by step  the mistake she made   Or they do no planning at all   Laraway says   If she d have stuck with that very carefully designed plan from earlier in her career  she would have not taken that Google opportunity  which was a very meaningful slope changer in her career trajectory    Instead  take another path forward when it comes to career conversations  Laraway breaks down a three step process for helping your employees develop both short  and long term plans  Each of these steps involves about an hour of investment approximately two weeks apart from one another  These three approaches help surface the key components of your employee s path  their past  present and future   1  Be their Barbara Walters  Take an hour to get to know your employees   deeply  Begin with the phrase   Starting with kindergarten  tell me about your life   Then probe with more questions when they talk about pivots in their lives   Laraway took this tactic with a direct report  who mentioned switching from cheerleading to swimming while in high school   I became curious about why she liked swimming so much better than cheerleading   What was it about swimming   She said   I never really thought about it  but when we worked hard and we spent a lot of time in that pool  we had tangible outcomes on the backend  We reduced our times or maybe even got to the podium    says Laraway   It became really clear through that story  and others like it throughout her life  that she deeply valued hard work leading to tangible outcomes  It was so clear to both of us because of the story    Look for the patterns over the course of your people s lives that give you strong signal and just write them down   In this case of the cheerleader turned swimmer  I wrote   Hard work leads to tangible outcomes   Then I wrote down the story   Cheerleader to swimmer    Laraway says   It s not rocket science  I had pages of notes that yielded a list of 5 10 values and motivators that helped us have a shared  textured understanding of what she cared about and what brought her to this point    2  Spot their lighthouse and bring it into focus  Articulating a clear vision for an employee s future is the most important step  Ask your employee about their dreams    Maybe we re a little skeptical that a lot of our millennials  for example  will know what they want to be when they grow up  In fact  some of you are thinking that you don t even know what you want to be when you grow up  That s common skepticism   Laraway concedes  but he continues   I ve run this process hundreds of times  and never had a person who couldn t tell me about their dreams     The idea is to try to get employees to start to talk to you about their dreams  or three to five of them if they don t really want to commit to one idea  None of it should be time bound   no 10 year plans  Ask what this person would be doing at the pinnacle of his or her career   when they re feeling challenged  engaged and not wanting anything else     What we have now is a blurry  fuzzy lighthouse out in the distance  The goal is to try to bring that lighthouse into focus  We want to see the paint chips  We want to see the red tiles on top  We want to see the seagull perched on it  We ve got to ask a few more questions   Laraway says  He suggests the following three questions for focusing the vision only after you both understand the dream   What size company do you imagine working for   What industry do you want to be in   Do you want to be in a very senior individual contributor type role or very senior management type role   Russ Laraway  Laraway had an employee  Jane  who articulated this vision  Own and operate my own spirulina farm   This woman had also noted in her life story conversation that the happiest she ever was in her career was when she  built something from nothing  at a former employer  so this vision was aligned with what she valued most  Knowing her wildest dreams helped Laraway place her in a position that would deliver experiences that would compound and prepare her for where she was headed   even if she was in a different industry currently   We were working in digital ads at the time at Google  Together  we were able to take the right actions given her vision  and advocate for her to get training that would be valuable for her as an entrepreneur   Laraway says   We were both extremely happy with the investment we made in her  She stayed at Google longer than I did  and continues to grow in the digital ad space at Facebook  The spirulina farm is still the lighthouse in the distance  and that s ok    3  Create a career action plan  Armed with a shared and textured understanding of your employees  key motivators  and a clear articulation of their own envisioned future  now you re ready for the next step  crafting a detailed action plan  These will map out   in great detail   exactly how your employee is going to reach that vision for themselves  Think of it as a roadmap to self actualization    Now we ve got it  We ve got an understanding of the person s origin  path taken to this point  what they care about and what drives them  Now we ve got a clear idea of this lighthouse in the distance  We know their dreams   what lights them up  We know how they envision their future   says Laraway   That arms us with all we need to take relevant action right now and start to build the career action plan    Four Steps to Design a Career Action Plan  At Candor  career action plans are developed into four parts  Each part has 2 5 action items  Each action item should answer  Who will do what by when    If those three questions aren t answered  you don t have an action plan  What you have is that IDP exercise  Who will do what by when  That s an accountable plan  That s something you can work on and manage toward   Laraway says   Here s how career action plans should be created   Develop their role  If you understand where employees are trying to go  you can make adjustments in their current role to move them in the right direction   A lot of times when we think about career  we re a broken record  stuck on  what s next  what s next  what s next  People are hungry to know what their next job will be  or when that next promotion is coming   Laraway says   If people feel like they ve got a manager who s got their back and investing them in a differentiated way  it s a different result  If we re being explicit about doing some things in their current role that can take them toward the end goal in their career  that helps reduce the ants in their pants a little bit  People tend to want to stay put    Enhance their network  Help them identify the people who can inform and influence where they re trying to go   This can entail everything from helping set up informational interviews to being their sounding board to help pressure test their thinking   says Laraway   Influence is pretty straightforward  Who are the people that can help uncover opportunities that ll take them closer to their long term career vision  Identify those people and help them get some meetings    Laraway stresses that it s a way of providing 360 degree support to your employee   The more they explore future possibilities  the more they ll be engaged in their work  Meeting people who are in their dream industry or job can be inspiring and clarifying  It also helps forge connections that may come in handy down the line   Laraway says   And it yields benefits for you  too  It s so important for your employee to know how much you re supportive of them  and how far you re willing to go to make sure they achieve their dream job  That inspires loyalty like nothing else    Define their immediate next step   Let s be explicit about what the next step or role you will fill that makes sense  given what you care about  the path behind you  and the lighthouse off in the distance   Laraway says   It can involve advocating for them to make a lateral or vertical move  or giving them goalposts to hit on a quarterly basis  You want to help them gain crystal clarity that this immediate next step is a logical one en route to their dreams    Enlist others to help hone their skills  Send your employees to training like conferences or workshops  But be mindful that you re sending them to opportunities that actually make sense in the context of the long term vision  For example  Laraway cites a highly popular Advanced Negotiations course that every single person wanted to take at the Wharton School   even if there was no clear reason why he or she needed it   It sounded strategic and cool  so people were interested in the course  but they couldn t explain why they needed it to justify it expensive price tag   On the other hand  I had a person with a career vision to lead the business development function for one of the big like video platforms  like Netflix   says Laraway   It s a pretty defined  compelling vision  It made a lot of sense for me to try to get that investment for that person to get them to the advanced negotiations class because clearly that s a big part of any business development role    When you understand someone s long term career vision  it helps put training investments into context   Nurturing Employees as a Winning Strategy  Managers have the opportunity for service leadership but still must cope with the threat of good people leaving the organization  The key here is to intently invest in each employee  making sure they re getting   and know that they re getting   the tools and experiences they need to advance in the way they aspire to advance  No empty promotions or ceremonial performance reviews  Instead  aim for real  honest conversations that unearth your employees  hopes and dreams  and shed light on their past and future  Doing so can extend the life of employees at your company  but also bring clarity to how and when they should embark on the next stage in pursuit of their dreams    A manager s job is to guide a team to deliver results  and she s able to do that well in a sustained way   not because she exhibits power  control  or authority  but because she nurtures and enhances a set of human relationships around her  What s more  she s developed those relationships by crafting a long term vision   Laraway says   It s that same zooming out that guides a Marine in the fog of war  The Marine knows what the end state is supposed to look like and he can move people toward that end  Armed with the clear vision of the end state  he s able to take relevant action today  That s the clarity in the chaos  That turns a job into a through line for a person s career  The more you can help them along their path  the more they ll likely to stay and help your company on its journey,"[141 1061 1154 17 120 190 962 826 644 19 1146]"
168,training-dataset/business/866.txt,business,10 Proven Stakeholder Communication Tactics   Product Coalition10 Proven Stakeholder Communication Tactics  TL DR  Stakeholder communication  It is simply not enough for an agile product development organization to create great code and ship the resulting product like a clockwork  You also need to talk about  particularly in the beginning of your agile transition  Marketing the agile journey of product and engineering to the rest of the organization   and thus getting their buy in   is a critical success factor to step up the game  You want to become agile  not doing  Agile    So  learn more about ten proven stakeholder communications tactics that contribute to making this happen   Stakeholder Communication Channels During an Agile Transition  Do good and talk about it   a simple necessity  particularly if your agile transition is supposed to be embraced by the whole organization over time  Deciding early in the process how to communicate with internal stakeholders usually makes the difference between  doing agile  and  becoming agile  in the end   Keep in mind that a lot of stakeholder ego  as well as personal agendas  is tied one way or another to executing  the plan   And you re trying to sell them that quitting this plan will turn out to be mutually beneficial   A quick mental exercise  Try walking in your stakeholders  shoes  and ask yourself  Would you entrust your career a bunch of hoodie wearing nerds  promising a big reward   Developing empathy for stakeholders is particularly relevant  when engineering and product don t have the best standing within the company at the beginning of the transition  The good news is  that no matter whether both are perceived as a black hole by others  a well orchestrated communication strategy has a good chance to win over the rest of the organization   Picture courtesy of Wikipedia  licensed under the Creative Commons Attribution Share Alike 2 5 Generic license   Judging by my experience  the following stakeholder communication tactics have proven useful  if actively pursued from the beginning   I  Agile Ceremonies  Sprint Reviews  A great opportunity to show to the whole organization what value has been delivered during recent sprint s  and align the stakeholders with the upcoming sprint s    The cadence of this event depends on the size of your engineering organization  if the teams  sprints are aligned  or whether you re releasing several times a day anyway   A weekly sprint review tends to wear off quickly  as not much novelty can be provided   Except you ve just started building something from scratch  then a weekly demo is great for team building in general and creating a common spirit  You need to celebrate every victory    The basic rules are simple   Lead by example  The engineering and product team should be present  Why would a stakeholder invest her time  if your buddies don t consider the sprint review a worthwhile investment of their own time   Show  don t tell  Sprint reviews are a zone free from death by PowerPoint  Invite stakeholders to take the helm  5 minutes per team are usually sufficient  Initially  it might be required to lure stakeholders to the sprint review  Bribe them  if you have to  Giving a few stories points away during the review to those who attend and can present a convincing issue works well   But don t make this hack a habit    Further reading  Stop Calling Your Sprint Review a Demo   Words Matter   Daily Scrums  Invite stakeholders to the daily Scrums  once the teams feel comfortable with the idea  to passively participate  Be warned  though  that you need to be firm in dealing with assertive stakeholders  who otherwise might try to take over the stand up and turn it into a reporting session  If a team does not warm up to the idea  restrain yourself from making the invitation   II  Educational Initiatives  Aggregate Information in Dashboards   When you put problem in a computer  box hide answer  Problem must be visible    Hideshi Yokoi  former President of the Toyota Production System Support Center in Erlanger  Kentucky  USA    In that spirit  be transparent with all information  but visualize it in a way that stakeholders can actually make sense of it   Often referred to in an agile context as  information radiators     Usually  it is more helpful to aggregate information across teams in a sort of stakeholder dashboard than having a board for each team   Tracking the movement of sub tasks  for example  normally proves to be a bit too granular for stakeholders    The advantages are plenty  Stakeholders rarely read reports  but they are willing to have a look at dashboards  and they appreciate a chat with product owners and engineers  On the plus side  It is a controlled and safe environment  And you can choose the venue  too  Put the dashboards where stakeholders can see them   Be careful with simple burn down charts  though  Those easily get torn out of context and might cause a Pavlovian reflex with some stakeholders  triggering urges to micromanage teams  Further reading on this matter  Scrum  The Obsession with Commitment Matching Velocity   Write Release Notes   Really helpful  but remember  Bait the hook and feed the fish  And the fish usually doesn t click on Jira links to learn about recent successes   You need to tell a story  And a story has a hero  your product  team  organization    a villain  an obstacle  and how the hero overcame the obstacle   in short  a story arc   Invest some time to get the release notes right and they will positively influence the standing of product and engineering within the organization   Rumor has it  they can be even fun to read   Further reading  Slack  A little thing about release notes   Institute Ambassadors   Start training interested individuals from the other departments  operative trenches   identified in a collaborative initiative with the respective department heads   to act as liaison officers to product and engineering  Ambassadors collect feedback  track feature requests  and check bugs prior to reporting   Meet with them on a regular schedule  perhaps even weekly  They re excellent sparring partners  often act as your proxies within their own departments  and are well liked participants in user tests   A note of caution  Don t bypass reluctant heads  though  That hack might back trigger and result in the opposite effect of the whole idea   Please hit the  heart button     below  if you found this post useful it would mean a lot to me   And join 4 804 peers and sign up for my weekly newsletter   Organize Training Workshops   Invite other colleagues to a training workshop  and teach them hands on how a product is build nowadays  Lean startup  user story mapping  versioning  prototyping   you name it  Apparently  this kind of workshop does not include coding  Prototypes are built with paper  crayons  pencils and a prototyping app  for example from InVision   Find a post on lessons learned when working with marketing people  sales and customer care agents  and other bloody beginners here  App Prototyping with Absolute Beginners   III  Regular Meetings   Offer AMA Sessions in the Form of a Lean Coffee   Organize regular ask me anything session about agile practices  that is addressed to your colleagues outside the product development organization  A Lean Coffee   is a structured  but agenda less meeting  Participants gather  build an agenda  and begin talking  Conversations are directed and productive because the agenda for the meeting was democratically generated    It is the ideal format to not just communicate your message  but also to identify those interested in the approach in general  They will probably become valuable allies at a later stage   Working Operationally in Stakeholder Departments   Everyone developers  QA engineers  product managers to mention the obvious should regularly work  for example  in customer care  Nothing can create rapport more effectively than joining your customers in their operative work  while having your own dog food   In a very short period of time  your product backlog  your user story creation and prioritization process will become more aligned with solving real  and quite often trivial  problems  The whole product development organization will start rising from an anonymous group to valued colleagues   Why  Because you serve in their trenches  too  A user story or a bug report is now no longer a ticket with a number in Jira  but it is associated with a name  and a face  and a story  Stakeholders will also learn more about your background  and why solving something that looks trivial to them might cause a major engineering headache   Note  I am not referring to other regular meetings at stakeholder level here  for example such as portfolio management  product roadmap planning  or user story mappings  as those would exceed the scope of the post   IV  Media Channels   Daily Newsletter   Create a daily newsletter of 5 to 6 of the most important news related to your company  and your industry  Throw in some startup   technology related posts   Elon Musk s part 2 of his manifesto would qualify for that     for example  as well as an occasional post from product or engineering  Or the company blog   Treat it as a real newsletter and use perhaps the free plan of Mailchimp for that purpose  You will need its analytic capabilities to optimize the newsletter over time   You can do so by checking click rates of popular links  or run different headlines   In other words  Be useful to your colleagues   Opening rates tend to be above 40  and can go higher  if word gets around that the CxO level is actively reading the newsletter  Encourage people to provide you with interesting links  and point out to those contributors within the newsletter editions  Sometimes  you might be lucky and even start a friendly battle between individuals to provide useful links  To my experience  this exercise will not require more than 30 min per day   Side effect  The PR department might be irritated  in the beginning   Just ignore them     Product   Engineering Blog   Start blogging about your daily work  Technologies  processes  methodologies  frameworks  in other words  How you manage to ship a high quality product  day after day  It greatly contributes to other components of the communication strategy sketched above if you can link to a detailed blog post   A great example from Berlin is Zalando s tech blog   Visit our tech blog to learn more about the engineering and ideas driving Zalando s exciting work  Here s where we post technical talks and tips  news about our open source projects  event photos  and much more    A product   engineering blog is also a corner stone of a great recruiting strategy  going hand in hand with regular events  thus crossing the chasm from online to face to face communication with like minded people you would like to hire   Conclusion   If you fail at communicating your agile transition in the right way to internal stakeholders   Agile  might suffer the fate of being regarded as a mere local process  while the rest of your organization stays entrenched in silos and command   control structures   Once that state is reached  resisting any future agile improvement attempts   waving the banner of  we tried in the past  and it isn t working in our organization    often become the prevailing attitude for those  who are not supportive of agile and lean practices   Read more in  Why Agile Turns into Micromanagement    This is the reason  why considering the right stakeholder communication should be addressed on day  1 of your agile transition journey   How are you winning the support of your internal stakeholders  Please share with us in the comments   Related Posts  Agile Failure Patterns In Organizations  Why Engineers Despise Agile  How to Kick off Your Agile Transition  Part 1   Please hit the  heart button     below  if you found this post useful it would mean a lot to me   Do you want to read more like this  Follow me on Twitter and subscribe to my blog Age of Product   Or join 4 804 peers and sign up for my weekly newsletter,"[168 220 1339 655 519 1133 1070 1093 190 1385 1061]"
180,training-dataset/product/511.txt,product,The Foundation of Product Development63 Flares 63 Flares    Peter Duggan is Head of Product Management at Computershare Investor Services  where they have an intangible  service based financial product  and as an organisation they are heavily focused on revenue goals  In this product idea generation walk through from ProductTank NYC  Peter talks about how how to source  size  catalogue and prioritise new ideas from across the whole organisation   Sourcing and Sizing Product Ideas  The key   in Peter s opinion   is to make product idea generation an integrated part of daily work  not an occasional stand alone internal campaign  In his case  he work with managers to connect with teams  joining stand ups and making sure everyone understands the value of helping the company generate new product ideas and refinements  Given that these teams have the most contact with both sides of Computershare s customer base  they re in the best position to identify and suggest solutions for their customers  real pain points   But to make product idea generation an ongoing process  Peter ask managers to continue the push and support for new ideas  and makes sure to always acknowledge the contribution of a new potential product or feature  naturally  when people and teams feel that their input is respected  they are much more likely to continue engaging in the process   Of course  whether it is better to compensate people who submit great ideas  for example with some kind of bonus in relation to the value of the idea  or simply acknowledge contributions is up for debate   When it comes to sizing ideas to determine their potential impact  it s important to make sure that everyone in the company uses a simple template when submitting ideas to make sure that there is consistency  and then the question is essentially  who is best placed to make a quick assessment of the potential value of a new idea    Selecting   Progressing Ideas  When deciding on which ideas to develop  there are a few essential questions you need to answer   How many ideas can your organisation realistically act on   What is the impact across the business  e g  how many times can you seriously involve the technology teams within a given timeframe    How does this idea fit into your tactical v s  strategic goals   i e  make sure you re doing the projects you need to  not just acting on opportunistic revenue grabs   As you re doing this  Peter points out that it is essential that you have some clear categorisation in place for all of your ideas so that you don t duplicate projects or new features  This may not seem critical as you start soliciting ideas internally  but it obviously becomes more important as you start being able to generate more   How To Start   If you re looking to either start or improve your own internal product idea generation process  there are a few key lessons to take away from Peter s talk,"[180 839 77 128 190 826 949 1019 116 408 320]"
190,training-dataset/business/298.txt,business,To Build Great Products  Build This Strong  Scalable System FirstAlex Le and Kavin Stewart have a fairly unusual  how we met  story  Today  the two are oddly  but aptly  co VPs of Product at Reddit  But when they first encountered each other eight years ago  they were founders of competing social gaming startups  Instead of going head to head  they ended up swapping advice they could both use to thrive   it turned out Le was more about design  and Stewart was focused on revenue and growth  The yin to the other s yang  they kept in touch when they moved into executive product roles at other companies  and now  finally  get to work together to solve problems for arguably the most robust  vocal  and diverse community on the internet   Co VPs might sound like a bad idea as soon as you hear it  Certainly  a lot has been written about the perils of Co CEOs  But it works for Stewart and Le  largely for one reason  they share extensive experience building products at every single stage of company life  They ve both seen a lot succeed and a lot go south  They ve both witnessed how product pipelines need to grow and break and change  and they re all too familiar with the mistakes that ruin products and damage process along the way   In this exclusive interview  they focus on the radical shift from product market fit into growth   a change that steamrolls far too many promising startups  With the tactics they recommend  companies at every phase can learn how to create effective  replicable and  perhaps most importantly  durable product development systems   CROSSING THE CHASM  There is such a thing as startup puberty  And it happens right when your product starts to gain traction  Much like puberty  this change often catches people off guard  Sure  they anticipated it would happen  but that doesn t mean they were ready   they were too busy working to get there   For product  the most important changes are   You are no longer your customer  Silicon Valley tends to rely on a common hack   start something that solves a problem you have  At the earliest stage  you re probably building for a customer just like you  or that you intimately understand  Once you hit product market fit  you start bringing new people into the fold  and you can no longer reasonably represent all your customers  needs  wants and opinions  You need more data   You luckily have the ability to test much more  Finally  you re pulling enough users or customers to correlate product tweaks with behavior  and to start optimizing based on more than a hunch or limited evidence   With these new needs  you need more people  This is when things get complicated  says Stewart  In order to set people up for success  you need to make your product and engineering teams modular  That way  you can split up problems and hand out discrete work that people can run with independently  This is what gives you real leverage as you grow   having many teams  mostly autonomously led   all sprinting side by side  Starting this modular approach early bakes it into your culture and allows you to scale much more easily later    You have to understand very specifically where you are in your company s lifespan  and apply the right process at the right time   says Stewart   And ideally  you build a process that you can tweak as you grow  rather than tearing it down and rebuilding it every time you hit a new stage    Even though Reddit is an older company  it still runs into these same transitions  A prime example  Recently  the company has been building out its mobile apps  Initial ideas for what they should look and feel like came from the team  because they re all regular redditors themselves    We had enough empathy with core users to get the first app out and in the store and have it be successful initially   says Le   But we know we re going to run into the unknown as we start onboarding users who are either new to Reddit or who see the world differently from us    We never let ourselves forget  What got us here won t get us there   To figure out the next set of mobile app features  they ll need to do their homework and endure the same growing pains as an earlier stage startup   We can t just field community requests and hand them out to PMs and engineers for them to address anymore   says Stewart   Instead  we need teams that don t just build features on assignment  but actually investigate what problems we re not hearing about  and think through what features might solve them  I see a lot of younger startups hit this point around Series A    The process they ve put in place is called Hypothesis Driven Product Management  Its central thesis is this  It s no longer good enough for a PM to say   I think users want this feature   Instead  you need to ask   What outcome do you predict this feature will have    Pre Series A you don t really have the data you need to do this  says Le   At the seed stage  your company in itself is your hypothesis  You present it to the world to see if it will work  As you start to grow  this branches into more hypotheses about which direction the company should go in  and that branches into even more hypotheses about individual features  and on and on   Your ability to make educated guesses becomes the stem cell and fuel for making your product better for more people   In Stewart and Le s estimation  three major areas of product development change as a company matures  How you generate ideas  how you execute those ideas  and how you iterate on those ideas  Below  they share the best ways they ve seen startups make these leaps   FINDING NEW WAYS TO BRAINSTORM   You want to create a system for how you make hypotheses   it will serve as the basis for all future feature generations even as your team gets big   says Le   The biggest mistake you can make is thinking you can relate to your customer for too long  says Stewart  He cites a fashion startup he worked with who believed their core audience were fashionable urban women  when it turned out to be Midwestern suburbanites  They needed the product for entirely different reasons  but it wasn t being built for them for a long time  That value got lost   So what should you do instead    Make a list of the outcomes you want   the metrics you want to hit  the engagement you want to see  how much growth do we expect to get out of this  etc    says Le   Then you basically guess   ideally based on data and research   what will get you there    Inventory the  inputs  you have to answer your questions and generate a list of ideas  If you re still pretty early and don t have the volume of data you need to get quantitative  you can start with qualitative feedback from user surveys or testing  says Stewart  But you need something to plug into your system that isn t just your opinion or experience   Competitive analysis also fits into this category  Have your competitors achieved a similar outcome to the one you want  How did they get there  How can you crib a bit and iterate to do even better   The other key input is interviewing people who you WANT to have as a part of your target audience  Get smart about what they do use that s similar  why they use it  and why they might choose not to use a product like yours   That s a really ripe area for hypotheses that you can easily turn into tests to see if they help you get more traction or not   says Le   You ve got to use what you ve got  and qualitative feedback is far far better than nothing    Once you have some working hypotheses  that s when you want to start quantitatively measuring results to drive future brainstorming  All you need is enough results from an A B test to theorize causality  says Le   Product management is really just three things  Brainstorm the list  prioritize the list  do the list  But the devil is in the details   It turns out if you brainstorm the wrong list  then you re sunk the whole way through  You want to be creative  but creative in the right way  says Stewart    When it comes to product  creativity can and should be a very mechanical process   he says   Some people think brainstorming is sitting on a hilltop until they re struck by a bolt of lightning  What I ve found most helpful is separating idea generation from idea evaluation  Basically  I write down every single stupid thing I can think of without giving myself a hard time  Then I analyze them rigorously    Apply the feedback you ve gotten through user tests and surveys  and whatever other inputs you have  to trim down your list of dumb ideas   you want to end up with the fairly smart ideas  All of which should be pegged to a specific outcome you re shooting toward   Prioritize this distilled list using two factors   How important is the outcome this idea will serve   How high is this idea s likelihood of success  What magnitude of success will it have   This should yield a short  ordered list of action items that will get you the closest to the results you want  On a smaller team  this process can be run centrally  As you grow and feature sets get more distributed  teams can run this system on their own to get to graduate to the next phase   Kavin Stewart at Reddit HQ in San Francisco   MODULAR EXECUTION AT ITS BEST  At the end of your brainstorm  you end up with multiple   maybe even many initiatives  depending on your maturity  At small startups  everyone knows what everyone else is working on and this is an incredible advantage  Soon after you hit product market fit  you no longer have this luxury and you need to get serious about not only allocating responsibility across teams  but empowering them to do work without leadership  especially not the founders  necessarily knowing everything about it    I ve seen a lot of startups get to this point and it s the CEO or their newly hired Head of Product bundling and parcelling out tasks   says Stewart   That s not what you want either  You want people assigned to thematic areas that they get to own and invent and test within  They develop subject matter expertise  They become the best mind in your company on user growth  experience  conversion funnels  or whatever it is  You have to make sure you re breaking off big enough areas for them to feel this sort of agency over    Here are some examples of thematic org areas   Core product  How can we make typical use of the product better always   Signup experience  How can we bring more people into our product   Internal tools  How can we optimize the way we are working with infrastructure   Content  What content do we present to users and how   Community  How are we setting communities up for success   Channels  Where and how are we engaging with users outside the core product   Monetization  How do we sustain what we re doing   This also cuts a ton of context switching out of your process  You reduce the number of people who work hard to solve problem A only to move over to an entirely unrelated problem B  You group people so they are always attacking grouped  interrelated problems that they know well   I see a ton of Series A startups fail to make this transition properly  It s bizarre to me that it s not explicitly taught as the way to build a product team    I consulted for a startup and this was definitely news to them   says Stewart   The CEO was still assigning tasks out to various PMs who would then distribute work out to the engineers  and I said   Look  each of these teams needs to be able to drive themselves forward with their own point people who communicate up to you  You don t need to know every detail of what they re doing     Not dividing work this way can lead to crippling inertia  says Le    So often  I ll see teams organized by the technology stack they work on  They ll have a front end web team  a native mobile team  etc  all specialized   he says   But this isn t good  I don t care if someone knows mobile or desktop  I recommend a holistic product focus over a pure tech focus  For example  care about the content across all platforms  Care about how customers are driven toward conversion across all platforms    Switching from organizing teams around tech to organizing them around goals is hard  Very  very hard  People have developed expertise  familiarity with their colleagues  systems for getting things done   The change has to start at the top  which is also where it fails fastest   It requires the CEO ceding a hefty amount of control  They have to go from knowing and even determining what s being executed at any given time to delegating primary responsibility for decision making on a day to day basis   Hand out priorities  not tasks  and let your people be creative about their own execution    The CEO still has plenty to do  They go from caring about the design of the product to working on the design of the organization so it can best deliver on what it needs to do   he says   The worst is a CEO or even a VP of Product who comes by and does what we call the  swoop and poop   they just say  this thing needs to be different  and leave  They don t have time to own it  They aren t responsible for it  It ends up getting in the way and distracting the people who really do know what needs to get done    In Stewart and Le s experience  once a founder or CEO relinquishes the need to know everything about everything  it gets a lot easier to reorganize teams along thematic lines   How to recognize when this transition needs to happen   The CEO or co founders can t keep everything in their heads anymore and don t know what s happening in various parts of the product day to day   You re trying to expand the product beyond the Silicon Valley echo chamber  which will require more homework to understand users   Existing staff members are responsible for too many different areas of the product and are context switching a lot  losing productivity   Once you recognize the need  here s how you operationalize the transition   Appoint a business owner for each thematic area who is responsible for driving KPIs  managing stakeholders  including executives  and communicating changes  This is usually a product manager   Minimize cross team dependences  It helps to have a framework for surfacing and prioritizing any dependencies that do exist  For example  these are highlighted during sprint planning at Reddit  so that everyone know what is expected of them to expedite communication and decision making across teams   Set quarterly operational targets and tie individuals  OKRs to them to build founder executive confidence in this approach  make everyone feel more purposeful  and more clearly track performance   Have the founders and or executives steer these smaller thematic teams by setting few  but big company wide objectives  and allocating resources according to priorities   Constantly reevaluate where there are bottlenecks in this system and move immediately to address them    Making this leap to thematic teams is a classic case of knowing what got us here won t get us there  and doing something about it   says Stewart   If you don t rethink how you re dividing work once you ve entered the next stage  you won t get much further    There s also a bonus around conflict resolution   When you create teams around themes   which then become areas of expertise   it s much clearer who is responsible and accountable for different parts of the product  At the same time you define themes  you also appoint someone as an owner  Usually they re a product manager  At some more engineering driven companies  this could be a tech lead  It doesn t mean they need to have authority over the others on their team  It does mean they have to own final decisions and output   At Reddit  Le and Stewart govern very different areas of the product  One owns content and communities  The other owns growth and monetization  At the same time  they have thematic teams under these umbrellas with point people who have their own general areas of accountability  It s not unlike a series of Russian nesting dolls   The owner of every thematic team is also the one who makes final decisions  They re responsible for making sure everyone feels heard    If you re the lead on a team like this  you need to make people feel like their point isn t just being listened to  but fully understood   says Stewart   The easiest way to do this is to repeat it back to them   So you re saying    this   If they agree  then acknowledge it by saying something like   Great  now I can properly represent your point of view while making the decision     That way  if you end up not taking their input  you can satisfyingly explain why not and curb a lot of angst on your team  This will let you move forward with much more momentum and buy in long term   A product manager s key attribute needs to be empathy   empathy for your users  sure  but also for your teammates and stakeholders   As your product team expands  you have to see this as a skill to teach and train   You want to help every PM on your team develop the ability to consider many opinions  and also that the people who are disagreeing might be right   says Le   What makes a company successful over the long term is harmony of the team  That  above anything else allows you ship a lot of stuff    One of the more helpful mindsets to teach along these lines is that it s very unlikely for any one decision a company makes to be fatal  Likewise  no one decision will be responsible for making the company successful either  This lowers the cost of choosing wrong  releases pressure  and motivates PMs to take more viewpoints into account  says Le  Spreading out decision making agency is also critical for the long term health of your company  If the person whose been calling most of the shots for you leaves after 18 months  you re sunk  And this happens more often these days than ever before   Alex Le at Reddit HQ   THE INCREDIBLE IMPACT OF PRODUCT OPS  As your company matures and more people start running more experiments  you risk falling prey to the dreaded  Las Vegas strip problem     If you don t have solid communication on your product team  you get many individuals pursuing their own goals for their own features  and they re just thinking about optimizing their main metric   says Le   They aren t thinking holistically about the rest of the product or products  You have people testing a ton of stuff all at the same time  Like  what if we make this button blue instead of green  What if we put another dialog box here to drive conversion  Suddenly you have the Las Vegas strip with volcanoes next to the New York skyline next to the Eiffel Tower  and it s too much    This is why you need a traffic cop  This isn t a single product leader through which all decisions filter  It shouldn t be the CEO for very long either  Instead  it needs to be someone keeping track of the various projects that are underway  how they relate to each other  how the results of tests might be interacting  and how changes are ultimately implemented    You have to appoint someone to care about the holistic experience   says Le   Like in the Vegas example  you need someone who is zoning against that kind of crazy sprawl  only for your product    This person should be focused on two things  1  Collecting and communicating the data coming out of experiments  and 2  guiding everyone to build features and run tests that connect to company goals  If you re large enough to hire a VP of Product  they can play this role  But if you re not  you can appoint someone on product to do this  or it could make sense for the CEO of co founder to take on this role temporarily  This will prevent a lot of headaches  including people juicing their numbers to satisfy their personal objectives but not the company s needs  says Stewart   It also keeps winning experiments from being turned up to 100 when they really shouldn t be   a rampant problem at startups that haven t prioritized product ops  says Le    Just because you get a positive result from a test doesn t mean that feature or variant should be applied sitewide for all your users   he says   There has to be an extra step where you disseminate your learnings and really look at what s causing the results you re seeing  Most of the time you should simply use those learnings to design a new test  At a company I worked at in the past  we d be running five experiments on any given day and turning every single positive result up to 100  They all clashed together  It was impossible to tell what was truly causing what  and it messed up the product experience for users    Your product ops  traffic cop  should serve as the central hub for these test results   gathering and sharing in a way that makes them visible to everyone  When you do this  others might be inspired by certain tests or see that what they re doing is related in an important way  While your test might have created an unambiguous good  others might spot some unambiguously bad side effects  So this organized form of sharing not only eliminates errors  but fuels momentum   If we really look at the number of winning test variants that go live as a feature to 100  of our users  it s really low   like one in 10   says Le   The best thing testing can do is help you create more hypotheses for your brainstorm process    Healthy communication on product teams is always omnidirectional    We have both formal and informal ways of sharing information on the team here at Reddit   says Stewart   We have PM lunches  where all PMs go around and talk about the interesting things they ve tried lately and what the results have been  We have strategy meetings where one person responsible for an area will review what they ve been working on for the last month and give details on the results of their experiments  And we also have templated emails that announce feature launches and do retrospectives on past launches with new data    As your organization grows  you have to be extremely consistent about messaging the same things over and over again  Templates help ingrain this practice   At Reddit  whenever you re about to run a test  you already have the format of an email ready to go explaining what you re testing with blank  bulleted fields for where you ll insert the results   This makes it easy to just fill it out with results three days out  14 days out  30 days out so you can easily send updates   says Le   Just having these templates accelerates the flow of informative emails throughout the team  Everyone can easily scan what people are trying and how it s going    Lastly  having product ops in place speeds up your learning over time and makes sure you re adding   in Keith Rabois  words   more barrels and not ammunition to your development process    As a company gets bigger  it s scary to watch how most fall into longer and longer iteration cycles   says Le   Someone needs to be paying attention to this  Like  literally collecting data on how long every release is taking  How long releases of similar features are taking over time  How many features are getting launched per sprint  per quarter  etc  You have to know how long it s taking you to get things done so you can make sure it stays relatively the same even as you add more people and projects  The goal should really be to parallelize more iterations all taking place at the same time    Don t work on 10x ing the output of each team  Work on putting many 1x teams next to each other  That s how you stay agile   If you look at companies like Facebook  they ve done a heroic job of keeping iteration cycles short   says Stewart   They do that not by adding a bunch of people to a project  You want many mini projects all producing learnings at once  And for that  you need the healthy communication that comes with focusing on product ops    All that said  you want to add process without adding too much rigidity  Especially at earlier companies  both PMs and engineers bristle against too much infrastructural responsibility  Here are some things you can do to put product ops on the rails without overdoing it   Pick only a couple hard and fast rules   For us  making sure everyone is on the same page is the top priority  so we re really strict about our very few scheduled meetings  We kick off a new sprint every second Monday   says Le   We know we re always going to hit that mark  Everything else can be flexible around us  but every second Monday the entire Reddit product team meets to kick off new sprints   maybe 7 or 8 will all be starting at once   At the same time  every team does their own sprint planning  They simply present what they ll be doing   Provide autonomy between guard rails   Meetings are the firm commitments that help keep our iteration cycles tight  Whatever people do inside that cycle time is up to them  Kavin and I let them tackle it the way they want as long as they deliver on their sprints every two weeks   says Le   Having this light rigidity in scheduling goes a long way    Be clear about the role of product ops  As discussed  every team taking on a thematic area of the product should have its own leader  The product ops person   i e  your traffic cop   is one person who looks across all these teams  not to tell them what to do  but to actually iterate on the process of developing products  This is what Le and Stewart spend their time doing at Reddit   Every two weeks  when we meet  we ll tell teams   Hey  we noticed this one process isn t really working  we re going to try this new thing and see how it goes next time      says Le   It s basically our job to track what went well and what didn t go well about how product worked as a unit  and incorporate feedback from the team  Our customers are the PMs and engineers using that process    Just start   It s more important to start something in ops than it is to have a master plan and huge process figured out   says Le   We start light  So  for example  we put the two week sprint system in place  When we saw that sometimes progress wasn t being made fast enough  we added a sprint retrospective   After more iterations  you might find bottlenecks where support teams are overwhelmed with requests  which should prompt the hiring of more engineers to handle these requests  The next steps will reveal themselves  Don t get stuck without any ops support simply because you can t build a full system right away   If you re at a very small or early company and no one seems like a natural product ops person  you can simply pick a high performing and detail oriented PM and say   Hey  we have this meeting every second Monday  and it s your job to make sure that meeting is good  Do whatever it takes for that meeting to be great   This person should be a product person so that they know what the appropriate speed is for various projects  They can t come from outside product and be credible  This means that a non technical CEO is probably not the best candidate either   THE TAKEAWAY   Any advice you give or take about product development is stage dependent   that s the number one thing to know and that most people ignore   says Stewart   People will tell you to  data driven  and you ll try to be  but early on you just can t be  You can t A B test with 300 visitors a week  It is possible  however  to put light structure in place that will grow with your company    The other mistake is assuming that past success will automatically beget strong product pipelines in the future    A lot of C stage founders and teams will still be muscling through development issues  outworking everyone to keep iteration cycles short or to do more at a time   he says   This isn t sustainable  You ll burn yourself out  your people will leave  You can t just keep working hard with the same frameworks and processes you had at 30 people when you re 200 people  You have to mechanize brainstorming  divide responsibilities  introduce ops  That s what will keep people aligned and motivated to do their best work,"[190 1061 826 17 1384 1154 19 1030 120 39 1241]"
198,training-dataset/business/600.txt,business,You re Only as Good as Your LieutenantsThis post is part of the series  Every Day Is Monday in Operations   Throughout this series we discuss our challenges  share our war stories  and walk through the learnings we ve gained as Operations leaders  Today s stories  Priority Zero  and  Scale or Fail  come from David Henke and Benjamin Purgason  respectively  You can read the introduction and find links to the rest of the series here   It doesn t matter if you are a new engineer fresh out of boot camp or the CEO of a Fortune 500 company  you only have 24 hours in a day  just like everyone else  How you allocate your time is up to you  but no matter how efficient you are  you still have an upper bound at 24 hours   To have an impact that is bigger than a mere 24 hours  you have two options  scale linearly by automating your work  or scale exponentially by inspiring others to work towards a shared objective  The latter is the definition of leadership and the key to staying ahead of the curve in a world where every day is Monday in operations   Priority zero  A few years ago  I was invited to speak in front of a group of police lieutenants  This group contained members from various police forces across California  from Oakland and San Francisco to Los Angeles and San Diego  My topic  Leadership   As I sat down to prepare my speech  I wracked my brain  How could I get a group of public servants that uphold law and order for the state of California interested in something that someone from the private sector and the internet had to say   I told a story that started with my brother and I going to a Los Angeles Lakers game  The scores don t particularly matter because I didn t get to watch the whole game  and neither did he  We had barely sat down before I received the call  priority zero the site was down and we were not serving any pages at all  Shortly afterwards my brother  the superintendent of the Montebello Unified School District  received a call  priority zero there was a shooting at one of his schools   After I recounted this story  I turned to my audience  what is your priority zero  They responded  officer down   I know that I do not have the worst priority zero  but regardless of the type and severity  how we respond to priority zero events is all about leadership  How do you protect your team as best you can from the unthinkable  You are only as good as your lieutenants   When I retired from LinkedIn  they threw me a party  hosted by the top 22 engineering leaders in the technology organization  In between talking with the people in attendance I looked around the room and something struck me  I realized that of the 22 engineering leaders scattered throughout the crowd  five of them predated me at LinkedIn  The other 17 leaders I had hired directly  including my own successor  Why did I notice this  of all things  right at the end of my time at LinkedIn   When I first started at LinkedIn  complete site outages happened far too often  What s worse  the culture was built on a one way flow of information the product team would get an idea and instruct the engineers to implement it  The engineers would implement an idea as quickly as possible  then instruct operations to support it  The operations team would support it by fighting fires all day  every day  The security team  It was way too small   My priority zero  break the cycle and change the culture so that this situation could never happen again  I went on a hiring spree  and within six months  I had brought in experts in data science  site reliability  data center architecture  networking  scale computing  and information security   I didn t hire the  best technical engineer   I hired the best engineers I could find that understood collaboration  These were all great engineers who understood what it takes to build a team and understood the need for teams to work together   As the party began to wind down I knew that I was leaving LinkedIn in good hands   Learning from  Priority zero   As we ve said before  technology is easy to change  but culture is not  The cultural shift we implemented was the greatest contribution we could give to LinkedIn  Years of effort yielded incredible results  at LinkedIn  talent is our number one priority  and our people come first   Whether you are thinking about your company s well being  your team s  or your own  priority zero should be the long term development of your lieutenants  These leaders you help develop will ultimately take over the roles and responsibilities you have today  freeing you up to take on an expanded role  Your company wins through the improvement of its talent pool and improved ability to provide continuity through unusual or difficult circumstances   Scale or fail  My first job when I made the switch from being an individual contributor to a people manager was to build out the Tools SRE team  I was confident that I understood the challenge ahead of me  there were applications that predated us by years  operational challenges  and a big team that we d need to partner with  That meant balancing incident management  making improvements to older applications  and being a part of the design of new applications   At first  I approached my task in the same way I had approached all of my prior technical projects  I gathered my new teammates around  divided up the work  and everyone began working  I would make the decisions  lead the incident response  and be a part of just about every technical conversation  It wasn t long before I learned that every day is Monday in operations and that my strategy was not going to work   The rate of change was high and this caused me to become the obvious bottleneck  I was caught context switching  either leading incident response efforts  sitting in meetings  or making decisions without enough information  I was overloaded and my team was paying the price  they couldn t make meaningful progress because I was in the critical path for too many decisions  and they were growing frustrated   One weekend  I was thinking about how things were going and trying to figure out what I needed to do  I mused over the things we could do if I had a team full of  engineers like me   I didn t need more me  I needed a team of engineers  each better than me   I realized that I needed to spend my time doing what only I could do  helping my team grow and exceed my own engineering capabilities  On Monday I called together my team and explained to them that I wanted to try something new  I set our team s mission  vision  culture  and purpose   I explained my expectations and then I offered each of them the opportunity to step up and claim responsibility for an idea we needed to execute on  They were challenged to make decisions  take intelligent risks  help LinkedIn win  and to do all of that in keeping with our newly established culture  My role  I explained  was to help them grow  provide guidance  and remove roadblocks they encountered   At first the going was rough  but over time  the founders of Tools SRE grew from a ragtag band of executors into a group of capable leaders  They embraced the culture  amplified it  and asked for greater challenges   Today the team members are capable  take intelligent risks  and build trusted relationships easily with their partner team  They now work to raise the next generation of leaders   Learning from  Scale or fail   Every leader has a different set of starting circumstances  but one thing stays the same  the sooner you start spending your time on what really matters your people the better off you will be  You cannot go it alone  You will fail  Create a culture that empowers your team members  helps them grow  and that they want to be a part of  Eventually  you ll end up with a team that is greater than the sum of its parts   Relationships matter  If your team trusts itself and you have a shared culture providing guidance in uncertain situations  you can move incredibly fast  You can deal with things that are impossible for a single engineer  no matter how good they are  to deal with  MTTR will be reduced  you can better uphold site up  and you have a chance to get ahead of Monday s problems,"[198 17 315 1030 1061 1385 296 375 76 120 973]"
220,training-dataset/business/851.txt,business,Agile Metrics   The Good  the Bad  and the Ugly   The Startup   MediumAgile Metrics   The Good  the Bad  and the Ugly  TL DR  Agile Metrics  Suitable agile metrics reflect either a team s progress in becoming agile  or your organization s progress in becoming a learning organization   To address the team level  qualitative agile metrics typically work better than quantitative metrics  At the organizational level this is reversed  quantitative agile metrics provide better insights than qualitative ones   Good Agile Metrics  Generally speaking  metrics are used to better understand the current situation as well as to gain insight on change over time  Without metrics  assessing any effort or development will be open to gut feeling and bias based interpretation   A metric should therefore be a leading indicator for a pattern change  providing an opportunity to analyze the cause in time The following three general rules for agile metrics have proven to be useful   The first rule of tracking meaningful metrics is only to track those that apply to the team  Ignore those that measure the individual  The second rule of tracking metrics is not to measure parameters just because they are easy to follow  This practices often is a consequence of using various agile tools that offer out of the box reports  The third rule of tracking metrics is to record context as well  Data without context  for example  the number of the available team member  or the intensity of incidents during a sprint  maybe turn out to be nothing more than noise   For example  if the  average  sentiment on the technical debt metric  see below  is slowly but steadily decreasing  it may indicate that the team   May have started sacrificing code quality to meet deadlines or  May have deliberately built some temporary solution to speed up experimentation   While the latter probably is a good thing  the first interpretation is worrying   You would need to analyze this with the team during a retrospective    Good Qualitative Agile Metrics  Self Assessment Tests  If you like to track a team s progress in adopting agile techniques and processes  self assessment tests are well suited for that purpose  For example  I like to use the Scrum Checklist by Henrik Kniberg   All you have to do  is to run the questionnaire every four to six weeks during a retrospective  record the results  and aggregate them   In this example  we were using a kind of estimation poker to answer each question with one of the three values green  orange  and red  The colors were coded as follows   Green  It worked for the team   Orange  It sort of worked for the team but there was room for improvement   Red  It either didn t apply  for example the team wasn t using burn down charts  or the practice was still failing   If the resulting Scrum practices map is getting greener over time  the team is on the right track  Otherwise  you have to dig deeper to understand the reasons why there is no continuous improvement  and adapt accordingly   In addition to this exercise  I also like to run an anonymous poll at the end of every 2 week sprint  The poll is comprising of three questions that are each answered on a scale from 1 to 10   What value did the team deliver last sprint   1  we didn t deliver any value  10  we delivered the maximum value possible   How has the level of technical debt developed during the last sprint   1  rewrite the application from scratch  10  there is no technical debt   Are you happy working with your teammates   1  I am looking for a new job  10  I cannot wait to get back to the office on Monday mornings    The poll takes less than 30 seconds of each team member s time  and the results are of course available to everyone  Again  tracking the development of the three qualitative metrics provides insight into trends that otherwise might go unnoticed   Please hit the  heart button     below  if you found this post useful it would mean a lot to me   If you prefer a notification by email  please sign up for my weekly newsletter and join 5 182 peers   Good Quantitative Agile Metrics  Lead Time and Cycle Time  Ultimately  the purpose of any agile transition is to become a learning organization  thus gaining a competitive advantage over the competition  The following metrics apply to the  software  product delivery process but can be adapted to various other processes accordingly   In the long run  this will not only require to restructure the organization from functional silos to more or less cross functional teams  where applicable  It will also require to analyze the system itself  for example  to figure out where value creation is impeded by queues   To effectively identify the existing queues in the product delivery process  you start recording five dates   The date when a previously validated idea  for example a user story for a new feature  becomes a product backlog item  The date when this product backlog item becomes a sprint backlog item  The date when development starts on this sprint backlog item  The date when the sprint backlog item meets the team s  Definition of Done   The date when the sprint backlog item is released to customers   The lead time is the time elapsed between first and the fifth date  the cycle time the time elapsed between third and the fourth date   The objective is to reduce both lead time and cycle time to improve the organization s capability to deliver value to customers  This is accomplished by eliminating dependencies and hand overs between teams within the product delivery process   Helpful practices in this respect are   Creating cross functional and co located teams  Having feature teams instead of component teams  Furthering a whole product perspective  and systems thinking among all team members   Measuring lead time and cycle time does not require a fancy agile tool or business intelligence software  A simple spreadsheet will do  if all teams stick to a simple rule  note the date once you move a ticket  This even works with index cards   Other Good Agile Metrics  Esther Derby suggests in her article Metrics for Agile to also measure the ratio of fixing work to feature work  and the number of defects escaping to production   Bad Agile Metrics  A bad  yet popular agile metric is team velocity  Team velocity is a notoriously volatile metric  and hence actually only usable by the team itself   Some of the many factors that make even intra team sprint comparisons so difficult are   The team onboards new members   Veteran team members are leaving   Seniority levels of team members change   The team is working in unchartered territory   The team is working on legacy code   The team is running into unexpected technical debt   Holiday   sick leave reduce capacity during the sprint   The team had to deal with serious bugs   Actually  you would need to normalize a team s performance each sprint to derive a value of at least some comparable value   Which usually is not done    Additionally  velocity is a metric that can be easily manipulated  I usually include an exercise in how to cook the  agile books  when coaching new teams  And I have never worked with a team that did not manage to come up with suitable ideas how make to sure that it would meet any reporting requirements based on its velocity  You should not be surprised by this   it is referred to as the Hawthorne effect   The Hawthorne effect  also referred to as the observer effect  is a type of reactivity in which individuals modify or improve an aspect of their behavior in response to their awareness of being observed   To make things worse  you cannot compare velocities between different teams since all of them are estimating differently  Which is totally fine as estimates are not pursued for reporting purposes  They are a side effect of the attempt to create a shared understanding among team members on the why  how  and what of a user story   So  don t use velocity as an agile metric   Read more on velocity here  Scrum  The Obsession with Commitment Matching Velocity   Ugly Agile Metrics  The ugliest agile metric I have encountered so far is  story points per developer per time interval   This is basically the equivalent of  lines of code  or  hours spent  from a traditional project reporting approach  The metric is completely useless  as it doesn t provide any context for interpretation or comparison   Equally useless  agile metrics  are  for example  the number of certified team members  or number of team members that accomplished workshops on agile practices   Conclusion  If you can only record a few data points  go with start and end dates to measure lead time and circle time  If you have just started your agile journey  you may consider also tracking the adoption rate of an individual team by measuring qualitative signals  for example  based on self assessment tests like the  Scrum test  by Henrik Kniberg   What are you measuring to track your progress  Please share with us in the comments  or join our Slack team  Hands on Agile    we have a channel for agile metrics   Related Posts  How to Kick off Your Agile Transition  Part 1   Product Backlog Refinement   Agile Transition Part 2  How to Build Offline Boards   Agile Transition  Part 3   Please hit the  heart button     below  if you found this post useful it would mean a lot to me   Do you want to read more like this  Well,"[220 168 708 715 519 655 1093 277 1030 93 1133]"
233,training-dataset/product/889.txt,product,How to stop designing things that won t get builtAfter sitting down and whiteboarding things out with your product manager and a few engineers  you can t wait to start cranking away on a new design   You spend hours designing and tweaking and wholeheartedly believing  Users will love this    And then your designs never make it anywhere   That feeling sucks  but it s also part of the game  It s the life of a designer  But throughout my time at RunKeeper and now at Drift  I ve developed a system to help make sure this doesn t happen and to soften the blow when it does   I call it the 40 40 20 method  and it s ideal for fast moving teams  It allows you to focus on the now while still looking out at the road ahead  which keeps you from wasting time on things that won t ever be built   I started doing things this way because I ve experienced that scenario described above plenty of times it s tough to leave all your hard work on the engineering room floor   Where the 40 40 20 method started  As a designer  I want to explore things fully and understand how things will build upon each other over time  Throw in some  delightful  moments for users to stumble upon   But as a lone designer catering to 2 product teams  that s not always feasible  Yes  my designs need to be thoughtful  but I also need to work at a pace that keeps 6 high performing engineers moving   Before I started using the 40 40 20 method  I had a process that was  unknowingly  more optimized for keeping our engineers busy rather than allowing us to quickly tackle the most important thing   Our team would talk about an idea  and I d go off to design the ideal version of it  Then when I showed it to my team  we d strip things out one by one until the only thing left was a design I could ve pulled together in an hour   Bummer   This left me constantly scrambling jumping back and forth between teams  trying not to block anyone  and never really getting ahead  I needed to change my process   First thing I started doing was spending more time with our back end team so I could understand what endpoints we had at our disposal  what things we could do with a little bit of work  and what things would require a lot of work to implement   I needed to recognize that what feels like a trivial addition to me  is probably a pile of work for someone else   After I had all that information  I would still design the ideal  but I broke down the file completely differently into 3 shippable parts   40    MVP  The highest impact must haves  Thought through fully  documented fully  back end in place  ready to be passed off to front end for implementation   The highest impact must haves  Thought through fully  documented fully  back end in place  ready to be passed off to front end for implementation  40    V2  The nice to haves  Mostly thought through  Might need a little back end work  Ready to be documented whenever engineering is ready for it   The nice to haves  Mostly thought through  Might need a little back end work  Ready to be documented whenever engineering is ready for it  20    Innovation  Sort of thought through  Could be ready for implementation with another 2 4 hours of design work  Probably requires some back end time   Here s a real example with a recent conversation redesign we implemented  and how we broke it up   Bucketing and designing things this way has worked wonders for a couple of reasons   I m only focusing on the  now   but I can see the road ahead   The beautiful thing about partially designing out those last 2 buckets is that I can stress test a design and have confidence it s not going to break without spending too much time  Considering how things will scale helps me avoid designing us into a corner and it saves us lots of engineering time in the long run   I m not wasting time on things we won t build   The most obvious benefit is that I m not spending any extra time in that last 60  unless engineering tells me that we re going to be ready for it  Usually we get through the second 40   but not always  Sometimes we get to that last 20   if we don t have anything more important come up  In those moments  it s easy for me to jump back  tie up the loose ends  and go back to whatever next  big thing  I was working on   The other major advantage to this   I m able to work on multiple  big things  at a time   This last one is huge because as a small team  speed is our advantage  This process allows me to work on major things for both teams intertwined with each other  but the nature of bucketing helps me keep focused on one milestone at a time  And that allows me to deliver more thoughtful work to both of my teams   Here s a recent example of this process at Drift   The other thing I like about this process is it respects the limits on my attention span  I m most productive before lunch  so I try to divide my day into 4 hour blocks  In the morning I work on my  one big thing   and in the afternoon I give my attention to  everything else     Everything else  usually means going back to that last 60  on a previous project and documenting a few more days  worth of work for that other team  Sometimes it means whiteboarding next week s  big thing  with my PM so he can start planning  Whatever it is   it s something that needs to get done but it s not the most important thing   As our team grows  developing a process has been more and more important not only for my productivity  but for my sanity  And keeping sane means knowing I m not throwing away huge chunks of my time on fruitless explorations   I know this process will need to continually adapt and cater to the ever changing needs of the team  But right now  it s working,"[233 973 315 17 363 391 1218 320 116 190 1385]"
250,training-dataset/business/1430.txt,business,How to Set Them  Achieve Them  and Track Them in TrelloSo you want to go places   We do  too   We have big plans at Buffer to build a social media tool that is as ubiquitous for social marketers as Google Analytics is to website owners  It s a big  hairy  audacious goal  right  How do we even begin to work toward something like that   We also have big marketing plans to ship major projects  courses    explore new channels  Snapchat    and not spend all day in Slack  single tasking    It s tough to stay on track  How do we prioritize when every goal is so exciting and  well  so big   Sound familiar  Imagine having a way to reach the goals you set  no matter how large   and stay on track all the way there   Our solution these days is to focus on OKRs  a rigorous method of goal setting and progress tracking that we ve found to have a great impact on our focus  excitement  and results  Read on to see exactly how OKRs work for us at Buffer  from how we chose them to how we track them   An OK What  A Brief History And Definition Of OKRs  OKRs stand for Objectives and Key Results  The Objectives tend to be the desired outcomes that you want  and the Key Results are the measurable ways you know you re on track to reach them   Put another way    An Objective helps answer the question   Where do I want to go    A Key Result helps answer   How will I know I m getting there    Here s what OKRs look like in practice   Source  https   blog weekdone com introduction okr objectives key results   OKRs arrived at Google in 1999 when VC John Doerr introduced them to Larry Page and Sergey Brin  They ve been used at Google ever since   and it seems Google has done quite well with growth since the 90s  Talk about social proof   For a look at how the company implements their OKR processes  Rick Klau of Google Ventures Startup Lab describes what OKRs look like  using San Francisco 49er references  and how Google thinks about setting and tracking them   https   www youtube com watch v mJB83EZtAjc  And Google is not the only big name company that s been using OKRs  Companies who have used OKRs successfully at one point or another  or still do to this day  include Twitter  Sears  LinkedIn  Oracle and Zynga   3 Reasons Why We Do OKRs At Buffer  We ve gone through lots of different work styles at Buffer  experimenting to find the way we all work best and happiest   Teal  based on the book Reinventing Organizations    No managers   very flat structure  almost Holacracy  No goals  Lots of goals  OKRs  At the same time  we ve grown quite fast  The team was 17 people when I joined two years ago  There are 82 of us now   As we grew and as we dreamed  we felt that a system might be useful for helping us all stay on the same page with the big goals we wanted for the company  We ve used OKRs to chart our path toward these goals  setting them in each quarter of 2016  Here s what we ve found most valuable   OKRs Increase Clarity  One of the greatest benefits of OKRs is that they provide structure and clarity for an organization to work toward common goals  I love how the folks at weekdone describe it   The main goal of OKRs is to connect company  team and personal objectives to measurable results  making people move together in right direction   And when you get a team of dozens or hundreds all moving as one  you achieve some pretty incredible results   I felt this clarity right away with our first quarter  January to March  OKRs at Buffer  I was working to create customer case studies  which is a great and fun task on its own  and which became all the more paramount with the perspective gained from OKRs  I could draw a line from my OKR of case studies all the way up to our company wide OKR for revenue   Case studies lead to    middle funnel  bottom funnel traffic  which leads to    higher conversion rates  which lead to    a marketing wide OKR   more trial starts  which means       An increase in monthly recurring revenue  or MRR  a company wide OKR   OKRs Increase Focus  Among the best practices for OKRs is to revisit them regularly   ideally every week  I have even found myself revisiting them daily   Whenever I was faced with a new task or felt myself drifting with my work  I would stop and ask    Does this get me closer to meeting my goals    Then sure enough I d pull out my OKR Trello board  more on that below  and check to see where my current tasks fit within my stated goals  If things were in line  I could get back to work and feel confident that I was moving in the right direction  If there was conflict  I would have a built in excuse for moving on to other tasks   OKRs Increase Collaboration  This is probably a good lesson to learn early  thank you  OKRs     I can t do everything alone   Many of my personal OKRs relied on the involvement of my teammates  I couldn t set a new landing page live because I don t have front end development skills  I couldn t create three to five new infographics because I can t design one   We noticed these arrangements were common across the board at Buffer  so we made sure to include a period of negotiations before finalizing any OKRs  You d simply get in touch with the people you d need to work with on these projects and find a common ground with them so that the work ended up on each person s OKR list   How We Do OKRs For Marketing At Buffer    We have many different layers of OKRs at Buffer  There are company wide OKRs that are set by Joel and Leo  our co founders  Then there are OKRs for each area of Buffer   Marketing  Product  Happiness  Engineering  Data  Systems  Community  Customer Development  People  Ops  etc  Beyond those  each individual on each team has their own OKRs  It looks a bit like this diagram from BetterWorks   A couple weeks before the start of a new quarter  we ll all take time to reflect on what we want to achieve in the coming months  Joel and Leo will help set the company wide OKRs  then we ll work together as a marketing team to negotiate what OKRs might look like in our area   Here is a quick list of some of our top tips for setting OKRs at Buffer   Objectives are to be ambitious and should feel slightly uncomfortable   Key results are measurable  they must have a number   Ideally  you ll only achieve 70  of your OKRs   Getting 100  means your OKRs aren t ambitious enough   Low grades aren t to be punished   Be careful not to set too many  Generally  a maximum of five objectives with a max of five key results each is enough   And probably our biggest learning with OKRs  They can  and should  change during the quarter  Especially at a SaaS startup  things happen fast  we learn fast  and the objectives we set may not be the right ones in a few weeks  time   Our marketing OKRs for quarter two  April through June  included five different objectives that we were excited to take on  each with three to five key results attached  Here s one OKR for what we hoped to do on Medium last quarter    You can see the full OKR list here    Setting them is really fun  It is a chance to dream big  reflect on where you re at and where you want to go  and brainstorm how to get there   Also quite fun  Tracking them  I ve found a lot of joy in of the system we use for our marketing OKRs   How To Track OKRs In Trello      our Buffer marketing OKRs  At Buffer  we have the freedom to track our OKRs however we feel best  There are some great tools out there for robust OKR tracking  I found everything I needed in a Trello board  Here s how I put together the board for Buffer s marketing OKRs   Initial Setup  The basic layout is organized like this   Each Objective is summarized in a list title  Each Key Result gets its own card under its Objective list  Each card has a rich description of the OKR details  Labels show the status of the Key Result  One of my biggest goals with the Trello board was to make it a  useable  b  scannable  and c  pretty  Fortunately  all three wishes tied nicely together   I knew I couldn t fit a whole Objective into a list title  Something like   When people think about companies that are some of the best on Medium  they should name Buffer as the  1 brand that comes to mind  just wouldn t fit very neatly  So  I summarized  Each Trello list name is a high level synopsis of the Objective  sometimes captured in as little as one or two words   Similarly  each Key Result receives its own Trello card  with a highly abbreviated description on the front   Then within the card  I go into greater detail about the full Objective and Key Result   I also use a very simple label system  showing how far along we are with each Key Result   Planning   We haven t started yet  but we sure are thinking about it lots    In Progress   Currently working on it    This is our most used label    Done   Success    Done  for now   A nice way of saying   we didn t quite reach this one   but we might someday    All of our color coded Key Result status labels   Checklists  One of the best ways we ve found to track progress on Key Results is to use checklists  These make great sense for the results we ve set to  achieve x number of things  like blog posts  experiments  and the like   Here s one for the result  Run 8 experiments to grow traffic towards the social blog    For those results that are not so easy to turn into to do lists  we have a bit of a different tracking setup  The checklist becomes a series of mile markers throughout the quarter  helping us stay accountable for checking in regularly and updating the card with the latest stats or activity     Waterfall Charts  We ve set a number of target goals for the quarter  things like  grow sessions to our new posts by 30  in the first 28 days  or  get to 150 000 sessions per month on the Open blog    These goals are exciting to stretch for  And one thing I m keen to ensure is that we re not in a place where we set the OKR in April and don t realize until late June that we re not even in the ballpark   What we ve found works well here is a waterfall chart  You can see them attached to a number of cards on our board   A waterfall chart is a pair of line graphs  one showing where you are when you set your goal and where you want to be at the end of the goal period  and the other line showing your progress throughout the period   We ve adopted ours from a guide by HubSpot s Mike Volpe  The basics work like this   Set a goal  based on a time period  Determine how much daily progress you need to make in order to reach the goal  Chart this progress on a line graph  Track your daily progress  and  Add this progress to the line graph  too   It s as simple  and complicated  as that  Here s a template that we use   The variations we ve added to the chart came from a realization we made in quarter one  The idea of OKRs is to set aggressive  ambitious goals to hit  with the understanding that you re expected to reach only 70 percent of your OKRs in a quarter  So we added this element into our waterfalls  which now include three different growth lines   70    On track  85    Wow  going great  100    Home run  Fireworks  Party rock   So here s what a chart of ours looked like early in the quarter   And how do we add it into Trello   Simple  and hacky   I take a screenshot of the chart in Google Sheets  and I add it to the Trello card  making sure that the latest chart is the cover of the card   Now  It s Up To You  If you re looking for a way to jumpstart your productivity  your focus  and your results  we ve found a goal setting system like OKRs to be a real boost  There can be a lot to dig into with OKRs  though we ve found that just these basics can be enough to get the ball rolling toward achieving great things   Set ambitious goals with measurable results  Place them into Trello  Check in regularly to see your progress   Then  when the quarter is up  celebrate   Have you tried out OKRs at your organization  Any other goal setting tips or tricks you ve learned  It d be great to hear from you in the comments,"[250 458 1030 973 116 497 503 981 333 304 19]"
255,training-dataset/business/709.txt,business,The Art of Interviewing 10x Engineers   Greylock PerspectivesTwitter Head of Revenue Engineering Wade Chambers  The Art of Interviewing 10x Engineers  Podcast   A Conversation with Dan Portillo and Wade Chambers  Following their podcast on managing technical teams  Greylock Talent Partner Dan Portillo and Twitter Head of Revenue Engineering Wade Chambers pair up for another podcast on recruiting and interviewing engineers  Wade outlines the processes he s developed through years of management and building out teams at Yahoo  Proofpoint  TellApart and now Twitter     Wade s method of recruiting and interviewing breaks away from focusing on technical competency  Optimizing for a multi dimensional approach  he asks questions that help him evaluate candidates on a more personal level  trying to get a sense of the candidate s growth areas  level of curiosity  and applied intelligence  He feels that technical understanding is important  but not always the best indicator of how well a candidate is going to perform and grow in the organization   Below are a few key learnings from Wade s process of interviewing and building teams  The podcast is now available on iTunes  SoundCloud  Pocket Casts  and Stitcher   Interviewing  Going wide  deep  and topgrading   First and foremost  you re an advocate for the company  but second you need to be an advocate for the potential employee  Help them understand where their fit is going to be or whether the fit is going to be there or not  You need an interview process that helps facilitate that understanding    Wade s team implements a three step interview process that evaluates how well a candidate will fit into the company  In the first stage  they go  wide   meaning their goal is to test the candidate s breadth of knowledge  They provide a coding challenge or review to see what the candidate pulls apart and how they approach a broad problem   You get to evaluate at what level they critique  says Wade   Are they talking about syntax or are they finding bugs  At what level does their thinking stop      In the second round  they go  deep  in a more challenging coding session involving real life projects from the organization  These are typically multi layered engineering problems  and Wade wants to see how in depth the candidate goes to optimize for the best solution  He asks lots of questions at this stage to dig into the candidate s thought process and decision making     In the last round  Wade uses a technique called  topgrading  to determine the candidate s behavioral patterns   Why do they choose their roles  What are they looking for  What is the pattern of their work experience and is it aligned with what they re saying   The goal is to assess the candidate s self awareness while trying to understand their strengths and helping them better understand the company and the role being offered   Referencing   The point is make sure that you understand from somebody else s point of view how to set somebody up for a success   What are their strengths  What are their growth areas  What were patterns of what this person has overachieved in the past  What was the environment like  What can I do to help set that up here as well    Reference checks are a significant aspect of topgrading  Wade feels strongly that hiring managers  rather than recruiters  should spend time on reference checks  He personally spends about an hour on each call  covering topics like how well the candidate takes feedback  if the candidate is open to taking on new challenges  and if any mentoring or coaching is needed  He aims for an open conversation to uncover past contributions the candidate was responsible for and how their skills will translate to the needs of his team  Wade also determines what kind of environment has shaped the candidate s successful work in the past to see if he can create a similar environment in the new role   The Culture Fit Crutch   For cultural fit  I look for people who have similar values as the organization  They value learning  They value growing  They value the struggle  They value the lessons learned that come from that  They value being able to lift where they stand and drive things forward    Dan argues that organizations use the term  culture fit  in a vague way  without first defining what their company culture really is  Wade unwraps how he defines good culture fit  and says it s not about finding the  perfect  person   It takes a variety of people to come together to create a high performance team   Wade searches for candidates that align best with company values and have inherent drive to learn and grow  He looks for people that value struggle and challenge  and who are always seeking ways to help the team and company,"[255 318 269 304 601 76 1061 19 17 1154 190]"
256,training-dataset/business/650.txt,business,Dropbox s Playbook for International Expansion  with ChenLi Wang   ReforgeData risks and regulatory norms  Another area often overlooked by U S  based companies going international has to do with data storage and ownership  For many business customers  there is a strong preference for data to be located outside the US  According to Wang  this is especially true in Europe  where news related the Patriot Act  NSA  Snowden and leaks has made U S  companies seem like riskier keepers for data    Germany in particular had sensitivities about this  Germany is a phenomenal market for Dropbox because of how many businesses are there  and how many of those businesses are collaborating with other businesses in other countries  However  data privacy with a U S  company tends to be quite an issue for them    It s related to being perceived as a local company versus a foreign one  says Wang  A lot of the hesitation ends up being about data privacy  not just customer support or sales norms  and much of it has less to do with specific regulatory and technical compliance than with trust   For example  a German company may be sharing files with a design firm in Argentina  which means that the data will be shared into Argentina at some point    In that case  it s like  Oh ok yeah that s fine we just want to make sure our data is secure  It wasn t a technical requirement for how the data had to be stored in a certain way or not  A lot of it was the comfort they got from knowing that we were being thoughtful about data ownership and privacy as a local concern    Currency and payments challenges with international expansion  Another area that the Dropbox team spent time optimizing was payments  Wang says his team was fortunate to learn from their peers at Evernote and SurveyMonkey  whose payments team offered valuable guidance in Dropbox s early days of international    With payments you have a few things  one is local currency  This goes back to perception once again   It makes a pretty big difference from a perception standpoint when you can charge customers in the local currency versus in US dollars   Imagine if you re paying for some monthly service and the amount on your credit card bill changes every month and you re paying a foreign exchange fee on top of your product fee  That doesn t feel great  One of the first priorities when we expanded internationally was to offer local currency payments for Dropbox    While it feels more local and friendly  offering payment in different currencies poses unique challenges for forecasting growth  says Wang    The Euro depreciating  Brexit  you name it so  all of this has brought up some interesting challenges from a forecasting standpoint  You need to make sure you have a good relationship with your finance team  and make sure that your operating team is not going to be either rewarded or penalized for international currency fluctuations  Let the finance team manage that  and you manage the communication with investors and the board and so forth  That has certainly been a roller coaster over the last few years    Currency is one thing  says Wang  but payment methods is another beast  In Japan  Dropbox had to identify and rely on partners because the typical Western credit card purchase wasn t going to work for their customers in that market   In France  Dropbox needed to add support for Carte Bleue  now Carte Bancaire   which functioned like a debit card without pre authorization from the cardholder s bank   In Germany  the credit card penetration rate is low  estimates put it at between 20 33    so Dropbox offered direct debit connecting to the customer s bank in order to withdraw money   Since those earlier days  says Wang  there have been more payment startups to help ease parts of the payments process  Braintree  Adyen  Stripe   but most country launches still require a substantial amount of engineering investment to execute well   Biggest mistakes in international launches  Dropbox is known for its data  and analysis driven culture  which Wang says helped it to avoid some of the biggest mistakes in launching an international expansion effort  But a lot of companies view themselves that way  and yet many still end up falling prey to a set of common mistakes when going international   The most foundational of these mistake  says Wang  is jumping into international expansion without enough research and planning  How much is enough    At Dropbox we did tons of planning   maybe we even overdid it and could have gone earlier   but we talked to other companies  asking them these same questions about mistakes  and one that stood out was doing it too fast   For example  let s say you made it your 2017 plan to  go international  and your goal is to be in Europe in Q1  Japan in Q2  South American in Q3 and Australia in Q4  That s a mistake    Wang says it s simply too much at the same time because of the demands on overhead  executive bandwidth and internal company mindshare that a multi region international effort necessitates    It s just like building a product  You have to go through one cycle to learn and iterate and then the next cycle to learn and iterate  Don t try to do five simultaneous experiments at the same time  If you try to launch five products at the same time you re going to run into the same issue as launching in multiple countries at the same time    Some of the things that might come up  says Wang  include setbacks that don t abide by your internal company timeline  For example  immigration visas can take longer than you expect  and at that point you re waiting on governments  not merely a different team in your organization  Additionally  the various business licenses  commercial licenses  and other requirements for legal entity setup are all critical steps that you may not be able to accelerate or even influence   Wang says it s beneficial to have a dedicated  beachhead  office to help you liaise with the immigration office of the country you re launching in  One benefit of Dublin  he says  is its transparency  It s also a hub for international business  and is well resourced with experienced immigration and legal firms that know how to move into other countries of Europe  Because of these infrastructure advantages  Dropbox s initial step in Ireland helped them to succeed later in France  Germany  and the UK   but all of that would have been hard as a single mega first step   In particular  says Wang  rushing to troubleshoot multiple external issues at the same time can create overload for your internal resources    It s not necessarily that overwhelming for the people on my team  business operations  or on sales  It s actually particularly overwhelming for  invisible  functions at your company  the legal team  the finance team  and the HR team   I remember there were a lot of conversations about what was the right ex pat package  How do you translate healthcare benefits over for ex pats versus for local hires  A lot of these things are complicated but important questions  and solving them creates a lot of extra work for the people you don t initially think are required to be part of an international effort    These are all reasons for why anyone tasked with international expansion should have strong cross functional skills  and good social capital within the company  says Wang  You will be imposing a lot of extra work onto everyone else  and the stronger your relationships the better the outcomes  One way to burn those relationships  asserts Wang  is to aim for too much  too fast    Get one round out there  Internalize the lessons and build your V1 international playbook  then apply the playbook to make the second round faster  the third round even faster and go from there  But don t go from zero to ten  because it s going to be a big struggle    Special thanks to Chenli Wang for his participation in this post,"[256 975 1061 1019 826 663 190 19 912 1154 17]"
269,training-dataset/business/120.txt,business,Turbocharge Your Recruiting Machine   Here s HowToward the end of her interview process with NerdWallet  Flo Thinh politely accepted a dinner invitation from its CEO  Tim Chen  But instead of getting Korean food with him  Chen said another person  Dan Yoo  would be joining her  The three hour feast of Thinh s favorite food was as top notch as the company  Yoo asked about her career and interests  all the while promoting NerdWallet  At one point  Thinh was sold and said she could see herself working at NerdWallet and with Yoo  to which he replied   Oh  yeah  but I haven t signed yet    The lightbulb went off  Yoo was not NerdWallet s COO  as she had first thought   but its final candidate   and Chen had paired the two so they d bond and hopefully sign together  They did  At the time  Thinh had interest from many of Silicon Valley s tech giants  The Zynga alum had expertly guided the gaming company through hypergrowth  as it scaled from 40 to over 3 000 people over four years  So how did NerdWallet  the only bootstrapped startup  at the time  on her list  nab this star Silicon Valley people ops leader   At First Round s CEO Summit  Thinh  now NerdWallet s VP of People Operations  answered that question by outlining what distinguishes an exceptional Head of Recruiting as well as how to design and refine a magical candidate experience  Any startup that is seeking to dazzle and close the best talent will benefit from Thinh s hard won recruiting lessons culled from nearly two decades of experience   How to Recruit a Top In Class Head of Recruiting  Of course  it wasn t just a dinner that closed Thinh  Chen  who at the time was also wearing the hat of head recruiter  guided her through a phenomenal candidate journey   If I could sum up my hiring experience  I would say it was extremely authentic   says Thinh   Tim shepherded me the entire way  If he was trying to close me  he did a hell of a job    For startups seeking the same recruiting results  Thinh offers four qualities recruiters must not only exhibit  but embody  hustle  heart  tenacity and passion  Here  she ll deconstruct those intangible qualities  so you can spot them in candidates   Distinguish the detectives  Founders constantly ask Thinh how their recruiters can grow the top of the funnel   Your Head of Recruiting s ability to source world class candidates should be akin to a detective   she says   Identifying  researching  and sleuthing is a big part of the job  Recruiters generally harness three main channels to discover and connect with candidates  Applications  referrals and sourcing  During your early conversations  seasoned candidates should highlight using technology tools like A List  Gild  Connectifier  Rapportive  Hired and others to demonstrate an active following of new products that can improve their process     If you really want to turbocharge your recruiting  it s important to place a lot of bets on different tools and technology to amplify your efforts  The candidate you re speaking with should have a point of view on the tools that can save you time and money   says Thinh   Interviewing  assessment  and evaluation require a significant commitment from your entire team  Just as your Head of Recruiting is responsible for qualifying candidates  they re also disqualifying individuals you shouldn t be spending time with  The skills to discover and distinguish enough people to bring into the pipeline to find the right ones are essential    Look for storytelling  not selling  Especially when you re building a new brand  your Head of Recruiting has to be your proxy when they re meeting potential hires   They re constantly engaging  selling and pitching  They have to understand how a specific role fits into your objectives and then build a unique narrative around it for each candidate   says Thinh   That means asking questions like   If this person exceeds expectations over the next year  what s next   or  What could their career path be like at our company   These questions are designed to unveil a recruiter s ability to hustle  be scrappy and forward looking    Story is the driving reason Thinh joined NerdWallet and is an element her talented team of recruiters have built into their hiring process   For many startups  the person you re sitting down with may be your company s fourth team member or the only hire you ll have for the entire quarter  The last thing you want is for your recruiter to answer a question by saying   I m not sure  Let me go see what I can find    she says   Knowing that high performers seek to learn and be challenged  the best recruiters relay an aspirational vision and illustrate tangible growth opportunities for candidates within it    Think of it as a movie  Sell candidates on their contribution to a grand story  not their lines in the script   Ask candidates to pitch their last company  During her time as a talent partner in venture  Thinh worked with companies where every team member had a different version of their pitch  When you re building a new brand  your pitch has to be consistent and tight  Rather than having recruiter candidates pitch NerdWallet  she asks them to pitch the company they are currently representing so they can have the right context  Here s what she listens for   Compelling delivery   Did they recite a checklist of what the company does or did they get you excited about the problem they are solving   Authentic human connection   Do you feel emotionally engaged and invited to play a role in their story   Hunger to win  How do they approach their competition  What is their plan to own the market    If they can tie that all in  your recruiter s pitch should   and will   elicit an emotional response in you   Thinh says   It should inspire you to say yes  We hear the words  rapport  credibility  and trust   all the time  They aren t buzzwords  They actually really matter    Ask them to take your hiring pulse  Your Head of Recruiting is the right hand of everyone on your team  Thinh advises founders to ask these four questions to assess a candidate s ability to understand and respond to your hiring climate   How is this person going to help me navigate growing the team   Do we have hiring blind spots as a company  How are they going to help us uncover and address them   How are we affected by departments rounding out their teams   How should we be structuring our hiring process to remain competitive    When testing for this  don t just ask   How can you help me navigate and anticipate our hiring responsibilities    Thinh says   Ask them to describe these real challenges   and to ask you questions to get to the bottom of your specific hiring roadblocks  Your recruiter s influence is a force multiplier for your hiring managers that will trickle down throughout your entire company  Everyone should be thinking about the collective impact of growing your organization    Generating real  human connections is a recruiter s first and last job   Dynamic Recruiters Overhaul Your Entire Hiring Process  For any company   especially for startups   hiring is long and strenuous  Your head recruiter s ability to structure an interconnected sourcing  interviewing  and closing process is critical  This is how Thinh and her team do it at NerdWallet and what she recommends to those in her profession   Signal dedication through details  Precision in human connection should begin the moment you reach out to a candidate  At NerdWallet  the team seeks to discover small nuances in candidates  Twitter  Facebook and LinkedIn profiles  such as their favorite food or sports team  to weave into their outbound messages and future communication   Our work establishing a common ground with candidates is very deliberate  We try to find as many touch points as we can to connect on a personal level   Thinh says   Investing in this early  makes closing conversations drastically easier because you re acknowledging someone as a person   not just a name on a hiring list   from the start    Paying attention to the details also applies to the logistical side of the candidate journey  Little gestures can make a big impact  For example  NerdWallet gives candidates the following materials to make their experience before and after company onsites better   An interview day outline  NerdWallet sends every candidate an outline detailing their day at the office 48 hours before they arrive  It includes  the names and roles of the team members with whom they ll meet  interview times and duration  and any activities they will be participating in throughout the day  The goal is to provide them with all of the information they ll need to be excited to come in and have a great experience   Transportation tips  To help people avoid feeling frazzled walking into their interview  NerdWallet provides transportation tips  such as the nearest bus stops and parking spots  so candidates can start their day on a positive note   Literature for loved ones  Before a candidate receives an offer  NerdWallet shares their Benefits Summary  A helpful guide for people to take home to their families  and say   Hey  I m considering this offer  Let s look through this together    Being trusted by and transparent with candidates means giving context before it s requested   Paying mind to details leads to a personalized experience  which NerdWallet achieves not only in what it tests  but how it tests   Some candidates do an onsite case study where they present their findings to the team and others do whiteboarding  For others  we send a case study home with them and review it one on one   says Thinh   The key is to deliberately structure the process in a way that increases your ability to understand where a candidate excels  That ll depend on the role  function and candidate pool  but the key is to pinpoint the skills you re trying to tease out and be flexible in your interview design to surface them    Design the candidate journey as a dual audition  The urgency to fill a role and determine whether a candidate is the right fit often overshadows the hiring process as a two way assessment   So much of the time it s about checking the boxes on the hiring steps  questions to be asked and information to be gathered on candidates that we fail to think about what our candidates want and need to get out of the process   says Thinh   My team and I try to approach every candidate relationship as a bi directional vetting process  Many recruiters put that on the candidate to be proactive  but we know it s in our best interest to act as if candidates are similarly seeking context to inform their decision  We try to make candidates comfortable asking questions of us by asking questions grounded in our shared experience   such as feedback on the visit or interviewers that day    If every interaction is a dual audition  all employees   not just recruiters   need to be prepared to speak with candidates  A big part of that is helping them become authentic   Authenticity is a defining value at NerdWallet and every team member is encouraged to be their true self when interacting with potential hires   says Thinh   It s not about creating an alter ego or persona for your company  Really be who you are as a team and own it    NerdWallet s VP of People Operations Flo Thinh  That s not to say that NerdWallet s team members fly by the seats of their pants   We coach our team to answer the hard questions  If someone has a tough question  answer it  If they ask you about an obstacle you re facing  tell them about it  Be completely transparent   says Thinh   We want our candidates to see us as ourselves  Once you successfully recruit someone  they don t want to be sold  They can see through that right away    Thinh and NerdWallet s recruiting team also gives each team member extensive intel on each candidate   Interviews account for a bulk of time your team spends with candidates  You need to have really strong alignment to make a cohesive and meaningful impact  You have to take advantage of that time  Every interview is an opportunity to tell the NerdWallet story   she says   We equip every interviewer with candidate bios  how they were brought into the process   whether reach out or referral  the role and required skills for the open position as well as how the candidate is currently evaluating the position at that juncture   essentially if they re excited or passive  This gives team members the context to assess candidates well  NerdWallet also relies on the company s career development matrix to understand where a candidate fits into the team s current structure  Each learning is shared with the hiring team    Respect your candidates by acknowledging all of their needs  Be relentless about eliminating friction   Always go out of your way  This is the guidance that Thinh would impart if she could only give one piece of advice about recruiting  Thinh estimates that 40  of the candidates who they meet with aren t actively looking for a new role  They start as casual conversations until the team of Nerds goes out of their way to further engage passive candidates   Once  Thinh was on a search  She was the third recruiter brought in to try to tackle a challenging open role   It wasn t going well  and the hiring manager was getting really impatient  I found a candidate  reviewed his resume and felt like everything was in sync  I gave him a call in the morning and  as he spoke  I kept thinking   This is him  This is the candidate    she says   We knew the next step and timeline  but I felt it wasn t enough  So I asked him   What are you doing in a couple of hours  Can I come down your way and meet you for lunch   It was bold but it s an example of the ripple effects of going out of your way  The guy ended up getting a job there and staying a couple of years at the company    Over her 17 years in recruiting  Thinh believes what s changed most about the recruiting landscape is increasing importance of getting out in front of candidates to successfully court talent   We spend an incredible amount of time tailoring every part of the process exclusively for candidates  whether that s taking people out to lunch or hosting onsite informationals  In fact  in one quarter recently  NerdWallet hosted over 200 onsites   says Thinh   It s just a different market  You can t win unless you invest in candidates  experiences  It has to become second nature    At NerdWallet  every candidate is given a tour within the first 15 minutes  Team members with a variety of tenure  from two weeks to three years  participate in the process   We want it to be a very immersive experience  Every candidate should feel be able to get a sense of what it s like to work here  even if it s just by walking the halls and seeing teams at work   says Thinh   During the tour  candidates are given a guide to decipher the meaning of the names behind all of the conference rooms  It lets them in on our culture and it s an easy conversation starter for NerdWallet team members who lead tours  The team gives the candidates a note that thanks them for coming in to meet with them  If a candidate joins  they sign a handwritten welcome postcard    Find your threshold between speed and haste  At NerdWallet  the team has a SLA to respond to referral candidates within 48 hours   throughout every part of the process  Always keep your candidates moving through as frictionless of a cycle as possible  whether it s scheduling a phone screen or getting in touch with a referral   However when it s time to close  pump the brakes at least once  The most common mistake Thinh sees recruiters make while closing new candidates is sprinting through the decision  It s normal to be excited about making things official  however  she recommends pausing to ask   Is this candidate ready for the offer   Make one final assessment on how the candidate is making the decision  Make sure you ask   and have answers to   these questions   What is your framework for evaluating this decision   Who are you making the decision with at home   How would you rank the different elements of your decision   On a scale of 1 to 10  where would you rate your ability to say yes right now  with 10 being a resounding yes   If you aren t at a 10 yet  what is holding you back  What can we do to get you to the finish line   Timing is particularly telling if a candidate is interviewing with other companies   Never give a stale offer   Thinh says   When you make an offer too early it s just going to sit there  The candidate is going to shop around and compare it  Don t pretend they aren t in process with other companies  Ask what stage they are at and how they re feeling about them so you can determine when and where you fit in    Frontload your compensation conversation  Compensation can be an uncomfortable conversation if you fail to surface it early in the process   Your recruiter needs to have already built that rapport and directly connect with the candidate about the terms  If you wait until everyone agrees that you have a great candidate  you onsite them  and then you start discussing an offer it s going to be a challenge     At NerdWallet  our recruiters have a really strong understanding of the compensation philosophy that we created  it helps in making the process as straightforward as possible  As soon as we sense mutual interest  we share it with a candidate  It not only enables us to make the first move  without requesting they disclose any information  it also distinguishes us as a company  When it s time to make the close  both parties are aware of the deal and are respectful of each other s needs    The litmus test for your hiring experience is your final conversation on compensation   it can reflect just how meaningful the candidate journey has been  Remember  you re selling an opportunity to play a part in a world changing story  not a rigid  bulleted job description   There s something very distinct about your company  culture  the opportunity and your technology   Thinh says   Leverage it  It should help your candidate answer questions like   How does this map to my career aspirations  What am I going to learn that is new and exciting  How will I make a meaningful impact on the world   If you start addressing those questions from the start  compensation doesn t become an obstacle    Treat your candidate journey like a product   refine it relentlessly  In the same way you measure usage metrics for a new release  every hire you make is an opportunity to study and improve your process  One NerdWallet employee was new to hiring and Thinh noticed an unusual drop off at the phone interview stage   After looking at the drop off week over week  we went back and talked to the candidates who didn t proceed in the process  They gave us two pieces of feedback  We needed to tighten our pitch and one of our Nerds needed more experience interviewing   she says   Actively capturing this saved us a lot of potentially lost time  You don t have to wait until you ve made 10 hires to start measuring and refining  You can gather valuable information from a single hiring process    Your recruiting process is your sword and shield  Sharpen it regularly  Wield it wisely   Your Candidate Journey is Your Competitive Edge  The month Thinh spoke at First Round s CEO Summit  she noted that there were 12 700 software engineer positions open in the Bay Area  plus 7 400 product manager positions  with an average of 1 500 being added every day  How can early stage  cash strapped startups stand out among giants like Apple or Facebook when trying to fill these roles  First  follow Thinh s tips to help find and hire a capable Head of Recruiting  Look for the storytelling detective who can as easily pitch her last company with nuance and ask the right questions to equip her to pitch your startup  Then find and pull the levers to create a magical candidate experience  Always go out of your way and sweat the details  Frontload the conversation about compensation  Conduct dual auditions  Find your balance between speed and haste  Always look to refine your process    As with any business  the people part is both one of the most difficult and transformative components of growing a company  The wins happen in the margins  How will you activate the little hacks and tweaks that enable you to bring candidates into the fold  It s not just up to your recruiting manager  It s up to your entire team   says Thinh   You need someone for the job  but  of course  the hiring process doesn t just revolve around your needs  Similar to getting married or buying a house  finding a new job is really stressful  So  whenever you think you re done honing your hiring process  return to it and ask yourself  how can I alleviate stress for the candidate and make the process more frictionless  The future of your team depends on it,"[269 304 76 255 601 1061 17 1154 190 679 120]"
277,training-dataset/product/519.txt,product,The 5 customer support metrics that matterThere are hundreds of support metrics your customer support team can track  But you will only understand how well you re supporting your customers if you are tracking and acting on the right data  Metrics are indispensable to every great customer support team   from planning hiring to ensuring your team has the resources they need to succeed  But when your customer support team are drowning under a sea of queries  it can be difficult to see the forest for the trees   Not everything that can be counted counts  and not everything that counts can be counted     Einstein A lot of startups use the  crystal ball  approach to customer support metrics  thinking that the answer to all their problems can be found buried in endless charts and graphs  But this approach can often leave you with more questions than answers  It s important to keep the data in perspective  and not to let them obscure your real job   supporting your customers  At Intercom  there are 5 key customer support metrics we ve found most useful as we scaled our support team to support over 15 000 customers in 85 countries  It s not an exhaustive list of every single customer metric that can be tracked  But it is a selection of the key numbers that will help you grow your company  without getting bogged down in the numbers  1  Total conversations  One of the simplest but most powerful metrics is a count of every single interaction your team has had with your customers over a given period  Tracking this over time can give you a 360 degree view of support trends  Are we seeing support requests spike at certain times of the day  Are we experiencing more bugs in our product  It s a good place to start when building a customer support hiring plan  and gives you a good idea of how much work is on your team s collective plate  Be warned   taking total conversations as your only metric can be misleading  Not all conversations are created equal   some queries don t need to be responded to  while others were never meant for your team in the first place  2  Conversations per teammate  At Intercom  we track the number of conversations that each teammate handles  more traditional customer support operations would call them cases   It s a great way of showing when and where the team is being overworked and needs backup  In addition  we have benchmarks for the number of conversations per day we expect an individual to handle based on their role and their tenure in that role  These benchmarks give everyone a clear idea of what is expected of them  That said  there are many reasons an individual might fall short of a given benchmark  For example  they might have got wrapped up in solving a particularly complex issue for a customer  Recently  we have decided to use this metric as a KPI for individual reps and engineers on the team  But we still feel strongly that it s not a quota  but a conversation starter  3  Conversations per teammate per day This metric is the cornerstone of our recruitment planning  Generating it is fairly simple   just divide the total conversations your team handles by the number of people on the team by seven days  or five if you don t offer weekend support   Deciding on what s a  good  value isn t as straightforward  It will be different for every business  every product and every team  At Intercom  we used to shoot for roughly 35 conversations per teammate per day  We arrived at this number after looking at a lot of historic data  and honestly discussing our workload within the team  But more recently  we ve lowered that to around 30 as our team has grown and become more complex and responsible for a broader spectrum of duties  The key point is that this figure isn t immutable  it s something we regularly revisit and update as our team and workload changes  4  Response time,"[277 296 1265 76 708 715 220 74 17 1030 315]"
296,training-dataset/product/947.txt,product,Intercom s Jeff Gardner on keeping customer support personal at scaleTreat your customers poorly or fail to educate them on how to use all the great features your product offers  and they won t stick around for long  Focus on providing an empathetic  human support experience  however  and you ll get free word of mouth and be able to funnel user feedback into an even better product  No one at Intercom knows this better than our Director of Support  Jeff Gardner  Nearly five years ago Jeff was hired as our sole front line support person  He s the only person I know who s scaled a world class support team and physically scaled Yosemite s El Capitan six times  Jeff s based remotely in the Italian Alps  and when he s not obsessing over our customers  he s most likely in the mountains  Jeff joined me on the podcast to share the values that anchor a successful support team  why writing skills are so crucial for his team members  where he thinks customer support is   or isn t   heading next  and more  If you like what you hear  check out more episodes of our podcast  You can subscribe on iTunes or grab the RSS feed  What follows is a lightly edited transcript of the interview  but if you re short on time  here are five key takeaways  When customers write in continually with similar questions  it s paramount to dig deeper  keep asking  why  and discover the root cause  There may be a way to change your product and eliminate the issue completely  There are two types of empathy  emotional and cognitive  The latter  making an effort to understand someone s mental state  is the real difference maker in customer support  Adding a written component to your customer support interview process is a great way to measure how a candidate conveys meaning and emotion  If your support team opts for global  24 7 coverage  you ll have to embrace remote team members  In Jeff s experience  the challenges of managing these folks is worth giving customers better  faster service  Self serve content plays an important role in a sound support strategy  The challenge is learning what experience to serve your customer   human interaction or documentation   depending on the scope of their problem  Adam Risman  Jeff  welcome to the show  You started nearly five years ago at Intercom and were our first support hire  Now we re a support team of more than 50  What were you doing before Intercom  Jeff Gardner  Before Intercom I was actually focused mostly on software engineering and development  I built web apps for clients freelance and after that worked for a very small company building iPhone apps for clients as well  I knew about Intercom because of Des and Eoghan  and I had been following their Contrast Blog for several years  I m good friends with our VP of Engineering  Darragh Curran  so I heard there was this new thing coming along  The stars aligned and there was an opening  and I jumped at the chance to be able to work with those guys  Adam  Speaking of development  in your early days here you actually wrote our first iOS app  Jeff  I did  I don t know if that was an oversell on my part but it was one of the things that I think got my foot in the door  I remember Eoghan saying   Well  we need somebody to look after support  but you can build iPhone apps too  right  Okay  cool  Maybe you can do some of that at the beginning as well   The inbox was actually pretty quiet back in those days  I had quite a lot of free time between answering customers during which I could work on it   Jeff built Intercom s very first iOS app  pictured above  Adam  A lot of our listeners are from very early stage companies where  like in your early days  support is one of their many jobs  As that inbox volume began to build up  how were you able to manage those competing priorities  Jeff  Customers were always the priority  Yes  I ll work on these other projects  and yes  I ll try to get as many bug fixes done as I can  I ll do whatever I need to do in the time that I have  but that time is limited and our customers are our first priority  As that priority grew and as the load of that priority grew  the other stuff fell off the plate and rightfully so  As we had more customers and they were writing in more frequently it became a full time job   and then it became more than a full time job  That s when we started looking around to hire and started to build out the team  Building a foundation of core values Adam  When you started to build out the team  you had a hiring model built around volume of initiated conversations  For every 35 extra conversations a day  you would add a team member  Between supporting our customers and building out the team  how are you able to find time for more foundational things like say  instilling team values and things like that  Jeff  That s a slightly simplified version of things  We did have an idea in our mind of what made for a reasonable workload   one that left enough time to actually feel like you could give customers your full undivided attention for the amount of time that they needed  It was in the neighborhood of 30 35 conversations per day  When we were scaling the team  I built a hiring model that tries to take into account a bunch of different factors  It s fairly accurate  but there are assumptions built into most models and ours is no different  As we started growing  we weren t always able to grow at the exact pace that we hoped  It has always been very  very busy  and that s no different for any support team   The foundational stuff like team values came out of really early conversations I had with one of our co founders  Des  We had had a few mis hires and after those couple mis hires we asked   What is it that we re actually trying to do here  Why  What does that mean for how we act day to day  How do we talk to customers  What matters more than other things   Once we did that  it made hiring a lot easier and it made hiring the right people infinitely easier  Because we were forced to do that early on  we benefited from that investment many  many times over  We ve hired the right people who have been extremely focused on giving a great customer experience and that s meant that we ve had to do a lot less work on other things  Adam  Speaking of values  your team has seven of them  I m going to toss a few out  and you can explain what they and why they re so important to the way the team functions  Let s start with   Focus on fundamentals   Jeff  This one is maybe my favorite  but is also maybe the most contested among the team  This value is all about the basics of communicating  the basics of human psychology and behavior and the basics of how you give someone help  personally  as a human  How do you avoid being what a lot of support teams get boxed into  which is being hooked to a fire hose and trying to deflect customers as fast as possible  It really comes back to that ability to write well  the ability to communicate well  the ability to distill complex situations and complex bits of the product into simple language that people understand and move forward with  It s not about any fundamental thing of customer support  It s about  fundamentally  can you communicate as a human to another human being  Adam  One that I really admire and that I ve seen in action when I ve worked with your team through customer days  where employees from all different parts of the company get to sit down and actually work the inbox for a day  is  Treat the problem  not the symptom   Is there a way we could change our product to make this type of question  go away completely  Jeff  In the beginning Intercom was a much more complex and difficult product to get started using  The growth team has done a fantastic job of making every step of the process a lot  lot easier than it used to be  We tried to do the five why s and ask ourselves  why is this customer asking this question  Why are they having that problem  Why are they running into this  What does it come back to  It comes back to the Jobs to be Done framework that we use for a lot of things at Intercom   Treating the problem  not the system  means we re not just telling the user how to get the thing done and moving on to the next user  We re actually taking the extra second to ask ourselves   Is there a way we could change our product to make this type of question go away completely   Adam  You hear virtually every support team through around the word  empathy   but it s hard to tell if they re using it genuinely or not  What do you mean with the value of  Connect personally  with empathy   Jeff  You re right  empathy is thrown around quite a lot  To me there s two big types of empathy  There s the type of empathy where you feel bad for someone that s in a bad situation  You re thinking  that person got in a car accident  I feel bad for them  that must suck  Then there s a different type of empathy which is cognitive empathy  Cognitive empathy is where you re actually putting yourself in that position  Putting yourself in their shoes  thinking hard about the challenges they re facing  Why are the asking this question right now  You connect that with connecting personally with the person themselves and thinking about their day and what their challenge is and what they re trying to get done  Why are they writing into you  They re obviously having a problem or they re confused about something that s slowing their job down  It takes the teeth out of angry customers  It gives you a better sense that there s another person on the other end of this line  They are not in a great place at the moment  You re here to help get them out of that bad place  understand what they re going through and figure out how to fix it for them  Why writing skills matter Adam  You mentioned writing there earlier and there s an old Signal Vs  Noise blog post that basically says  for any position  all things created equal  you should always hire the better writer  Writing skills have really been an area of emphasis for you as you ve grown the team at Intercom  What is it specifically that you re looking for there and what other attributes stand out with successful customer support hires  Jeff  I love that post  It really does come back to that focus on fundamentals value  Being a good writer means you are a good communicator  It means you can structure information in a way that conveys meaning to another person  Being a good writer means you are a good communicator  Being a really great writer versus being an okay writer  it seems like once you get the basics down you re fine  We ve all written papers in school and we can all put our point down  back it up with three different things and write a conclusion  To me  writing skill is all about  how few words can you use  How short of a sentence can you write  How clear of a message can you give to someone  How much can you convey meaning and emotion in there  One of the steps in our interview process is to have people complete a written take home test  This comes before we do any of the other interviews  We ask a lot of questions  which are aimed toward the person s thought process around customers  giving people great experiences and the types of things they re gonna be faced with in their day to day job  More than half of that test is really about how quickly and clearly you can convey those ideas  Adam  How does voice and tone play into writing skill  Obviously they ve got to adjust to a whole range of situations on the job  Jeff  We ve got a very clear tone at Intercom  We speak in a very recognizable way  In the support team we have a whole doc in our wiki that goes over how we talk to customers  It basically outlines what that tone is and what that voice is  It s not to say that we want people to all sound exactly the same  We want everyone to add their own flavor to it  Like that value  connect personally with empathy  You ve got to use some of yourself in there to actually make that type of empathy work   That test  is not necessarily about having everybody sound exactly the same or have somebody give you the answer the way you would write the answer  It s about seeing a bit of their personality in the answer but also having a lot of meaning and depth conveyed as well  Some of the best answers I ve ever seen on these questions are ones that have two or three different layers to them  When you read them the first time you can glance through and think   Okay  that was a good answer   Then you read it again and say   That s actually a really  really good answer   When is it time to go global  Adam  As you ve scaled the team  we now have a lot more remote CS teammates in places like APAC  A lot of our listeners are probably asking themselves   When do we need to offer 24 7 support  Do we need to move or have people in a lot more of the places where our customers are   How did we come to the conclusion that it was time to expand this way  Jeff  This is going to vary massively for every company depending on their customer base and where their customers are  what type of product they are  and how mission critical their product is  Are customers willing to wait a little longer  or not  We decided early on that we wanted to start aiming toward 24 7 coverage  Our mission is to make business personal  so to us a big part of that was having a person ready to talk to customers at most hours of the day  most days of the week   As we got closer to 24 7 a lot of things had to change  We didn t have an office in the Australia Pacific region  We had to do what we had to do  which was hire remote people  To be honest  this makes sense coming from me  because I am remote myself  We had a lot of success with hiring remote people  There s a certain type of person that if they ve worked remote for a certain period of time  they understand the challenges  they understand limitations  but they re also doing it out of choice  They already think   I ve got a good deal going here  I get to work from home and that suits me   That s what they re going for  There are obviously trade offs  It s much harder to manage a team that s global  It s much harder to be a manager of somebody that is nine time zones away from you  You certainly aren t going to do as good of a job managing that person as if you were sitting in the same room as them  The trade off for us was worth it in the sense that we could give our customers much better and much faster service  Adam  As you mentioned  you re remote  based in Italy out near the Alps  We just opened a new office in Chicago this past fall  which for now is home primarily to customer support folks  As you spread the team further and further  is it harder to get new hires to buy into the values and culture you ve established  How do you keep everyone connected with that as the team spreads  Culture  beats strategy  culture beats everything  Jeff  It s definitely harder  Anybody that says otherwise is lying  Even something as simple as trying to get a customer support all hands meeting scheduled  you have to accept the fact that not everybody is going to be there  Every single hour of the day  some of the team is asleep  It s one of those things you have to really focus on  This is where those values and having those values entwined with everything we do from hiring to onboarding to the regular performance reviews that people do comes in  It s really important because that s the only way that people are going to understand what that culture is  Seth Godin once said that culture beats everything  Culture beats strategy  culture beats everything  You re going to have a culture whether you want to or not  Whatever that culture is  it s going to trump whatever you say you want done  It s important to double down on making sure that everybody understands it  everybody actually celebrates it when people do a good job  and call out when people fail or fall short of the culture  Adam  Onboarding these hires  what lessons have you learned as you went through the first couple rounds of this  Jeff  Onboarding for us is now a highly refined process  We ve gone through a couple of versions of it  We ve got a couple people on the team who have done an incredible job of codifying everything about our onboarding and making it as succinct as possible while still keeping a lot of the depth there  For people in an office  their first two weeks are primarily onboarding  nothing else  For all the remote people we hire  we bring them to one of our offices to do two weeks of onboarding with part of the team  That helps instill that company culture  It helps the remote hire feel like a part of something bigger than just themselves in their attic or bedroom working  And helps really to kickstart their product knowledge  Without customers  there s no business Adam  As someone who s made a career out of it I m sure you notice a few things other companies do that bothers the hell out of you  Maybe it s not empathetic or not personal  etc  For example  I hosted Basecamp s Chase Clemons on the podcast fall and he gave a very passionate speech against no reply email addresses  What common pitfalls do you think startups should absolutely avoid  Jeff  This is a very rich topic  I landed reluctantly in customer support in a certain sense  I really enjoyed building software  It s great fun  There s a ton of learning there  I was never fantastically good at it  but I did enjoy it a lot  Looking back with that 20 20 hindsight I realized there are so many things that so many companies and businesses do that really bother me  The customer support set of things was always buried there deep inside  No reply email addresses is a minor one that is very annoying  The worst thing is when companies treat customer support as if it s simply something to be outsourced or something that doesn t matter to their overall business  Their selling widgets and they re saying   Somebody is going to buy these widgets no matter what  we don t really care about them but they re gonna pay our price for the widgets   Thankfully a lot of this is changing  but business depends on customers  Without customers there is no business  It s impossible for businesses   and certainly SaaS businesses that rely on repeat business every single month   to ignore your customers and impossible to treat them badly and think you re going to be around for very long   There s a whole host of things that companies do very poorly when they don t focus on the customer experience and they don t remember that building a great  beautiful product  well designed product is only half the battle  You still have to get that product into the hands of your customers and make sure they actually understand it  You can build the nicest  most beautiful thing in the world and if no one buys it  you re sunk  It doesn t matter what you ve built because no one s going to use it  Supplementing with self serve Adam  One positive trend that we re seeing a lot  something that popped up quite a bit in all of the recent year end articles about where customer support is headed in 2017  is the concept of self serve support as a supplement to human support  We just released Educate  our knowledge base product  back in December  so obviously we re believers in that  What role should self serve content play in a sound support approach   Jeff  This is a really interesting one because it s not that self serve content or knowledge bases are a new thing  They re not a new concept at all  but he implementation has been really poor for a long time  Where there s a lot of room to grow and where I know we re hoping to take things is in smartly serving content when that s what the customer wants  and smartly serving a human when that s what the customer wants  That is actually really  really difficult  It sounds super simple but it s actually terribly hard to understand the intent of a customer and understand what exactly they ll be best served by in any situation  I speak for a lot of other people out there when I say that I would always rather get a docs article and get my problem fixed in 10 seconds of reading  rather than trying to talk to a human  As much as I like talking to humans and as much as I love when I get great support from someone  it s still just easier to read for 10 seconds and then have the problem solved and move on with my life  That smart serving of the right type of content or the right type of support interaction  whether it s served by a knowledge base site or by a human is the crux to unlocking a bunch of this stuff  Hopefully this is the year where we see a lot more of that stuff happen  Adam  In addition to self serve are there any other trends you re seeing that startups should be sure to watch  Jeff  One thing that I think is super  super hyped is bots  Hugh Durkin  one of our PMs  wrote about it very recently on the blog  Bots are super hyped in the sense that it s almost never easier to use a small keyboard or even a big keyboard to back and forth with a bot that only understands a certain number of commands  Hugh likened it to a command line interface  Command line interfaces have been around as long as computers have been around  It s nothing new  it s not novel  and it s not helpful for the most part,"[296 1265 76 277 363 17 1061 19 315 975 1385]"
304,training-dataset/business/550.txt,business,How Hiring Has Evolved at BufferWe ve shared a bit in the past about what we believe creates a great fit at Buffer  but the hiring process is so much more than these factors alone  How do you create a positive experience for all candidates  regardless of the outcome  How do you avoid bias and view all candidates through a lens of equality   We don t know all the answers to these questions  but we re always experimenting and learning  As a result  we ve developed five core philosophies that guide our efforts  I d love to share them with you here   What hiring at Buffer looks like in 2016  First  a bit of background  In less than 2 years  our team has grown from 17 to 79 people  In the past year  we ve revised our hiring process to suit our needs as a scaleup company   I joined as Buffer s first Culture Scout in October 2015  when we went from growing the team by 1 2 people per month to being on the lookout for 30 40 team members between September 2015 and April 2016   Some of my first responsibilities included shaping a newer framework for hiring  selecting  and interviewing  along with creating a great candidate experience and getting to know people in a consistent and unbiased way   In April 2016  we expanded the People team further when Jenny joined and helped us further define the hiring process   With a team of about 80 right now  we re deliberately growing slower and only hiring for a few more roles in the coming months  We are looking more carefully at the needs of each area  digging into the  why  in each role  and applying a more disciplined financial lens that allows us to grow more in line with our revenue rate   Rather than trying to set up a strict set of rules that might not stretch with our growth over time  we ve made the decision to rely on our Culture Scouting philosophies instead   We believe these philosophies and best practices may stick around for longer that a  process   the same way we believe defining your culture s values can help with many other decisions    Our 5 hiring philosophies  Here are five  philosophies  we try to live by  and have sometimes failed at  and some of the lessons that might be of interest to others growing a team   1  Define what we need before we start looking  We ve found the best time to find a consensus on a role and what skills it mgiht require is before we hire  not while we re reviewing candidates   We brainstorm with our teams on what their needs are and collectively write the listings  One of the ways we ve found works well is to ask ourselves the questions like   What goals need to be achieved a year from now for us to consider this a successful hire  What would an amazing candidate accomplish in a year  For an amazing candidate to accomplish that  what do they need to do during the 45 day bootcamp  What are the traits  skills and qualifications this person will need to be successful   One unique aspect of defining a role for us is having the team agree on whether a craftsperson  deeper knowledge expertise in a specific area  or generalist  with T shape skills  is needed  Making sure we have a training plan in place and getting everyone on the same page about the sequence of interviews enables consistent candidate evaluation and reduces total interview time   We try to be honest about the skills needed while also keeping the door open for as many candidates as we can   As a result  we work extensively on the job description  training plan  interview planning  interview question tailoring  etc  before we even post the listing   2  Transparently share as much as we can    Our Journey page aims to reflect who we are as clearly as possible   When we put all our cards on the table with full transparency  we ve found it encourages candidates to be honest and do the same   Some key elements of our jobs page include   Some info on how we work together remotely  A list of all our culture perks  Pictures of the team  in all sorts of settings    Our commitment to diversity and equal opportunity employment  Listings that set clear expectations for the role and measures of success  Our COO Leo gave a talk recently about how company culture isn t something you can really shape  but rather how you have to sit  observe and write down what you see  The first step for us in looking to scale our hiring was to be clear on what our values were and articulate them honestly on our hiring page   Once we had those values defined  it helped our interactions with candidates to make an objective decision about how closely they aligned with us     3  Know what we re evaluating with every interview question  It might seem a bit unusual  but we don t ask for r sum s during any part of our process  For our purposes  r sum s don t often give us the depth of information we re looking for   Instead  more weight goes into the messages that applicants share with us  both in writing and in chats  So it s important that we have an unbiased way to know what we re looking for   We recently went through team training on managing bias that was enlightening from that standpoint  and our Inclusivity Catalyst  Courtney  is a great champion for keeping that top of mind   We try to craft application and interview questions that will help us evaluate attributes we ve predefined through our role needs and values  These sorts of questions can be a mix of verification questions  behavioral questions  situational questions  and skills tests   We avoid any question that doesn t provide useful information and might allow bias to creep in   Here s an incredibly helpful resource on the interview process that Google uses    Then we take it one step further  Before we ever speak to anyone  we already have an idea of a good answer  an OK answer  and a  pause answer  for any question we ask   Say we re asking a candidate to share a moment where they made a mistake  Depending on what they share  we might get insights on their transparency  empathy  vulnerability  and ability to  do the right thing   which is one of our values     A potential good answer could include them admitting the mistake early on and owning up to it  Another good answer could be in their ability to reflect on the lesson they learned from the mistake   Answers that might give us some pause could include hints of blaming others or circumstances  or sharing a mistake that puts them in the  savior  position and misses the opportunity to show vulnerability   Here are some other areas we craft questions to dig into  It s important for our teammates to   Have a growth mindset  Do they like to learn and how    Show a good bit of empathy  How do they react to technical glitches or misunderstandings    Be okay with vulnerability  How open are they in the conversation    Have a knack for working remotely  Do they have a track record of having shown drive in their professional or personal projects    Have worked independently in the past   Have they had to manage their own schedule to get something done    Then  we define questions that will give us a benchmark  knowing that there is no wrong or right  Everyone is different  but these benchmarks can indicate how well the candidate might do on our team   As we scale our hiring and as the team grows  our interview questions have changed based on how our values have changed  We challenge these questions from time to time to ensure we know   Why do we ask this    4  The  interview  continues during bootcamp    While it might seem helpful to avoid overloading a candidate with information before they even start working  we believe that sharing expectations early on is one of the biggest favors we can do for both our new teammate and the whole team   This is still something we re striving for and haven t quite nailed down    To set people up for success  we default to providing more context and sharing expectations early on   For instance  if we bring on a full stack developer who we later learn will spend 80  of their time working on backend development  we ll tell that person as soon as we can in order to prevent any surprises   Interviews and pre hiring chats play a big role in new team members  training and making sure they will truly feel at home at Buffer   A candidate recently shared with me his feelings about our new employee bootcamp at Buffer   I love the idea of the 45 day bootcamp  Playing competitive sports my whole life growing up  no coach would bring players onto their team without seeing them in action first    Bootcamp not only gives everyone on the team the opportunity to get to know the bootcamper and explore some of the areas that interviews might not have shed the light on  but also allows the bootcamper to experience what working at Buffer really is like and compare it with their expectations before moving forward with their journey   Our bootcamp generally lasts for 45 days  though sometimes it can be shorter or longer depending on the communication within teams and what challenges might arise  We are continually fine tuning the bootcamp process to set everyone up for the most success possible   So far in 2016  we ve invited 36 people 24 people in Q1  10 people in Q2 and two people in Q3 to join us for our 45 day bootcamp  About 90  of our team members continue with us past those 45 days  up from 70  last year    The group of people who check out the jobs page and step forward are very special to us   It s a very vulnerable experience to reach out  and we re committed to making the application process at Buffer a positive one  no matter the outcome  Here are some key metrics that we aim for  regardless of the number of hires we are working on   Get back to all applicants in 10 days or less  Historically  we ve been a bit all over the map here  with everything from nine days to an average of 25 27 days  Overall  it has most commonly been around 15 days   We ve tried a few things to get replies out more quickly to candidates  blocking out more time  sharing the task between several teammates  keeping each other accountable for a result of under 10 days first response time  We ve had encouraging results  and today we re at about 7 8 days for first response   Never leave more than three days between each step in the process  We think of this as  in the dark  time and try to minimize it  Two key things that have worked well for us here  1  Be upfront with the candidate about the expected time they ll hear from you 2  Use as many reminders and due dates as possible to keep yourself accountable  We use Trello   which is super handy    We think of this as  in the dark  time and try to minimize it  Two key things that have worked well for us here   Continually test and adjust the process  We tend to operate lean and scale as processes and theories are validated  We ve gone through many iterations of our process and had a few bumps along the way  with response times being a bit too long and many different people juggling the role of hiring across many different teams  As we ve recognized and defined our philosophies  the processes have been better ironed out and overall we re able to provide a better service to our amazing applicants and our internal teams   Over to you  What pieces of the hiring process here resonate with you  Do you have any suggestions for how we can improve our process  What have been some of the best hiring processes you ve experienced  We d love to hear in the comments,"[304 76 269 17 973 499 601 296 981 1061 1421]"
315,training-dataset/business/684.txt,business,Finding your way from maker to managerThe transition from engineer to engineering manager can be a tough one  But become a manager of engineering managers and you re even further from what attracted you to the job in the first place  and maybe even what you identify yourself as being best at   My own time at Intercom can be described as a play in three acts   I joined as an engineer  moved over to engineering management and now I m a manager of engineering managers  The third act is only really starting  and now s a good time to reflect on the changes and nuances I ve observed after transitioning between each role   Act 1  Engineering  When you are a manager  it s easy to look back at your time as an engineer with rose tinted glasses  When I look back at my first year at Intercom it almost feels like I was free to do whatever I wanted   I spent my time building new things  fixing things that were broken  and contributing to a variety of activities across the engineering organization   Will the person I m in the room with take me seriously as I pretend to sound like a manager   Other than a daily standup meeting  weekly 1 1 with my manager and a weekly planning session  my calendar was mostly clear  Of course  the nature of the work I was doing as an engineer was quite different to what I do as a manager  and the tasks definitely filled up my free time   hustling to drag weekly commitments over the line  painstaking and time consuming analysis of outages  and doing technical research  They re all activities that I don t do very often these days and take a lot of time and effort to do properly   A lot of the work that I was doing was easy to quantify  I d close a few issues  complete  or occasionally miss  a weekly team goal  submit and review pull requests  modify a cloud scaling policy or two and do some hiring activities like interviewing or reviewing candidates  Satisfyingly the work being done here was largely tracked automatically  and it was easy to see what I d been doing each week   not that the work itself was easy though   Management doesn t give you the same sense of immediate progress as shipping code does  Important things you do as a manager  such as 1 1s  writing roadmaps and making sure the team are working well  don t tend to have as easily quantifiable outputs   at least not in the short term   Act 2  Managing engineers  My motivation to manage comes out of wanting to do more  Through managing a team of engineers  I can get more done in the way I want to get it done  I can help out more with growing people  and get more involved in wider activities such as recruiting and public speaking  So when an opportunity arose to move to manage a team in Intercom  I jumped at it   It didn t take too long for me to hit calendar bankruptcy   Once my job title changed to manager and the company directory got updated  I thought for a few minutes that I was actually now a manager  I dutifully updated my LinkedIn profile and admired my new position in the company directory  Being a manager is great   It was only when I started doing basic management tasks   sending out invites to weekly 1 1s  planning what I was going to say at each 1 1   that I found being on the other side of the conversation quite intimidating  I had experience mentoring and chatting to folks in 1 1s  so the experience wasn t totally new to me  But nervous negative thoughts quickly started to creep in  what if I said the wrong thing  Will the person I m in the room with take me seriously as I pretend to sound like a manager   It doesn t help that you re often managing folks who were until recently your peers on a team  The nature of your relationship with your team  the people with whom you spend a huge amount of time with every week has rapidly changed  an obvious source of stress  Getting good at 1 1s takes not just practice and preparation  but also requires delivering a few terrible 1 1s  As you get more practice  1 1s get easier and far less stressful and become an enjoyable part of the week  though there are occasionally tough conversations to be had too    Over time  my calendar started to get very busy with invites to  Very Important Meetings   I had to represent my team in some meetings and shielded engineers from being distracted by them  I needed to know the status of projects and things that were going on that could impact my team  I was now the natural location for escalations and pings about things my team were involved with   It didn t take too long for me to hit calendar bankruptcy  I wasn t getting around to doing things that are important  and even just replying to simple emails seemed to get lost in the frenzy  It s unfortunate that learning how to say no and when to delegate usually requires a complete meltdown of your schedule first   Another important lesson I learned the hard way after transitioning to a management position is when to  managineer    that is  figuring out what technical work to get involved in  The easy answer is to not do any technical work at all   managers should manage  This sets a clear demarcation between engineering and management  but it s often not very practical  and it s tough to move on entirely from technical work   Engineers moving to management roles typically have significant technical depth in their field and a track record of getting work done  My experience as a manager is that taking ownership of weekly deliverables for the team almost never worked  Something urgent would come up and it was too easy to immediately consider the engineering work expendable  The tasks themselves also suffered from inevitable underestimation of the time it d take to complete them  As a manager  these icebergs are all around you  It certainly didn t help that my engineering skills were getting rusty  and my development environments needed to be cajoled back into life  lying relatively idle most of the time   That said  there is some engineering work that can be worthwhile to take on as a manager  It s usually non critical but still important to the team   stuff like clearing out some technical debt or turning things off to make the team more productive  Taking on call shifts only worked well out of office hours  In the office my team tended to have a reasonable amount of low priority tasks to attend to  and the on call engineer would typically take these  These low priority tasks tended to get dropped in the same way that project work did  This didn t set a great example to my team in how I expect them to act when on call  and resulted in on call debt being built up   Act 3  Managing managers  As Intercom has grown  we ve built new teams dedicated to functions that didn t have dedicated staff  but are critical to Intercom s future success  Running Intercom s infrastructure team  early last year I was well placed to build out two such teams   Security and IT  At the same time we backfilled the engineering manager role in the infrastructure team  and suddenly I was in a job that could be described as middle management   Lots of great advice has been written on how to transition from engineer to manager  But less has been written on how to manage managers  Some have come close  but none have hit the mark for me  Here s a few things I ve learned so far though   Respect other managers boundaries  Part of the problem for me is still feeling attached to my original team  Figuring out how to engage with the team in a way that is valuable to them while not undermining or stepping on the toes of the team s new manager has been tough  When I handed over management of the infrastructure team I told the new manager   This is your team now  Organize it they way you want  and don t follow what I did just because it was what I did   He did this  which was great  however in day to day practice I was still getting involved in project planning  task breakdown  low level implementation discussions and day to day operational events  I needed to be more deliberate about making room for growth and allowing him to truly make his mark on the team   Distance can be a positive thing  One thing that has helped a lot is not showing up regularly at daily standup and planning meetings  which forces me to work with the team to understand when I should have input and when they want me to get involved  We ve since established a solid working relationship when planning the team s work   distance and formality have helped a lot here  though they both feel a bit unnatural when you are putting them in place   So far my experience managing at Intercom has been really positive  The teams I ve worked with have done some great work  and I m very proud of what they ve delivered and how they ve gone about their work  Moving from engineering to managing and beyond involves a lot of pain and change  but it s been really worthwhile  For me  talking through what s happening with your reports  managers and a good peer network is the most important tool you can use to survive the transitions   We d like to share more about our experiences and what we ve learned about Engineering Management at Intercom  We re putting on an event in our Dublin office on January 31  2017 with content from our engineering team about Engineering Management  and hope to have some great conversations on the night too  Sign up for the event here,"[315 17 391 1146 363 1385 973 1218 76 1030 390]"
318,training-dataset/engineering/1329.txt,engineering,Increasing Your Team s Capacity To Win   Greylock PerspectivesIncreasing Your Team s Capacity To Win  Podcast   Twitter Head of Revenue Engineering Wade Chambers   Taking on the responsibility of an engineering manager is part technologist  part anthropologist  part psychologist    In the latest Greymatter podcast  Greylock Talent Partner Dan Portillo sits down with Twitter Head of Revenue Engineering Wade Chambers to discuss the art and science of managing technical teams  Wade shares personal insight into his development as a leader  and shares frameworks for structuring productive meetings  providing feedback  and optimizing for a high functioning organization   Wade s philosophy is to identify the path to success  eliminate barriers and increase capacity to win by investing time in his team and refining their strengths  He explains how understanding systems  history  and people allows great managers to challenge their teams and create conditions to unlock growth   Here are a few key takeaways from the podcast  now available on iTunes  SoundCloud  Pocket Casts  and Stitcher   Objectives  Activities  Time  and Schedule  OATS    I force myself to think what s the one thing that I could be doing that would make everything easier or eliminated   Wade emphasizes managing your time in a thoughtful  organized way  He looks ahead at least a week in advance to define objectives for himself  his team and his company when planning his schedule  He lays out the activities needed to achieve these objectives and organizes his time around those activities  According to Wade  even  thinking time  is scheduled on his calendar  He s found that adhering to  OATS  forces him to engage only in the activities that eliminate barriers and push projects forward   Providing Feedback and Managing Conflict   People want feedback and if it s provided in the right way  it s a gift    When giving individual feedback  Wade focuses on providing information on three core topics  cognitive skills  personal skills and social competence  He argues it s important for people to understand the technical base of their role  but also to improve their self awareness and acknowledge the social impact they make on the group  Merely identifying a problem within a group is different than outlining a positive solution and being a catalyst for change  Managers need to help develop their team s social competence because it  moves individuals from simply a declarative knowledge to a procedural knowledge   When it comes to managing conflict  Wade meets with each person individually making sure he understands their point of view  He then gathers the group  helping individuals to understand the problem and enlists their help to determine a solution   Components of high functioning team   Your job is to win and then increase your capacity to win    High functioning team members hold themselves and each other personally accountable  They are constantly learning and becoming more efficient  ultimately expanding how they think and grow  An engaged manager should be promoting challenging projects that push boundaries and encourage curiosities that are aligned with the values of the organization     Wade s key takeaway for managers is to drive projects forward and eliminate barriers to optimize for success  By defining objectives and providing dynamic feedback  managers will create an environment for teams to grow and perform at high levels  Developing these skills and investing in the team are critical to a great manager s capacity to lead and win,"[318 255 1030 315 1146 17 77 390 391 1385 955]"
320,training-dataset/product/846.txt,product,From Focusing on Technology to Experiences470 Flares 470 Flares    Not that long ago new technologies were magical  and we were so happy when they just worked  But today we expect more  and assume  demand even  that digital experiences don t just work really well but are simple  intuitive and fun to use too  This means companies need to stop thinking purely about technology  and think about a holistic experience for their customers   Maria Giudice is the VP Experience Design at Autodesk  brought on board to be a design leader and a change agent to help take the 33 year old company from being technology centred to becoming experience centred  In this talk from Mind the Product San Francisco she shares some of her experiences from that journey   Becoming a Change Agent  The time for change is now  As a change agent you have to ask your team  your company  and your organisation if they re ready for change  Ready for the mess and the chaos that comes with change  And if you re not ready   you need to be  Your industry  your customers  and your relationship with them is changing rapidly and if you don t adapt you will fall behind   Change is a team sport  Do you have the right people on your team  Are they ready for change  Usually you find that the leadership and people closest to the customer are ready but everyone in between might fear it  To be a change agent you need to clear the pathway to drive change  and provide some quick wins so those teams see the value of change and embrace it   No time for politics  The other obstacle to change is office politics  It s important to be able to say what you think  be transparent and open about what s happening  One key to this is to walk the talk   not just talk about change but actively work on it and show how new processes and ways of working help   Treat every problem like a design problem  Whether you re changing a process  a team  or a product it all starts with listening  Maria traveled the world to meet and interview as many of the Autodesk staff as she could  She hung out with them  spent time in their teams  and really worked to understand their story and their motivations  This is a process we re all familiar with applying externally when designing products  but we often forget to apply internally when designing new processes   Define the key problems  There was a lot of data that came out of that process  and it underlined a few key problems that Autodesk shares with many larger companies   Imbalance of power on product teams  Fragmented access to customers  Organisational silos means customer experiences aren t cohesive  Focusing on quantity of features instead of quality of experience  Four Principles to Becoming Experience Centric  In order to move the company from technology centric to experience centric  Maria and her team defined four principles which became Autodesk s operating charter   Build Community  Great companies are built on great cultures so we can t ship great products without tearing down those internal boundaries and becoming a more holistic organisation  The very first thing to do was to define what design is and designers do  It s not a noun  It s not about artefacts  It s an active verb that s shared by the whole team   Designers must become leaders because the best ideas and solutions come from multi disciplinary teams  Because everyone is a designer  designers have to give up ownership of the word and share it with the team  More brains and more diversity of input produces more ideas and better solutions   By breaking down the silos between teams and bringing everyone together into one team you allow them to work on common ground  communicate better  collaborate and share equally   Focus on Customers  What percentage of your company interact with customers on a daily basis  Does design  engineering and product get to interact with them on a regular basis  Probably not enough  It starts with identifying and treating customers as people  not users  This starts with building a strong research practice that everyone takes part in  including programs to get closer to customers  making the research easily accessible to everyone in the team  and balancing qualitative and quantitative data   Connect Experiences  Autodesk  like many larger companies  has grown through acquisition and development  and has over 140 products in it s portfolio  So you can imagine that there s a lack of product cohesion among them  Are your customers getting consistent experiences  Or are you shipping your organisation s seams to them  This requires a new focus on platform thinking  and delivering services from that platform instead of piecemeal products  That includes developing a consistent brand and product point of view  journey mapping to design consistent end to end experiences  and reorganising to align different teams within those products into a company wide practice   Ship Quality  It is our responsibility to create experiences our customers love  Which means we have to change our mindset to focusing on lovable experiences   and not minimum viable products  Are you shipping something truly valuable to customers  Or just shipping cool features  Are those features easy to use  Or are you hiding behind complexity  Is it well crafted   This principle includes prioritising poor in product user experiences instead of sticking them in the backlog  building in time to craft and polish each release before shipping  dogfooding your own products and simply building less better   Watch this great talk for more detail behind these four principles  and how they can guide any large organisation to make changes and embrace a new experience centric focus  Listen to your teams  embrace your inner designer  and go create great experiences your customers will love,"[320 115 1061 408 1223 975 19 116 190 826 1030]"
333,training-dataset/business/792.txt,business,To perform at your best  focus on goals not tasksI am a big believer in setting goals   Throughout my career I ve learned that when I set myself goals and stick to them  my performance really improves  I ve also seen this in others that I ve worked with  time after time  I think there are two main reasons   Goals force me to focus  Modern life is full of distractions  which kill productivity and impact  and goals are my way of avoiding distraction  When I inevitably get dragged into email or Slack  or start working on things reactively as they come up  having my goals in front of me brings me back to a place of focus and ruthless priority  It empowers me to say no to the many random things that come up  This hugely increases my impact because it means I m working on the most important things  It forces competition   me against myself  I m a very competitive person  and without someone to compete against within my own job  and when my version of winning is played out over months and years  goals over a shorter timeframe allow me to compete against myself   The level of impact you can have with hitting your goals is obviously dependent on setting good goals  I have a process with our directors where we each set weekly goals  and we also have a process across the product org where each individual contributor sets weekly goals  A common mistake we all make is that we slip into writing tasks instead of goals  This is bad   So what s the difference  For me  there is one main thing  Goals are strategic and aspirational  whereas tasks are tactical and will likely happen anyway  Goals are progress oriented  not event oriented  Because of this  goals tend to have much higher impact over time for people  I have more tasks than I know what to do with  but addressing all these tasks would simply result in me being very busy  but having very low impact   Here are three examples of bad weekly goals  and alternatives   Goal  Present the new approval process at the All Hands   The All Hands is happening  and presenting at it might lead to little value to attendees  This is a task  A good goal gets at the longer term benefit of presenting  A better version might be   Ensure everyone in the team understands the new approval process by the end of the week   This is aspirational and extends beyond the task of presenting at the all hands   Goal  Work with Julie on next steps for new onboarding design   What does it look like to hit this goal  Have a meeting  goal hit  This goal isn t progress oriented  It doesn t push everyone involved to focus on progress  A much better version would be something like   Next steps for new onboarding design approved by both Design and PM Directors   The approval is aspirational  It s going to require focus to make that happen   Goal  Interview Paul for the open PM position   Running an interview is a task  It s in your calendar  Someone is showing up  It s going to happen  A better goal might be  Fill the PM position by end of the week or have a concrete plan for how we ll source more leads   Now we re aspirational  We re more long term  We ll need to get creative to come up with ways to hit the goal   Obsess about understanding the distinction between goals and tasks  Once you do  the critical thing to know is that goals won t get hit unless you set aside dedicated  focused time to work on them  Without dedicated time  you ll fill your day doing task after task  You won t make fast progress  You simply won t be a high impact individual at your company   This is why  despite having a large team to manage and more meeting requests than you can imagine  I block out every morning of every day   almost half my available time   to work on my goals  I win   and Intercom wins   if I set goals not tasks  and hit them week after week after week,"[333 458 1218 503 769 116 17 315 1030 128 1093]"
360,training-dataset/product/886.txt,product,How We Built a New Product in 9 WeeksWhat is it that the customer wants  What is the problem they face each day  What services are they hiring out for that we could meet with a bit of software   What if we could help people create better social media ads  What if that isn t quite the problem  but rather tracking and spending ad dollars wisely   What if   What if    What if    Sometimes a series of  what ifs  or  whys  can lead to new and exciting places   For three Buffer teammates  an exploration of  what ifs  created a whole new venture at least for a short while   In determining the best possible path for our social media photo creation tool  Pablo  they embarked upon a nine week journey that challenged and stretched them like never before and ultimately created a new nine week accelerator program at Buffer   A new direction for Pablo  Focusing on Facebook Ads   Roy  Phil and James were quite familiar with working together   all worked together on Pablo  a quick and easy way to share images on social   The team at Pablo  which had been functioning as a  startup within a startup  for some time  began to experiment with ways to grow faster in May and June of 2016  They were growing at about 4  week over week  but wanted to get to 25 50  growth instead   Try as they might  they couldn t seem to get usage numbers to change on Pablo as exponentially as they hoped  no matter the marketing or product tweaks  So they dug in a bit more   How could they set Pablo apart as a product  One pain point that came up again and again for customers was Facebook Ads   What if Pablo could help people create more effective Facebook Ads   From experimental sprints to a 9 week accelerator  The thought of tying Pablo into Facebook Ads was the spark that spawned a new direction   James  Pablo s designer and front end developer  did a mockup of what this product  then called Ad Rocket  might look like as a quick side project   their attention was still focused on growing Pablo   Then they took this to Joel and Leo    Let s do it   Leo said  suggesting they treat this idea as a sprint  based on the book Sprint  How to Solve Big Problems and Test New Ideas in Just Five Days    So the Pablo team got to work   The premise behind a sprint is to take five days to validate a solution to a problem   Days 1 3  Research and deep thinking  Day 4  Build the product or feature  Day 5  Show to customers for instant feedback  Their first week provided a ton of lessons and they moved into a second week of a sprint and then a third   Here is an early prototype   After a few weeks of these sprints  the Pablo team approached Joel and Leo again and shared that the idea definitely had some legs   as a product separate from Pablo   Joel and Leo gave the team the go ahead with the framework of a lean accelerator program   Nine weeks to work on the project  Goal to reach product market fit  At the end  they d evaluate whether Buffer would continue to fund it  The gate opened  the race was on   Inside the Buffercelerator and the  summer of Rocket   The team dove into more customer calls  product iterations and brainstorming sessions   They learned a few key things that sent the product in a new direction   Originally  the Rocket crew postulated that people needed help creating images and crafting ads themselves   Most people and agencies struggled not with the creative but with optimizing ads and knowing where to target their advertising dollars   People had reservations with third party apps handling their ad money   The iterations of Rocket then evolved in similar ways   The first version honed in on trust issues  featuring an extension in Facebook Ads Manager to help generate reports and analytics   Another idea was an auto optimizer  Press a button and instantly an optimized ad is posted  However  most people wanted a bit more control than this   Eventually  the key finding from the Rocket team was that many agencies  freelance consultants and in house ad mangers were struggling to analyze the data from ads  Some were hiring people to put data from Facebook Ads Manager into spreadsheets in order to draw conclusions on what was and wasn t working   Rocket began to form more clearly as a dashboard to view your ads  performance   The small team s roles all blended together as they jumped into customer calls  researched more about Facebook ads  and made product adjustments   Here s an update from the team from July    One moment we re good  then we re dead   There was a deeper sense of pressure with the nine week deadline and even a sense of isolation from the rest of the Buffer team  Days were longer  the responsibility for each person greater  There were fewer team members to fall back on if something was broken or needed to be done  It created a deep bond for the three teammates who were learning and growing on a much faster scale    It was the typical ride for a startup   said Roy of the rollercoaster of emotions throughout   One moment we re good  then  we re awesome  then  oh no  we re dead    James called this the  summer of Rocket  as the nine weeks required him to work more than he ever had   and he learned more than ever    There was so much motivation to make this work  with the nine week deadline also looming  it didn t seem to matter that we were working more   James said   Towards the end of the project  I realized my energy levels were really low and I had almost burnt out  I had to take a day or so off and then really set up a schedule where I was taking regular breaks    Rocket s first paying customer  As the end of the three months loomed  the team pushed for their minimum viable product to reach product market fit and sought one of the biggest milestones they had yet to reach  paying customers   They reached that goal on August 12  just before the end of the accelerator period  with Rocket s first paying customer   The team knew Rocket was definitely solving a problem  But would it be enough   The Buffercelerator deadline  Time to pitch   The goal of the  Buffercelerator  was to validate a project in nine weeks with paying customers  This is perhaps one of the best signals of whether the product has  made it  as an MVP   When the Rocket team pitched the product to Joel and Leo for further investment  they had at least one paying customer and knew there were people who liked the idea of Rocket   James said  though  that when they showed customers the product itself  they were less enthusiastic   So as the Rocket team pitched the product to Joel and Leo for further investment  they had no idea which direction their  investors  would go   Here s their full pitch deck     The Rocket experiment comes back to earth  After thinking things over  Joel and Leo decided not to move forward as an angel investor in Rocket but they did leave the possibility open for the team to keep going if they chose to  Rocket s future  if the team chose it  would look like this   Rocket receives  25k per founder  to last a 4 month period  Each team member receives 10  equity ownership of Rocket  You d present Rocket to us at the end of the year  early January   for true seed investment  By that point we d want to see very real traction and revenue growth  Here s the whole note Joel and Leo shared with the team laying out the options   A big decision to make  To keep going or return to Buffer  After nine weeks at a breakneck pace  Roy  James and Phil took some time to discuss whether to go forward with Rocket or return to the Buffer team   Roy remembers that Leo once told him you need to be prepared to crawl through the pit of hell for your startup to put in the work required to make it  And that feeling might last for years  so a passion for the product and mission is key   They considered   If the three of us met outside of working at Buffer  would we have formed this product   The answer was   Probably not    While they loved the experience of Rocket and all they d accomplished together  they weren t as passionate about the product as they perhaps needed to be to continue    There s definitely a market   James said   It s definitely a problem people face  Was it the right market for Buffer  That would make sense in the product line for Buffer  I don t know  It was such a narrow problem for such a small group of people that we would have had to charge a lot to make it profitable  Compared to Buffer s product line  we questioned whether it made sense to go that route    The three of them sent this reply to Joel and Leo s offer   The success in sunsetting Rocket  And with that  the Rocket crew shuttered the project they d spent more than nine weeks of total focus on   James  Roy and Phil have re joined the Buffer team  with Roy as a customer researcher  James a product designer and Phil an engineer   All three are quick to say that the program was a success in its own way  despite not continuing    For all three of us  we all have more confidence to do something new   Roy said   Once you ve walked through something like this once and had that experience  that muscle has been built    Phil shared that he had feared if the verdict from Joel and Leo was a  no   it would mean that they hadn t done things right  As the end came  however  he realized that the team had still reached the goals they set for themselves and even had paying customers   The timing might not have been right for Buffer to invest  but it was still a massive achievement   Would they do it again  The answer for all three is a resounding yes    In the busy ness of building a product  there are a thousand things swirling through our minds  so learning what to prioritize is key   Roy said   In an environment where everything is moving so quickly  you can spend your time doing lots of really good things  or you can find the most pressing need that you can fill to free up your teammates to do the things they re best at     This was overwhelmingly one of most satisfying experiences I ve ever had   James said   We stretched ourselves more than we ever expected and operated with a lot of autonomy in the process  It was exhilarating    Over to you   Would you have funded Rocket  What decision would you have made if you were Phil  Roy  or James  We d love to hear your stories or thoughts in the comments,"[360 981 499 973 17 1061 304 1030 497 1003 190]"
363,training-dataset/engineering/954.txt,engineering,Intercom s Darragh Curran on scaling engineeringContinuous shipping is Intercom s heartbeat  and in many ways we have Darragh Curran to thank for that  Darragh joined Intercom in early 2012 as a product engineer and our second outside hire  Fast forward to today  and he s our VP of Engineering  has grown our engineering team to more than 90 employees  and Intercom regularly ships code to production more than 100 times a day  Darragh joins me on the podcast to explain how he s scaled our engineering team and culture  Our chat covers the values that create his team s foundation  what he looks for in new hires  working across disciplines  and much more  If you like what you hear  check out more episodes of our podcast  You can subscribe on iTunes or grab the RSS feed  What follows is a lightly edited transcript of the interview  Short on time  Here are five key takeaways  In order to grow their team s capacity and output  engineering managers must work on the unglamorous yet frequent things that will unblock their team  One of Intercom s key engineering values is to do less better  In Darragh s words   A very well polished sliver trumps a big  fat  janky slice  of a project  When hiring  Darragh aims to identify engineers who demonstrate the potential for a steep trajectory over those who appear to have the skills needed today  It s then on the team to help new hires grow  Engineers  designers and PM s at Intercom work on teams together  allowing them to share context  have tight feedback loops and iterate towards the right solution  Engineers looking to join an early stage startup should evaluate three things  Are the people genuinely excited about the problem they re going to solve  How do they approach their work  And what do they value  Des Traynor  Today I m privileged to be joined by our Vice President of Engineering  Darragh  It s good to have you on the show  How many engineers did Intercom have when you started  and how many do we have today  Darragh Curran  There was four when I started  It s at eighty or ninety today  Des  That s quite a change  You recently wrote  when you were celebrating your fourth year with us  that you were pretty convinced on day one  after a pull request of all things  that you d joined the right company  What was that about  Darragh  Before I d started I got access to Intercom and was trying things out  I was playing with the product and something annoyed me  a little detail  There was bad spacing on the login form  and I wanted to fix it  At Amazon and previous companies the way in which we d make changes involved some deliberate peer review   sharing explicitly the change you wanted to make with your peers and getting feedback on that  Before I joined Intercom  while some of that might have happened informally  it wasn t a deliberate process  This tiny little detail that annoyed me was an opportunity to propose introducing that workflow to the teams  specifically to Ciaran  Ben and David  The idea behind deliberate code review is that it s a really great opportunity for us as engineers to improve upon our work  to learn from the experience of others  and to help educate people on the changes we re making  It represents an environment that appreciates respectful and critical feedback on the work we do  For engineers this is like the core tool channel that happens in   Darragh s first pull request at Intercom The confirmation I got on joining being the right thing was almost a meta version of that  the fact that I could make a change that introduced this new workflow and it was well received  confirmed to me that there was a healthy  progressive mindset in the people I was joining  Des  I remember thinking  we worked so hard to recruit you  and your first significant contribution was to remove some white space  Thinking back to those times  you were our first experienced engineering hire  and there s not a lot of management of engineering to be happening when it s basically yourself and our CTO  Ciaran  You were working on a lot of features  What stands out from that period  Darragh  The thing I m most proud of is the work I did on an internal tool we have called Muster  It s basically a tool that manages our infrastructure and how we deploy  We were quite a small team  four engineers  but we were working at an incredibly fast pace  making dozens and dozens of changes a day  The simple  small step of pushing those changes to Heroku  which is what we used at the time  was becoming tedious and troublesome  We would not realize we were pushing other people s changes  and it was a distraction to have to change and wait and type the command to deploy  It basically took us away from our flow  and our service was getting big enough that Heroku was not really fulfilling our needs  Every time we deployed  it caused little outages  because of the way it handled queuing up requests during that period  We could all anticipate that our needs to move fast as the team scaled would just increase and increase  so we invested in a tool that would enable us to continually deploy  Along with the deliberate peer review  once a peer agreed that this change was good to go  and along with automated testing  we now had automated deployment  We could focus more on building the product than on the tedious work of safely deploying it  Des  My understanding of Muster  from a distance  is it s basically the core of why we can ship so often  How often do we roll out these days  Darragh  It s typically well over 100 times a day  Changes from all engineers and all teams   Intercom releases per day Des  Does Muster still work  Darragh  Muster still works  It s hit some challenges along the way  but the basic principle of it is quite simple  When a new change appears  prepare it in a way that s repeatedly deployable and safely manage that deployment  Along with it comes the ability to safely roll back and to scale up or down different parts of the infrastructure  Career after code Des  When I called by your desk earlier  I certainly didn t see much code on the screen  That s no surprise with 90 engineers here  How have you dealt with the gradual moving away from writing code to doing things that are incredibly valuable but very different  Darragh  If I m honest  there was never one sudden transition  It wasn t a point in time  In the early days there wasn t really much management overhead within the team  We all loved engineering  we loved building product  so that s what we focused on  As the team grew  there was a greater need for leadership and management  You re taking on the unglamorous but frequent things that unblock your team  Progressively over a period of time the work that I did was very much steered towards leading and growing the team and not on contributing as an individual  What that looks like in the middle is that you re working a lot around the periphery  you re never taking on the big critical part  Instead you re taking the often unglamorous or small but frequent things that will unblock your team  You re investing your time in enabling your team to be effective  enabling them to grow  and therefore grow the capacity of the team and the output it can achieve   rather than what is perhaps at the time more comfortable or easier  to contribute that capacity yourself  Des  That s the biggest mistake engineer turned managers make  they try to engineer their way out of every management problem  Did you have to train yourself not to do that and not be like   Just give me the keyboard  and let me do this    Darragh  That default is very hard to avoid  The worst version of that is if you see someone struggling  to just go and do it  There are some intermediate steps where you re not fully detached but you re getting to the outcome you want and using the journey to it as an opportunity to teach someone  It might be tedious at the time  because you feel like it could be quicker if you do it yourself  but the idea would be that you do this two or three times and it starts to pay off  Des  A near joke question  but given how distant you are from code  when did you last see a piece of code  Do you have any clue how Intercom works  Darragh  I still have a very good grasp of how Intercom works  and I m exposed to a lot of the work  For various different reasons I ll still end up looking at code  perhaps interesting pull requests or interesting postmortems on problems  so that I can properly appreciate the challenges and know how we solve them  In terms of writing features  it s actually been years  The period in between was where  again  I was doing a lot of this unglamorous work around the periphery  Two things I remember in that recent period are trying to close out on an important re factoring to remove some technical debt  which I may or may not have been responsible for but I was quite familiar with  I also recall an incident that happened with our system where there was an all hands on deck response  I was randomly able to contribute a fix  or a failing test or something  that helped us overcome that  At the time I was like  cool  I m not too rusty  I don t know how I d fare today to be honest  Engineering core values Des  You talk a lot about our engineering principles  which are printed all over our walls  There s people  there s process  but the commonality you push for is the principles that they work through  What are your main engineering principles  Darragh  The first one we talk about is to be deliberate  What this really means is to be very thoughtful about how you spend your time and how you make decisions  If you re not actively doing that the reality is that you re inadvertently  passively wasting time or making inefficient decisions  A really important one for me is the idea to think big  and also horizontally  Particularly as we ve grown  the organization is structured into groups and teams and people are very focused on one part  That s where they re going to put most of their energy  but we constantly want to remind people to not constrain themselves to that explicit area of focus  We all have the ability to contribute and improve and have impact beyond the team we re on  Thinking about it in that way helps us spot opportunities where perhaps our team structure isn t best supporting the outcomes we want and we have an opportunity to change that  Perhaps a bit of product work or engineering work might be right for the team but wrong for Intercom  and you ve got to think holistically to figure that out  If people aren t thinking like that then you rely on process and management to correct all those things  The one represented in the Muster example we talked about earlier is the idea to move fast but optimize for the long term  Again  this is one of these things that if you re not deliberate about it  you lose  Your ability to move fast as a team  just by pure physics almost  tends to decrease as the organization grows  It s the kind of thing  when you lose it  it s almost impossible to regain  The team has grown  the code has grown  the systems are bigger  The process might be a bit more heavyweight  You can just bow down to that and let that knock you over  or you can try to deliberately defend that ability   Engineering team values on display in the Intercom office in Dublin  To us  that s represented in our ability to ship code and our ability to make decisions  It manifests in a bias towards simplifying things and fighting against complexity  The principle that code is almost a liability  the less we have the better  and the important thing being that you can make the trade off between being fast now and not caring about the future or being fast now because in the past you ve cared about the future  That s where we place ourselves  The next thing I care about is the idea of doing less  better  A very well polished sliver trumps a big  fat  janky slice of a thing  While we do think big and have these grand visions for what a thing should be  we always start small on the most confirmed valuable piece  It gives us opportunities to learn  build momentum and then ultimately we move faster towards the bigger goal  A very well polished sliver trumps a big  fat  janky slice  To remind people where we came from  there s the idea of building great product  While we are software engineers  the outcome success for us is producing great product  Des  I can image different sides or different types of engineers  some are going to be primarily back end  some are going to be primarily front end  Is it important they all care about product  As in  if you re working on EC2 deployment  versus a user facing feature that everyone sees  like our messaging form  does the principle apply  Darragh  It absolutely does  There s two parts to that  First  the engineers that join Intercom tend to travel around quite a lot within the team  They re not confined to one problem  Aside from that  even the most back end oriented folks still have to make tradeoffs and decisions in how they design their systems  The classic tradeoff might be designing a system that needs to respond in milliseconds versus one that responds in minutes  You ll build them in totally different ways  They might cost or take more money or time  but both of them are valid answers depending on what the customer need is  A lot of good behaviors stem from empathy for the customer  Understanding how people use the thing  Not only that  it s that curiosity and understanding fuels us as people  The thing I did had an outcome and made something better  so for a whole number of reasons the more we keep that connection the better  Hiring for potential Des  One thing you talk about a lot is this idea of hiring for the potential of people as opposed to hiring for perfect job fit  It seems like there s two ways you can go if you re hiring a certain role  You can hire somebody who can grow into it  or you can hire somebody who s definitely going to be effective on day one  How do you think about that  Darragh  One of our explicit principles is to hire for potential and help each other to grow  We think about that very deliberately on the side of trying to identify people who demonstrate the potential for that steep trajectory over the people who appear to have the skills you need today  Obviously the intersection of those two is great  but if you have the latter without some elements of the former and that person turns out not to be good at adapting or learning or growing you ve got a problem ahead of you  Des  The risk is the company will outpace them at some point  or just because they re good for 200 engineers they might not be good at 600 engineers  Darragh  Or they ll come under a lot of pressure  they ll fall behind or people around them will out deliver them  When new problems emerge you re not going to have anyone who s done it before so you want someone you can trust can adapt  The growth mindset Des  Some of that to me sounds a lot like this idea of the growth mindset  which I know is something you re pretty familiar with and considerate of  Talk us through the growth mindset and why it matters to you  Darragh  I first came across the actual term  growth mindset  a few years ago  I believe it was coined by Carol Dweck in a book called Mindset  People either have a fixed mindset where they believe that their ability or intelligence is somewhat static  or people have a growth mindset  where they believe intelligence or ability can be developed   Infographic by Nigel Holmes for Stanford Magazine All the people you likely want to hire probably demonstrate elements of the growth mindset  which is someone who will embrace challenges  who will persist in the face of roadblocks  who sees effort as the path to mastery  who craves and learns from critical feedback and who finds lessons or inspiration in each success  That s how that mindset is outlined  and as result of all those things people reach higher levels of achievement and with that comes a greater sense of free will  Des  An interesting thing to me is a lot of our engineers don t fall into the older fallacy of basically boxing themselves in and believing that they re only here to engineer  I always like to see engineers push back on design or push back on product decisions  That comes from wanting to grow outside of their role and understand the full context of what they re doing  Is that something you ve deliberately worked on  How is the relationship between product people  designers and engineers different at Intercom  Darragh  We re all product people  Our motivations are to create great product  and we re proud when we do that  I ll probably be a little bit proud when I create some beautiful code  but it s really the thing it enables that gives me the fulfillment  I think that s true for all disciplines  It s not the fancy Photoshop file  it s the thing that s working that s making people s lives better in some way  Not all people think like that  and not all companies structure themselves like that  A lot of engineers are more orientated around the technology  often as a side effect of the way things are structured  They obsess around the technology  They invest in and speculate about how the technology will evolve  and that s where all their opinions are directed  What do we do differently  In my career before Intercom  the thing that was different was that we were still ultimately trying to build a product and all these different disciplines were separated  They were siloed  You might not even know the person that designed the thing that you re building or who the product manager is and what they actually do  Des  How does that feel as an engineer  Does a work order arrive in your email and you re just like  well  better go and do this  Darragh  Some people  perhaps those more in that fixed mindset  will just see that as  okay  I ll follow orders  For me  I always constantly found myself in that situation where I want to understand why  It s all about context really  Being in situations where you re like   I think I know what the context is  and if I m right then I think there s a better approach here   If you haven t been a part of the conversations that would enable that  there s probably a way to retro fit that conversation  but it s a tremendous amount of friction and a slow process  A combining trend has been how we ship software  Twenty years ago  companies released software on very long cycles  yearly or whatever  and the software processes that existed adapted around that  We could talk at length about waterfall  The premise around all of those to me is some either na ve or accepted ignorance around the idea that we actually know what the right answer is  We re going to release this thing in a year  we know what we re doing  so we can serialize everything  Let s figure out what problem we re solving  let s design the thing  and pass that to the engineers  We re more often wrong than right  The important thing is iterating towards right  It sounds perfect  and it probably is if you re building a bridge or a car or something  but software lends itself to the ability to be wrong and change  It s such a new medium that we re more often wrong than right  The important thing is your ability to iterate towards right  How you structure your teams can either help or hinder this  Engineers  designers and PM s being together means that they re closer  they can all share the same context and they can communicate freely and  along with delivering software regularly  have tight feedback loops and iterate towards the right solution  rather than guessing  Des  I presume in the other orgs  they re not doing it just to be stubborn  What s the drawback of doing it your way  as in  forming software teams with designers  engineers and PM s  Darragh  The classic trade off for me  which manifests less for engineers than  say  designers  is that in the structure I described there  we might have one designer on the team  That person is now in their discipline quite isolated  Their manager is probably less connected to the work they re doing  but also they ve less opportunity to benefit from the input of peers who might have the right context  There are definitely ways that we try to mitigate that  Lessons learned scaling the growing team Des  Thinking about the scale of Intercom over the last four years  I presume you ve learnt a few things about hiring and team management  performance  morale  etc  As we ve gone from a couple of engineers to more than 90  what are the key repurposable things if you were to do it again  What areas do you need to focus on  and what lessons have you learned the hardest  Darragh  I joked to myself at one point that I hadn t transitioned from an engineer to a manager  I d transitioned from an engineer to a recruiter  There s been a couple of distinct hiring phases  You have the early days  where the company is small and it s a huge risk to join  Although you might be excited the reality is that most startups actually diein those early stages  Your pool of people that you can reach  because no one s heard of you  and that will take the risk  is small  It tends to be people that can offset some of that risk because they know you and they know that what you re doing is legit  and they might have the context  So you hire from people you know  That can get you quite far  Then you get to this point where you ve tapped that out to some degree  and you still don t have a brand to rely on  You don t have much inbound interest  so you go into this phase where you re basically knocking on doors  You re trying to sell the thing you re doing  you re trying to find people who have that particular fit for the risk and opportunity  That s the phase I identified as that recruiter phase  There s a parallel in the product  In the early days it s friends and old colleagues using the product  Then you re knocking on doors  The third phase is where the company brand establishes and we ve got local awareness  People start coming to you  The thing that you learn  in parallel with the product and marketing side  is that you ve got this inbound demand  The analogy might be  wouldn t it be great if they were all customers that pay you a million bucks a year  Wouldn t it be great if they were all experienced senior folks rather than interns or whatever it might be  We did quite well in that phase of attracting talented folks  The phase we re in now is were I feel almost we re coming back to the deliberate recruiting  knocking on doors phase  where we know a lot more about the specific folks we need,"[363 296 315 1385 76 17 1146 116 973 1061 190]"
375,training-dataset/business/965.txt,business,My First 30 Days as a Manager  The 3 Biggest Questions I ve Asked Myself So FarIt feels ridiculous for me to write about being an engineering manager  It s a job I ve done for not even 30 days yet   But that s what I want to know from others   how did you start  How did you make it through your first month   No two first rodeos are ever alike  But they re all rodeos  and falling off is falling off  There s some kind of pattern   So here I am  writing the post that I want to read   What is this job  anyway   I had a rough idea what I was getting into from the internal job description  but there s a chasm between  Help build deep fulfillment and ensure the personal growth of team members  and well  doing that   So I went on something of a crusade to understand what exactly I should do  I asked engineers at Buffer  What do you think makes a great EM  Where do you think I fall short  I am so grateful for the honest answers of my peers   it allowed me to develop a clear sense of how I need to grow   I stalked people on Twitter and LinkedIn  cold emailed them  and asked them how they survived the switch    What was your rookie error   became my pickup line   I m continually astonished at how helpful the world generally is  I ve met up with incredible people who I d thought wouldn t give me the time of day  I ve found this awesome Slack community where I can see  in real time  a smorgasbord of management scenarios unfolding and people of experience  the very kind of people I want to become  give their advice  There is such treasure  if you care to dig   From my own experience  I certainly remember times when I knew what I wanted from a manager  but didn t feel I could speak up and ask for it  So I ve decided to ask a very simple question    What is something that I can do for you over the next week to make your work life better    Key takeaway  This is a solved problem   the help is there  I just had to ask   What happens to my old work   This is tough  When an engineer switches to management  the team loses an engineer  That puts a damper on team velocity and morale  but doing two jobs at once is infeasible  Having a handover and transition plan was my first task   It s a real challenge to figure out who can take over the work you do in a team that s already lean  And let s face it  there s never an  extra engineer  twiddling her thumbs   I got really lucky here  half my team  non engineers  took a vacation as I made the switch  so there was a natural lull while I Googled  how to be an engineering manager    Then I got another break  a product team happened to be disbanding  and there was someone ready and excited to take over  I dodged a very difficult quarter   Key takeaway  Think about your old responsibilities   don t just walk out  If there s really no one to step up  then schedules will slip  Realize this  and make sure others realize it too   How do I manage someone better than I ll ever be   This was the scariest thing I had to do  Before jumping into a first meeting with an engineer whom I admire greatly  I was decidedly fretful  and definitely anxious throughout   What did he think of me  Was this a huge waste of time  I shudder at the opportunity cost   After that first video call  it hit me that although I thought he was awesome  I d given zero recognition  Realizing why I held back calling out good work was a key moment for me   I didn t feel qualified to praise this engineer   I felt that my opinion didn t matter  that he d think I was an idiot for praising something he d done that was no big deal  It would be like praising Dan Abramov for writing a todo app in React   Once I understood and named that fear  and it went away   If I was better at coding than the engineers I managed  then I d be writing that code  But I m not  That s exactly why I m managing   I m better at encouraging and unblocking  I think that s when the idea of  servant leader  started to click   I am there to sort out all the stuff that stops engineers from focusing  Make the processes smooth  Make sure they find their work interesting and challenging  Make sure they are having the biggest impact that they can  Understand who they are and what drives them  and line that up with what the team needs  Tell them when I think they did something great  Ask them why they did something that falls short of our quality bar   maybe there was a good reason  Maybe I can help   Key takeaway  I don t have to be able to do their jobs better than them  They re the experts  and they should be   Over to you   I still don t know what my biggest rookie error is  I guess that ll be a subject for another post   If you re a manager of people  what were your biggest lessons early on  And if you can share the best traits of managers you ve had  I d love to hear them  Grateful for all your thoughts and feedback in the comments,"[375 1146 315 17 973 390 363 517 391 296 1030]"
389,training-dataset/product/156.txt,product,What energizes a product manager I had a call with a customer recently  who wanted to share their thoughts with our product team on what they d like to see improved   Our product managers jump on calls like this all the time   to make sure we re understanding the most common customer problems  and learn what we can do to make our product better   So I was surprised when I came out of that call absolutely buzzing  I immediately grabbed another product manager  Benjamin    You know that project we were working on recently  I took the foot off the gas on that  but I m convinced again we need to do it  as soon as we can  Can we talk about where it fits in your team s priorities    Then I grabbed a designer on our team  who had sketched up some designs that had never been shipped    Let me show you how this customer has hacked our product to create their own solution to their problem  I m convinced your design is a solid one  And we need to get it out into the world    I went back to the roadmap we were working on  I confidently descoped a project I had been having nagging doubts about  and added a project that was going to solve this customer s problem   Walking home from work that day  I thought a bit more about that call  Why did it give me that immediate energy  And what should energise a PM   Get frequent customer contact to tap energy supplies  As a product manager  you want to build product that impacts people s lives  in some modest way  So it makes sense that our customers energise us   It s surprising how easy it is for shipping to become anti climatic   But to truly tap this energy reserve  you need direct customer contact  ideally in person  Second hand synthesis of research is incredibly useful  but never as impactful  A graph on a PDF is no substitute for firsthand empathy  They certainly can validate your convictions  but they rarely supply them   This is why I was so energized by that call   despite being just a single data point  it gave me a newfound confidence on a topic I had been wavering on  As product managers  with so many options of what to build next  it feels great to finally have real conviction of what matters most   Direct customer contact is also what usually sparks insight  Watching usability tests can be as useful for the space it affords your brain to ruminate about possibilities as it is to expose user pain points   This is easier said than done  There are so many meaningful distractions that come up for a PM on a day to basis  talking with customers can easily be pushed down the list of priorities  So prioritize your time effectively  and make sure you re getting frequent jolts of direct customer contact   Take energy from the middle  not just the beginning and end  If you re a PM who gets energised only at the start  insight  and end  validation  of projects  you re in trouble  because most of your time will be spent in the middle   It s also natural to get energised during the design phase   it s creative  yet rational  and it feels great when you think you ve arrived at an elegant solution with the team  But it s important to take energy from the less obvious moments too   Scoping can give you energy  Scoping is painful  Every product manager wants to see their full solution built  but you know you can t justify it  We had a product review session recently  where we debated whether a component could just be in email or also needed to be in our Messenger  We really wanted it to be in our Messenger  but found it hard to justify that it was necessary   During the review one of our engineers said   We could just make it a link  instead of building the full card  A link would take a day  whereas the card takes two weeks   Conversation over  This almost immediately unblocked our beta  It was a prime example of embracing constraints to make progress  Like most good ideas  it was so obvious in retrospect  but we were blind to it until then   To everyone outside the team  it s a run of the mill boring anecdote  But for us  a previously agonising choice turned into a source of energy that drove us forward  Savor these little moments  The process of building should be fun  and you have to ensure you re tapping those jolts of energy when they sprout up   Ship to learn  ship to energise  When you have clear metrics to aim for with your product  there s an obvious point of celebration  which is energising  or at least clarity of failure  which is motivating   But sometimes your product s success metrics take time to register  or they re not actually a primary indicator of success   In the absence of those metrics  it s surprising how easy it is for shipping to become anti climatic  Don t let that happen  With every release  you should be learning  Regardless of whether the release was a success or not  you should be energized by having new found confidence in what to do next  even if it is to throw out what you just built   These are just a few of the sources where I get my energy from  Where do you replenish yours   Credit to Paul Adam s piece on the topic  which was the inspiration for this post,"[389 116 1218 1061 190 1220 826 1093 296 17 1385]"
390,training-dataset/business/333.txt,business,The Principles of Quantum Team ManagementThis article is by James Everingham  Head of Engineering at Instagram   I didn t intend to go into computer science  and I definitely didn t expect to become a manager  Instead  I started out thinking I d be a laboratory scientist  In college  this led me to astronomy and physics  which prompted me to start writing software  And while these leaps felt intuitive  the subsequent shift into leading teams did not  In fact  I disliked my early engineering management job at Oracle so much that I took a less senior role at Netscape  just to start coding again   But life is unpredictable  I discovered challenges at Netscape that were so important and interesting that I couldn t just stand by   I had to take the lead  which meant managing a team  and figure out how to do it in a way that made sense to me  That s when it struck me that instead of approaching management like being a therapist  only with more process and politics to deal with   I could think of it from a problem solving perspective   I started to design a management system the way I would design a machine or software system  with few dependencies  single owners  minimal decision points  Using this model  we immediately saw a jump in productivity  output  and happiness  Our ultimate email and news product  code named Grendel  was the only piece of Netscape s massive Java rewrite that survived  and it remained a part of Mozilla s software for a decade   Setting up your team the way you would set up a machine can give you a ton of leverage   as long as you realize how complicated and unpredictable the people in that machine can be  This is where quantum mechanics  and my term  quantum leadership   comes into play  As a discipline  it makes the unpredictable understandable  Similarly  by applying these quantum principles to management  you can find solutions to your team s seemingly unsolvable problems   Managing for Unimaginable Outcomes  There s a fundamental principle of quantum physics called  superposition  that asserts  if the state of an object is unknown and unchecked  the object exists in all possible states simultaneously  The Nobel prize winning physicist Erwin Schr dinger proposed a theoretical experiment in which a cat  a vial of hydrocyanic acid  and a small amount of a radioactive substance are placed together inside of a box  If a single atom of the substance decays during the test period  it causes the hammer to break the vial and kill the cat  As long as the box remains unopened  however  the experimenter won t know whether or not the sequence has been triggered  Thus  according to the principle of superposition  the cat exists as both dead and alive simultaneously until a measurement is taken   that is  until someone looks in the box   Now  as someone who found it difficult to flip the cognitive switch from science to management  I understand that trying to map the implications of Schr dinger s theoretical experiment to the everyday challenges of running an engineering team might feel slippery at best  but bear with me   If observation does in fact affect outcome  and engineers and their completed projects can exhibit the property of superposition  then the dependent variable in my amateur managerial experiment is the state of success or failure of those projects  and the independent variable is the presence or absence of my  or the manager s  observation   Every team s project is a cat  and every manager has to constantly decide whether to look in the box at the risk of killing it   The observer effect is real in the workplace  and you can affect the outcome of any project as a manager simply by inserting yourself  Often  a manager will take their team into a room and say   Here s what we need to do   or  Here s what I ve been thinking   or  Here s one way we can think about this   as they start sketching on a whiteboard  They re trying to add value  We always want to add value  But if you re in any position of authority and you do this  you ve just limited the number of outcomes and your path to success pretty dramatically   Instead  if you simply outline the problem and what success looks like   let s say it s increasing revenue by 100    all paths to success are still possible  including those you haven t thought of yourself  It s very likely that someone on your team will think of a better solution  but as soon as you say what you think  everyone gets a whole lot less creative   I used to make this mistake a lot when I was a junior manager  I would give my team ideas to get them started  and as soon as I thought they were headed toward failure or a dead end  I d stop them and say something to turn them around  It seemed like it was in everyone s best interests to avoid the wrong solution  but a mentor of mine told me that my team would never get better if I didn t let them learn from failure   When I finally loosened my grip and let things go  I realized that my ideas were actually only right half of the time  The other half  my team s ideas were far better than mine  I d been an idiot for 10 years of my career  I realized   Being a good manager is not about avoiding failure   it s about enabling as many different paths forward as possible for as long as possible   Getting Started  Okay  so how do you actually do this  You should ask questions  Socrates style  designed to influence your people the least and keep options open  For example   What are some other ways we might be able to increase revenue   Where are you running into roadblocks or friction   Is there another route to where we want to go   Let s say your goal is to increase revenue  and you re running into a roadblock where you can t get above a 2  clickthrough rate on an ad  for instance  You might ask  How much do we make per click  Why  The answer is probably   That s just how it is   So then you could ask  What would it take for someone to pay more  Maybe the answer is more expensive inventory  Okay  then how do we make that happen   If no one has any immediate ideas and all you re hearing is crickets  you have the option to open the box very slowly and carefully  You can drop a breadcrumb to lead the team to a next conclusion they can use as a jumping off point   a hint that doesn t give away what you think they should do  But the more breadcrumbs you drop  the narrower their thinking will become  so you have to be careful and thoughtful about what you reveal   Having too many ideas in a room is an entirely different   and much better   problem  Still  it can stymie some teams  When this happens  ask questions about probability and make a matrix  one of the few times it s acceptable for you to whiteboard as a manager   What is the likelihood of success for each of the ideas proposed  Let your team discuss and stack rank proposals based on their probability of working  Groupthink will work to your advantage  Aggregate solutions are usually pretty good in these cases   No matter what  whether there are too many ideas or too few  never supply your own opinion  judgment or ideas prematurely as a manager   Jim Everingham at Instagram   The 5 Principles of Quantum Team Management  To be successful quantum managers  we need to have vigilant awareness about our motivations for altering outcomes  Common motivations include  thinking your idea is the best  not trusting your people  or thinking you re not doing your job unless you re weighing in all the time  You actually want to follow a different set of instincts  Allow yourself to be motivated by  observable metrics going one direction or the other  your team being visibly frustrated with the rate of progress  or a deserved lack of trust   If we sense a project going sideways  it might be worth looking in the box and consciously changing the outcome  On the other hand  if the state of a project is entirely unknown or we sense that it s going well  it s better to allow for an unpredictable outcome  We do this by following these five principles   1  Manage to multiple  states  as opposed to singular outcomes   The wisdom of traditional mechanical management teaches us to guide our team toward a single outcome  but such a tactic assumes that managers understand projects better than the team members working on them  An effective quantum manager will do everything in their power to organize teams strategically and then step back  By avoiding prescribed paths  agreeing to outcomes  and providing each team with equal parts space and guidance  quantum managers set up their team for infinite success   Focus on increasing the number of  states of success  if you can  Your cat doesn t have to be either dead or alive  Your cat could be happy  not doing that well  or doing pretty poorly but still alive  These are all other outcomes  The more states of success you can define  the more paths forward your team will see  Don t base success on one variable like revenue  Maybe one state is becoming profitable  Another might be getting a million people to use your product  It could be getting 100 000 people to use your product for one hour a day  Point out as many metrics of success as you can to give your team more milestones and momentum   2  Be hyper aware of the observer effect   As we ve already determined  observing a team will inherently change its state   a reality that can work for or against us  The art of quantum management lies in discovering methods for gathering information about the unobservable and preparing for all forms of success and failure while keeping the box closed  An effective quantum manager will resist super  imposing  and instead ensure superposition   By asking probing questions that challenge and change the way engineers think about a problem  we offer struggling teams a way to solve a seemingly unsolvable problem without potentially destroying the existing work that was already succeeding   3  Know when to open the box   Eventually all quantum managers will find themselves in a situation that leaves them no other choice but to open the box  Unfortunately  any predictions we make about the state of our cat will be wrong   unless we predict that it exists in a combination of any and every state simultaneously  In the case of a milestone plan  a team might be working so hard that they feel both exhilarated and exhausted at the same time  Hopefully  most well oiled machines will achieve some degree of success  even in the worst case scenario  If not  and the cat dies  any previous need to keep the box closed disappears  and managers must immediately understand as much as they can about what happened   So  what s the tactic  Use the time you might have spent generating your own ideas for how to solve problems   or generally stressing your team out with micromanagement   to devise non judgmental  thought provoking questions  It takes time to construct these  A lot of managers freestyle it and jump right in but end up saying too much or falling back on their own opinions  Asking questions designed to empower and not instruct requires a lot of forethought  Consider putting 10 minutes on your calendar before any meeting to think through which questions will be helpful and won t interfere with your team s ability to win   4  Understand and create strategic entanglements   The theory of quantum entanglement   what Einstein referred to as  spooky action at a distance   finds that basic particles can be linked together in such a way that when something happens to one  it also happens to the other  Since most of us don t have a particle collider  we can instead use quantum management to entangle and motivate positive traits on our teams  a strategy that accelerates progress  increases quality  and boosts morale  In short  if you put something positive in motion  generally more positive things will happen  Here are a few types of Quantum Management entanglements   Accountability   Encourage an accountability entanglement by holding yourself to the same standards to which you hold your team  they ll mirror your behavior  It s human nature to mimic  People look for inspirational leaders  If you re rigorously accountable  your team becomes more accountable  Whatever you say you re going to do  just do it  You want to set up systems where you re creating behaviors tied to something in a spooky way  You see things organically unfold because you ve changed your behavior  Also  you have to set up your machine so that someone CAN be accountable  I can t make someone guarantee delivery on something if it s dependent on someone else  Encourage people to be very clear about what they have to do and what they re going to do by being that way yourself first   Empathy  Direct teams toward projects that will improve their day to day operations  The more your team interacts with their product  the more invested they ll be in the outcome  This tends to be easier if you re building consumer software  like at Instagram  I use Instagram  as does everyone on the team  so we feel the same pain as our users  But what if you re building some sort of enterprise system for long distance truckers and you don t even drive  Look for even minor or tangential ways to empathize with your users  As an example  when I worked at LiveOps  we were building call center infrastructure  We looked to our own customer service department to get their feedback and pipe it back into our product development loop  Entangle yourself with your customers to understand what they re experiencing on a deeper level  why it needs to be better  and how you can improve it   Good software is an act of empathy   Incentive  Drive better results by linking your team s rewards to the success of the project  not just how they individually perform  Remember that rewards don t have to be monetary   global impact  visibility within the organization  career growth  or increased passion for the project can all incentivize engineers to perform better  A lot of managers forget how important their approval is  The bulk of your team is there and working as hard as they can to please you   That s just the way it is  so you have to let people know when you re pleased  when you re excited  when you re impressed  If you don t  and if your team doesn t get this type of reinforcement  you re literally limiting their potential   Togetherness  Reduce stress  boost creativity and increase productivity by giving engineers the time and space to build camaraderie  Happier  compatible teams create long lasting positive outcomes  I take my teams out to dinner and encourage them to go out together without me  I seat my teams together because proximity builds relationships  The more you know someone  the more you trust them  The more you trust the people you work with  the better the product you re going to build  Quantum managers encourage people to get to know each other on a personal level  They start meetings with people sharing about their lives  not just their work  They seed conversations about topics that are much more expansive than the task at hand so people truly get to know each other   5  Embrace the challenge of self observation   As managers  it s difficult to recognize if we re using our quantum leadership techniques effectively because   like Schr dinger s cat   we exist in a state of success and failure simultaneously  Seeking constant feedback from those outside our quantum management box   like from our peers managing other segments of the business   allows us to stretch and grow without limiting our own outcomes   Quantum Management Applied  In 2016  companies competing in any form of innovation can no longer pay employees for mindless  repetitive work  Employees have to create  to challenge  to think nimbly  to respond quickly  and to keep up in a rapidly changing environment  Yet  despite this transformation in the workforce  few organizations have invested in the development of corresponding management approaches  or have considered how traditional corporate infrastructure can negatively influence team dynamics   Conventional wisdom tells us that it s the responsibility of bosses and managers to keep their team on course  But visible hierarchy tends to limit creativity  If no one knows each other s titles or levels of seniority  ideas speak for themselves   As soon as a chain of authority is introduced  ideas no longer stand on their own merit   I ve witnessed dozens of extremely intelligent leaders make the same mistake because some part of them believed the myth that managers know best  This mistake   and the meeting in which it s made   looks nearly identical across organizations  regardless of the problem being solved or the people trying to solve it  Almost always  this mistake is made during a crisis when the manager meets with his team to address it  Perhaps revenue has dropped significantly in a short period of time  The manager reiterates the dire need to drive it back up  then waits for his engineering team to respond  There is a moment of silence  The team is thinking   Now  I can t say with certainty why what happens next happens next  Maybe the manager is absolutely terrified that no one has a viable solution  or maybe she genuinely wants feedback on her idea  but either way  the mistake inevitably follows  The manager steps up to the whiteboard and sketches out a solution to their engagement problem  and  just by virtue of her seniority and the power behind her suggestion  she effectively closes off the possibility of her team producing a superior solution  In essence  she  or he  of course  unwittingly kills the cat   As a manager  I know this mistake intimately  I  too  have killed the cat many times  As a quantum manager  however  I also know the incredible rewards we reap when we resist the urge to prescribe a path  when we refuse to look in the box   even when we fear it s on fire and think we re the only one holding an extinguisher  I ve found myself at this crossroads many times  most notably at my last startup  Luminate  Engagement had suddenly fallen off a cliff  At the time  I had plenty of reasons to think the box was on fire and enough experience working on engineering teams to believe that I could teach my team how to build an extinguisher   As the founder of the company  I didn t want us to fail  As a human being  I wanted affirmation that my idea was a good one  As a quantum manager  I bit my tongue  Ultimately  I didn t engage in the brainstorming process because I knew my team would latch onto anything I offered  Instead  I just told them what winning would look like  a 300  increase in user engagement seemed like a lofty goal  but I pitched it anyways  A few days later  my team returned with a solution that I could never have imagined  and the results were stunning   Though their strategy was remarkable from an engineer s perspective  what I learned from the exchange as a manager turned out to be even more valuable  By not offering my own idea  I enabled the creation of a better one  By not suggesting a destination  we all ended up somewhere extraordinary   a place I didn t even know we were going   No cats were harmed in the making of this article,"[390 1146 17 1061 315 1385 1030 1244 826 1003 77]"
391,training-dataset/business/589.txt,business,How to run 1 1 meetings that work for 2As an Engineering Manager it s not always obvious where to allocate time for maximum impact   Time spent in 1 1 discussion with my direct reports is the highest leverage time in my calendar and it s the de facto place I go to every week to see where I can make a difference  For 30 minutes of time I get the opportunity to amplify the work of somebody on my team by an order of magnitude for a sustained period  Multiply that out by my team size and compound that over 52 to get a feel for the kind of impact effective 1 1 s can have on team success over 12 months   This week I will spend 35  of my time in 1 1 meetings  When I started allocating this kind of time I was deeply dissatisfied with the return on investment  Sometimes I d leave happy  only later to discover that my directions weren t clearly understood  Sometimes I d forget what I d said last week  Sometimes I d spent 30 minutes shooting the shit  Sometimes we d rehash things discussed in planning  Sometimes we were talking at a time when we really should have been doing   When two people chat  each person will leave with their own perspective on what that conversation was about   Over the past few months fueled by ideas from people like Andy Grove and Jeff Caselden I ve been tinkering to try improve the impact of my 1 1 time  Here are some things I ve found to be important   Know why you re meeting  You need buy in from your report that the 1 1 meeting will not only be a valuable use of her time but an essential component to her success at your company  You should spend at least the first couple of 1 1 sessions imparting your philosophy  I find it useful to appeal to the self interest of the team member at first  Let them know what you can offer them directly  Typically this means career development  growth opportunities and guidance  The goal here is to get your team member to take the 1 1 slot seriously   and not consider it an interruption to otherwise more important things  You might need to repeat this exercise many times   If you re a brand new manager  on a new team  or new to the company it might be worth inverting this completely to start  Let them know how they can help you so that you can eventually help them   Clarify ownership  Ownership of 1 1s and associated work is a little tricky  One non negotiable is that the time belongs first and foremost to the person you re managing  Regardless of what you want to talk about  always give your report first choice on the agenda  This means they should turn up with an agenda   I think that s also important  Chatting for three minutes about what to chat about is a really good use of the first three minutes   I personally prefer to own the scheduling and notes by default  This can be flexible though  as long as things are clear  As with much management work  identifying ownership and expectations up front is a useful exercise in avoiding misspent time   Scope the meeting  You want to be really open initially  so avoid explicit scoping in the first few meetings  1 1s are the right place to talk about career goals  expectations and to give performance feedback  They are the right place to gather feedback on you  others or the company and to get in tune with satisfaction levels  They are one setting in which you can identify potential blockers or ways in which you can help as a manager   They are the wrong place to discover project status  to understand what that person is currently working on  or to assign ownership on roadmap work  You should discover project state and assign ownership to work elsewhere  If these things come up they should be directly related to the experience of the problem rather than a process of discovery for you  They might want or need help or direction on something  In that case it s in scope   A large part of your role as manager is identifying the right people to solve a problem and linking those people together  You ll probably come across things that are legitimately in scope for somebody to raise with you  but are out of scope for you to deal with directly  If there s a difficult personal problem  it s worth understanding where you can help  where the limits of your remit and ability to help are and what options you might have to get additional forms of support   either for you or for your report   Be prepared  People complain a lot about meetings  Unfortunately I haven t discovered a more high bandwidth  high leverage way of sharing knowledge than a face to face meeting  What I think actually bothers people is bad meetings  Bad meetings are the bar across the industry right now  There are a few reasons for that  One is lack of preparation  which I genuinely don t understand  There s no excuse  Get your shit together and get it done on time  If for a genuine reason you re not prepared  cancel the meeting  Don t go through the motions   As a manager  safety is your responsibility   To help with preparation there are two note sets that I maintain per person on my team  The first is a feedback diary  A simple bank of short  constructive and positive feedback that I note down over the week  The second is meeting notes  I jot down what we chatted about in bullet point form and identify actions as well as owners for those actions  A good cadence on this means 1 1 prep requires very little overhead  I typically spend 10 minutes per 1 1 sorting this stuff out   There are some 1 1s that require more than 10 minutes preparation  In difficult performance review situations I like to spend at least 30 minutes with a peer running through what I want to say and how I m going to say it  to sanity check my position and identify flaws in my reasoning  I ve found this really useful  More often than not it s the thing you don t identify up front that becomes the primary issue  but the act of running through things with somebody else crystallises my thinking and makes it easier for me to think on the fly  I think of this as a kind of code review for managers  Not only a chance to leverage the collective experience but a chance to share context and understanding across the management team   Follow up  When two people chat each person will leave with their own perspective on what that conversation was about  Depending on many things  those two individuals who think they are completely aligned will in reality range from somewhat aligned to totally misaligned   To help us get in sync  at the end of each 1 1 I jot down the key points of the discussion as I understood them  note down the key next steps and the owners of those and send that email to my team member  For a small investment of time this has some great upsides  including   I crystalise my understanding of what was important about that conversation by writing it down   I sanity check this against the other person s understanding   I give the other person the opportunity to clarify my misunderstanding or to identify their own   What s expected of everyone next is crystal clear   Over time I build a great set of useful notes   Create and maintain a safe environment  It s incredibly difficult to have a successful team if your team members don t trust you  It s incredibly difficult for them to trust you if you don t create a safe environment for them to express themselves  The most insightful and useful 1 1 conversations happen when everyone feels safe  It s not easy to create safety  especially when the stakes are high and people are out of their comfort zones  There s a whole book on this  I boil it down to   Let people talk  in whatever manner they want  using whatever natural tone or language that allows them to express themselves  This might not be enjoyable for you  but  remember  it s not about you   If people close off  get defensive or nervous looking they re probably feeling unsafe  You should pay really close attention and step back at this point  Anything talked about from here on will be low value until you re both feeling safe again   Unless you get direct and explicit agreement otherwise  what s said in 1 1s should remain in 1 1s  If Mary expresses a weak desire to move teams and without permission you tell John this and John mentions it to Mary and Peter then you need to find a new team for Mary  Mary s going to find it very hard to trust you with much from then on  Game over   It s worth remembering that as a manager safety is your responsibility  It might even be your primary concern  I ve been in 1 1s where managers have lost their temper  where they have burst into soliloquy or pontification at the slightest sense of disagreement  When that happens my back goes up  Good luck understanding what I m really thinking from that point on  I try to remember this when working with my team   In the aftermath of a 1 1 gone bad I ve heard managers pawn off the seriousness of the situation with  My intentions were good   It s very hard to prove what your intentions were  even to yourself  Also  nobody cares about your intentions  People don t experience intentions they experience outcomes  If you mistime a tackle in rugby and end up around the opposing player s neck it s your fault  Your intentions are irrelevant because the consequences for the player are severe  Even if your intentions were golden you re leaving the field of play and your teammates behind for 10 minutes  or 10 weeks  depending on the outcome  Team member safety is your responsibility   no excuses  Create and maintain a safe environment   Schedule effectively   but be flexible  By default I schedule 30 minute meetings with five minutes either side for prep  notes and follow up  so 40 mins per 1 1  I fix this time on a weekly cadence creating an open opportunity to chat and a predictable rhythm  That s my starting position  Sticking to this schedule as much as possible and giving enough notice at a reschedule is really important  People that rely on you like you to be predictable   1 1 time is the most valuable time a manager has to have impact   I ve found it more important  however  to be really flexible  If you re only starting to draw out the really useful feedback at minute 25  or something of critical importance comes up in minute 27 the absolute worst thing you can do is indicate you ve something else to be doing next and there s a chance you ll be late  This will be a judgement call but my point here is don t live by the clock  There are some places you ll go in 1 1s where you ll want to stay for an extended period right then and if you interrupt that flow you ll literally never get back there  So be flexible  Whoever you ve scheduled next will appreciate this when it s their turn   Another reason the bar for meeting quality in our industry is so low is timing of meetings  It s naive to schedule a meeting  get a  yes  in reply and then to assume that  yes  will continue to apply right up to the start of the meeting   There are so many reasons why exactly now might not be a good time  I manage engineers  There s a point of flow in an engineer s day that they spend most of the rest of the day chasing  It s the uber productive time where they re in deep work  It s the place where they add millions of dollars of value  There is a study that shows when engineers move from that place it takes 20 minutes to get back there  This assumes they will get back there  In practice and with even the best of intentions there might be two hours of elapsed time before that 20 minute process starts  It might be home time then  As a manager  flexibility is part of your job description  I like to open each 1 1 with  Is now still a good time    It s really important to create a predictable schedule but it s even more important not to be beholden to it   Adapt your style  I m inclined to avoid more specific recommendations like  listen more than you talk  or  always ask another question   In different situations with different people applying these kind of principles has ended up with me listening very attentively to complete silence or irritating an engineer by coming across as a professional socratic questioner and little else  The key point here is be present  use your judgement and adapt your style to the person  the context and the general mood   Learning and iterating  Over the past few months I ve found that by following these guidelines   Performance reviews are easier   Joint understanding of expectations of me are becoming clearer   Joint understanding of expectations of my reports are becoming clearer   Post feedback behavioural changes are more noticeable   Post feedback tasks are getting done   Indirect feedback on my performance as a manager has become more positive   There are always areas to improve  but I ve found the below to be common challenges to watch out for   Concurrent note taking and active listening is challenging   As an alignment mechanism  emails aren t perfect as they can often go unread  I haven t explicitly measured this  but I would guess that the read rate on my follow up emails can be 50 60    Maintaining safety is a difficult art  Sometimes concentrating on total safety can dull the outcomes of otherwise interesting conversations  This is probably because I m not practiced enough at it yet and it s tricky to learn something new and engage at full tilt at the same time  To mitigate for now I m investing in my apology mechanism     I mostly take 10 minutes extra per engineer for prep  notes and follow up  Sometimes it takes me 20 minutes  Scaled up across seven engineers weekly this is a significant difference  I m exploring ways to make this more efficient and ensure alignment post meeting   I still haven t figured out if it s better to batch 1 1s together in an afternoon to minimise context switching or to spread them out over a few afternoons to optimise for energy  A  1 1 day  sounds like a good idea  but sometimes I m lacking in energy at the end of the day  which is bad news for the team member in the 4 30pm slot   Chatting to other engineering managers around Intercom it s clear that there is no single effective shape or system for 1 1s  Certain formats and systems work better for different people   I understand and learn by reading and writing notes  but others might find this torturous   What is clear is that 1 1 time is the most valuable time a manager has to have impact  Whatever mechanism or system you use it s worth understanding if you re using that time optimally  Since this time is so high leverage  even minor tweaks can yield significant  compounding results,"[391 315 17 1146 973 19 1030 296 912 1154 1385]"
395,training-dataset/business/1131.txt,business,My Launch Lessons from 37 Minutes in an Amazon War RoomIn the late morning of April 11  2011  hours before its planned launch  the third generation Kindle the first lower priced Kindle with Special Offers was leaked  Moments later  20 people in a Seattle conference room jumped into gear  Thirty seven minutes after that  the device was officially unveiled and available for purchase  and Jeff Bezos was getting ready to sing its praises in a press interview   How is it possible to launch a new product line in less than an hour  For starters  the Kindle team was as prepared for surprises as they were for a regularly scheduled launch  With tech watchers sniffing around for details of the next Kindle and journalists holding onto an embargoed press release  there was a very real possibility that word would get out sooner than the team intended   Still  preparing for an accelerated launch is one thing  Realizing that your product just became the hottest gadget in town   and you don t have so much as a Buy button to show for it  That s quite another   Ibrahim Bashir then senior manager for Kindle  now director of program management and engineering at Twitter was at the helm that day  Now  with a few years of perspective  he walks through those 37 minutes and the hard won lessons that ll help startups counteract any trials or turbulence on launch day   Lesson  1  Don t Fight the Leak   Faced with a leak  the most effective response will vary from company to company and launch to launch  In some cases  you might issue a denial  in others  an  any press is good press  approach is in order  Or if you re  say  Apple  you ll just completely ignore the noise and proceed with your meticulously planned launch event  Just don t waste your time trying to plug a leak   In this case  the Kindle team knew that they could  and should  capitalize on any early buzz  and the website traffic that came with it   We wanted to steer into the leak   says Bashir   To help determine your approach  mark down the earliest possible date you d feel okay   even if slightly uncomfortable   launching  Our Kindle sales team had determined a game time window  If news leaked more than a week before the scheduled release  our team s hands were tied  Launch too far before the product was available to ship  and customers would grow frustrated by the long wait  A leak after that point  though  would immediately trigger launch    As part of its contingency prep  the team had also determined how they would modify the master launch plan in the event of a leak  That s lesson  2  build a plan for partial or rapid release into your launch strategy  From leaks to system outages to unexpected competitor moves  there are any number of reasons a company might need to move quickly on a big announcement   In this case  Bashir knew exactly how to proceed with the shortest possible launch  the  leak script  even had its own column in his launch spreadsheet   Once you get down to the bare essentials  you know that search has to work  campaigns have to look normal  pricing has to be correct  and customers have to be able to purchase and get an order confirmation   Thanks to a series of dry runs of both the ideal scenario and the leak version  too he also knew exactly how long it should take   Having a list of bare essentials and doing dry runs are critical because you ll naturally have competing expectations around speed in your company   The launch team always pushed for more time  because you don t want anybody in the room feeling pressure   says Bashir   The PR team and everybody else pushed for less time   Can we do this in 15 minutes  Why can t we do it in 15     Ultimately  it comes down to determining how long you need to accomplish the must haves and achieving consensus about which items don t have to work perfectly from the get go   In a leak scenario  fine  customers won t be able to write reviews for the next couple of hours  We ll live with that  Or you might see some bogus search results  We ll live with that   After having had the conversations and done dry runs  the team arrived at a number everyone was comfortable with   So when the leak happened and the countdown was on  everyone knew what they were working with  45 minutes on the clock   Lesson  3  Plan Every Detail   The project team had been sequestered in a war room for the last couple weeks of the project  preparing for launch  and running through contingency plans in case things didn t go as planned   That day  the member of the Comms team tasked with monitoring social media noticed a clear spike in buzz  The PR pros jumped into gear  confirming what looked increasingly clear  this leak was the real deal  It was go time   If you re an early stage startup  you may be thinking that it ll be a while before the world is banging down your door for the latest product news  But the mechanics of a major product launch the prioritization  painstaking planning  and clearly articulated delegation have broad applications  Maybe you need to deal with a new competitor  for example  or a website outage   A war room mentality is not just a mindset  it s a muscle your startup must exercise   and not just for launch   This particular war room had been set up in the Kindle building on the Amazon campus  and every detail was thought out to reduce friction   We needed a space that other Amazon employees could get in and out of easily  which limited us to part of the first floor   says Bashir   We picked the closest room to the front door  And since it was on the ground floor  there was no elevator drama  I had heard that once  there was elevator drama you can t have that    No detail was left to chance  There was even a table ready to load with food and drinks  and a plan for acquiring plenty of sustenance from the closest cafeteria   Lesson  4  Populate the Room Wisely   and Sparingly   The people in the room had been carefully thought out  too   There were decision makers and people who had their fingers on buttons   says Bashir   Those were the only two types of people in the room    So how were they chosen  Bashir deferred to each department involved in the launch   You tell those teams   We re going to have this war room and these are the decisions and the types of problems we re going to face  Please elect one person to be in the room    says Bashir   Sticking to one person per team is key  there isn t time during a launch to risk disagreement  You want one voice    There are many factors to consider when selecting the right representatives  Here are key questions to ask   Who has subject matter expertise   Who has a sense of ownership   Who doesn t crack under pressure   Who has been through something like this before   Or who do you want to have this experience   Sometimes leaders prefer to be in the room themselves  other times  they may prefer to send team members with more technical expertise  There s room for a mix of both types of people  but on some level  you ll only truly know when the countdown begins   There are people who enjoy the adrenaline  and there are people who don t   says Bashir   It s really hard to figure out who is who until you ve been in the war room with them    Equally important is who s not in the room  Every superfluous voice increases your risk of unnecessary distraction or disagreement  There is no room for observers or  groupies  and more often than not  that goes double for execs   One time  a high ranking and senior member wanted to join the war room to see how the sausage was made  However  in this case  he would not be making any decisions or pressing any buttons  just merely observing and possibly distracting   says Bashir   His mere presence would have no impact on the team  beyond possibly psyching them out  That can be huge when the clock is ticking  so it was best that he wasn t present for this launch  but debriefed afterwards    Also not typically needed in the war room  Product managers  By the time you re communicating major product initiatives to the public  the time for negotiating what you re communicating is long over   All of the passionate stuff about what feature should be on the device or not or which markets you re building for  It s been decided  The experience you re shepherding out the door now is the sales experience   says Bashir   Lesson  5  Make Yourself Heard  Literally   With not a minute to spare  Bashir  as senior manager for the new product line  assumed his role as the  launch manager  at the center of the action   If you ve ever seen Apollo 13  the NASA room  it looked like that   he said   In preparation for launch  the team had thought of everything  down to the practical tools they would need  Now  Bashir calmly put on his headset microphone   When we practiced  everyone said   You re not a loud guy  You re going to need a mic    he said   That s why dry runs are so vital  You conceptually get that there will be energy and a din in the room  but you have to experience it  If we found out they couldn t hear me on launch day  we may not have hit our deadline    With his headset on  Bashir propped up a whiteboard  which listed the key events he needed the team to remember the milestones they absolutely couldn t punt on  Tools such as these actually supported   and preserved   Bashir s voice for only the most important communication    You can use very 101 level tools   says Bashir   There was the triage corner  where we hung a poster board and marker to note major issues as they arose  A screen in the middle of the room was projecting the master spreadsheet of every task that needed to happen  with major milestones highlighted  And each of those tasks included a projected completion time  so I and anyone else in the room could quickly assess whether we were on track to hit that 45 minute deadline     You don t want anyone in the room coming to you and saying   So and so wants to know what s going on   The PR people had been through dry runs with us  so they could just look at that hot list and literally every five to ten minutes go next door and update the execs on the phone   says Bashir   They d say   Here s where the team is at  here s what s going on  here s where we expect to be in the next 15 minutes   That keeps everybody calm and informed    Indeed  your most valuable tool during a launch is  simply  people  Which is all the more reason to abide by lesson  6  Give every person in the room a clear role and set of responsibilities   The goal is to ensure that you ve filled the room with the most qualified people  so don t give too much thought to titles or even functions   We had a guy who is a merchandiser whose job is to buy products that sell on Amazon for different categories but he was an expert with catalog systems   says Bashir   We would pull him in for product launches and get him up to speed  He knew who to talk to and what to do if anything funky happened with our catalogs    Lesson  7  Structure Launch into Phases with Clear Entry and Exit Criteria   The room was up and running and key players were at their posts  Now  it was time to move  Bashir s launch spreadsheet had been carefully structured to move from one key task to the next in clear  quick succession  In this case  here was the punch list   Put the detail page up  Get the buy button working  Get search and campaign working  Get order confirmation working  Publish the press release  Lift the press embargo  There was no going back on this particular launch  but you may encounter scenarios where you want or need to undo something or to scrap a launch attempt entirely  Whatever the exigencies of your particular scenario  proper launch hygiene demands that you move neatly  step by step   With leaks  move with rhythm  Don t step  then skip  then leap  Even if you know where you re going and have to change direction   You can further streamline a phased rollout by adhering to Bashir s lesson  8  have launch down to a series of switches  Amazon  like most other tech companies  first builds new pages or features in an invisible staging area  keeping them hidden until it s time for the world to see  At the simplest level  the next 45 minutes would be about flipping a series of switches to  turn things on  in the prescribed order    You flip a switch  You see how it reacts  And then it s   Go to the next one    says Bashir  With all eyes on the monitors around the room displaying website traffic and other key systems  his team moved methodically through their list  First catalog details went up  then they confirmed the product webpage looked normal and all URLs were directing normally   When it s go time  you can t be doing rollbacks  creating editorial  copying and pasting information  Any manual effort leads to mistakes  particularly in a tense situation    Sure  not every company has Amazon level infrastructure  But even the most cash strapped startup can afford to implement some version of these switches   There are companies out there now that will sell you A B testing framework and gradual feature rollout  Invest in this software   says Bashir   Ibrahim Bashir  Not every detail  though  was hidden behind a switch  Because while efficiency is king in moments like these  one thing trumps it  And that s lesson  9  identify your differentiators  your major selling points  and keep them under lock and key    It s gamesmanship  It s competitive advantage  If you re a startup  price may not be the thing you re selling  but what is  Is it the aha moment of the product reveal itself  Is it the integration  Is it the partnership  Is it some  wow  feature  The thing you think will sell your product is the thing you save for the reveal    For the team behind Kindle with Special Offers  price was a key element of the big reveal  In preparation for launch  they had built catalog pages for the device and its accessories  inputting details according to how critical each product was deemed   For example  for the Kindle covers  we filled in all the colors  uploaded the images  put in the price  everything   says Bashir   It s phased  We didn t do that when the project started  We did it  say  T minus one week  because we figured  if it leaks  fine  People know there s something coming out with a new  29 99 cover    Pricing of the device itself  though  was a critical piece of strategy  It was kept very close to the vest  making it one of the few product details not pre populated in the system that morning  Now that it was go time  it wasn t a matter of simply posting the right price to a single product page  There were also confirmation emails and labels and customer support systems that needed to be updated    The worst thing that could happen is somebody sees a bogus price or incorrect price  So until that price is done  that page is not really working  You re basically waiting to know that price is available in all systems that would need price  This propagation delay  it s in the order of minutes  But we were all waiting on that  so that s a big deal    Lesson  10  Prep Second Degree Stakeholders   While the launch team proper was executing a sequence of tasks they could practically recite in their sleep  a much broader team was on standby  only vaguely aware that they might be looped into the action   If your service or your app or your product is launching in today s world  there s a bunch of distributed systems that have to play nice   says Bashir   While you ll want to limit top secret launch information to a small need to know group  you do need to give secondary teams a heads up that something might be coming their way  And fast   We would prep them and say   Something is happening in the next 72 hours  I need to know who your on call is  and the best way to get a hold of them  These are the types of things I may ask you to do    says Bashir   Halfway into this particular launch  it was the Customer Reviews team that got the call  Because Kindle with Special Offers wasn t technically a new product  but a variant of the existing device  it was available at the same Amazon com Kindle page   People were abusing the situation  and started writing reviews of the ads version that hadn t shipped yet  They re writing   The ads product is terrible  yada  yada  yada   You can t stop them  because in the system they re one product    Bashir got a hold of his colleagues in Customer Reviews to take down the invalid reviews  But that group came back with their firmly held principle that Amazon is community moderated  and invalid reviews would be down voted and weeded out over time   We had to explain that we didn t have  over time    says Bashir   We argued   This person is literally saying the ads based product is bogus  and that product has not shipped  This review is not legitimate     The Reviews team countered with an alternate solution   They said   Well  then you should have a separate page that is on pre order status  where customers can t write reviews   And we came back with   We wanted to give people the choice of ads or no ads as a product variant  It s not a separate product     Meanwhile  the clock is ticking   I m looking at the time thinking   We ve got X task coming up next   Finally  I told Reviews   You guys have to go solve this     Ultimately  the issue was escalated  the Reviews team was overruled  and the phony customer reviews were removed  In the chaos of a major launch  this subplot highlighted the importance of lesson  11  adopt a culture of disagree and commit   That s a core leadership principle at Amazon  but a good philosophy to consider at any company  Anyone can express their viewpoint  But once a decision is made about who is best speaking for the customer in that moment  every other player needs to fall in line    Disagree and commit  is shorthand to remind us  it s not about your team s interest or your ego  It s about what s the right thing for the customer    The question  in this case  was   Are we talking about the reviews experience  which the Reviews team owns  or are we talking about the Kindle sales experience   And the decision was that  in that moment  we were talking about the Kindle sales experience  We were just talking about this one instance  Then we agreed to come back to the table and reaffirm that we can t be asking the Reviews team to flag stuff    Lesson  12  Be Ready  and Willing  to Hack Your Rules  That raises another important takeaway from Bashir s experience sending Kindle with Special Offers into the world  launches  particularly the accelerated variety  may require that you bend your own rules   When it came to the Kindle launch  this played out a number of ways perhaps most notably with search  When press buzz suddenly sends huge numbers of people looking for your brand new product  you want to make it as easy as possible for them to find it  Not surprisingly  the launch team wanted any searches for  Kindle  on Amazon com to return the new product in the top position   The company s Search team  though  had a different perspective   They have their own philosophies and believe that search should be organic  Results that are popular algorithmic ally will bubble to the top  but they don t want any juicing of search results  If you re the launch team  you re like   I don t care about your philosophy  I want people to see the new product at the top  for at least the next couple of hours     Ultimately  the Search team begrudgingly agreed to manually adjust any wonky search results   But this is a discussion you have beforehand so you re not worried about it   says Bashir  That is  to the extent possible  follow lesson  13  pre decide as much as you can before launch    There s certain things that have to be decided in the moment because A  you haven t planned for them or they re unforeseen  or B  the data is different on the fly   says Bashir   But unless you re going to have some new need or data in the heat of the moment  you should make decisions when it s not a hot moment    There was no reason to bring the Search team into the war room  Instead  Bashir and launch leadership hashed out this philosophical difference ahead of time  And when they pre decided how to handle it  they did so down to the logistical details   We said   In the event of odd search results  I m going to page you  If you get this page  this is what you do   Then there was somebody on the Search team who would resolve the issue   Lesson  14  Don t Play the Blame Game   Of course  launches and other major initiatives will almost inevitably surface issues you couldn t have predicted  which no amount of pre deciding could have solved  When they do  don t waste time or energy pointing fingers   Around the 30 minute mark  Bashir s Kindle launch hit a snag no one had seen coming  Both the Kindle team and the Amazon Prime team had hacked the site s main product detail page to add a navigation bar at the top  For users who had both Kindle and Prime accounts  though  those bars were now warring with each other  The Prime team was contacted  and agreed to give theirs up until a code fix could be deployed   Blame is unproductive  but learning from hiccups is invaluable   We kept a list of things we could learn from the  How did this happen   list so we added this to it   says Bashir  That s lesson  15  track your learnings  In the moment  the ticking clock demands that all non essential issues be tabled  Logging those issues  though  like all war room jobs  should be specifically assigned to a single person   During the Kindle launch  the task fell to Bashir s boss   In the heat of the moment  I was registering certain things  not registering other things  Later  we would sit down and talk about the list  Then we held a group retrospective    Prioritizing learning is one way to minimize the temptation to point fingers  clearly communicating who s responsible for what is another  Before launch  every night for two weeks  Bashir sent an email to the entire project team detailing who needed to be in the room for launch  what the reporting looked like  and why each person was there   There was never any confusion about that  So while people may have been surprised by things  people may have grumbled or voiced their opinions  there was no blame    Lesson  16  Always Clean Up After Yourself   In the end  the launch of Kindle with Special Offers beat expectations  going live in just 37 minutes  That was thanks in no small part to a policy of tabling non essential issues that couldn t be resolved quickly issues that hadn t gone anywhere once the device was live   You don t go home at minute 38   says Bashir   Yes  there was a moment to take a breath  Bashir took off his headset  and the team took a moment to appreciate what they d accomplished   As soon as it was done  I believe there were donuts or cupcakes   he says   Then  the PR crowd left the room to monitor various execs  interviews  The sales team started checking up on sales volume  And the rest of the team set about cleaning up the messes that had been tabled for later  There was the Kindle page that didn t play nice with the similarly modified Prime page design  of course  The mobile app didn t look quite right  and some order confirmations were printing incorrectly    We had to finish everything you would do in a normal launch   says Bashir   All those things that weren t your primary concern while the clock was counting down  You still have to fix them   That brings you to the end of day one  But you re not really done until every issue that arises out of launch has been resolved   Bringing It All Together  Before you launch  build in a rapid or partial release option should you need it  Pre decide everything you can   especially those who will be in the room on launch day  Populate the war room thoughtfully and sparingly  everyone involved should have clear roles and responsibilities   Senior leaders can be reached  even if they aren t present   Leading up to launch  do real time  full dry runs with the team  When a leak happens  don t fight it  The launch should be segmented into phases with clear entry and exit criteria   but there should be a series of switches as new scenarios develop  If you re running the war room  get equipment  headset  standing stool  to be easily heard and seen  Foster a culture of disagree and commit  Track your lessons and clean up after yourself   resolve the issues that had to wait    A hardware team declares victory when they have production ready units  A software team declares victory when they have final bits that go to the factory  A launch team actually doesn t declare victory until after customers have devices in their hands   says Bashir   We sit with the customer service team and figure out every single issue that s coming up  and how to resolve it  Then we move on  There s always another launch to prepare for coming round the bend,"[395 1061 663 190 826 17 1223 1003 912 1030 1387]"
407,training-dataset/business/112.txt,business,How to Save Your Company From A Communications CrisisSeven years ago  Krista Berlincourt stepped out of the office  walked to her car  sat down and hoped for divine inspiration  She had just gotten off the phone with a New York Times reporter  one of 87 calls she d received from every major news outlet over a 48 hour window  Her company was in the midst of a firestorm  as the personal data of an estimated 800 000 customers had vanished on their smartphones  At the time  it was described as  the biggest disaster yet for the whole concept of cloud computing  and is still one of the largest mobile data outages in history  She was the last to leave that day  as the media waited for her response   The incident forever shaped Berlincourt s philosophy in responding to what she refers to as  brand threats   the moments of alarm that have the potential to throw a company into a tailspin  She s now the Head of Communications at fintech company Simple  Before that  she drove Developer and App communications for Microsoft s Windows Phone after a stint supporting the company s Startup Business Group  Today  Berlincourt actively advises startups with their communications strategy  most recently the Jaguar Land Rover Tech Incubator and previously companies participating in the Nike  TechStars Accelerator   In this exclusive interview  Berlincourt shares the principles and practices she s honed over the years to help her navigate painful pinches in even the most highly regulated consumer industries  Here  she not only draws on her own career experience  but the National Forestry Service s framework to triage and tackle forest fires  a methodology Simple actively employs  Whether you re an early stage company just beginning to build its brand or an incumbent under the watchful eye of billions  Berlincourt s tips on how to proactively prepare and reactively respond to incidents will help you consistently manage and expertly douse any fires   When things are spiraling  don t spin with them  Settle into an intense sense of calm  like the eye of a hurricane   The Seven Deadly Sins of Crisis Communications  Company crises   like wildfires   are complex developments that can progress in unexpected ways  In the heat of the moment  missteps in management can quickly result in a sullied brand and customer churn    When it comes to managing a company  crisis  it s important to remember that your brand is the gut feeling your customers have when they think of you  And because we re emotional  intuitive beings  many of the feelings we use to describe our human relationships are also used for brands  love  trust  passion  hate  They re actually not all that different  So from your customer s standpoint  any misstep is a mismanagement or misinterpretation of those feelings   says Berlincourt   You ll notice that the same responses that offend customers are those that would also leave a close friend or family member in a lurch  You d never just walk away or hang up the phone on a family member who needed your help  right  Treating each of your customers as generously as your inner circle may seem unscalable  but the truth is the more severe the incident  the more personal impact your customers will feel    There s a framework to combat crises  but first let s look into a few behaviours and reactions to avoid  Here are the most common mistakes Berlincourt has observed over her career   Disappearance    Much as you wouldn t vanish on a friend in need  brands should avoid going radio silent  This is one of the most common  yet destructive  responses  This avoidance is built around fear  which breeds distrust and immediately puts you on the defensive even if you ve done nothing wrong  When something s not right  the last thing a customer wants to be met with is defense  Then  more than ever  your brand needs to show up    Concealment    When a brand disappears  it can be unclear whether it s indecisive or intentional  But when a company knowingly hides an issue  there s no doubt of the motivation  I ve been shocked by the number of communications agencies who ve suggested we simply  sweep it under the rug   Even the most buried crisis surfaces in the end  By lying to your customers  you re saying  We don t care about how you feel   Indifference is more lethal than incompetence    Inertia    When something s awry  speed and timing are of the utmost importance  But there s a difference between acting expediently and hastily  It s better to use the information available than to wait for additional insight before responding  Again  consider human relationships  Imagine that you re in the middle of a particularly high stakes text conversation  share some big news  then for the next thirty minutes you watch the dreaded text bubble ellipses bounce back and forth  You wait  You re irritated  Your anxiety increases  You feel ignored  That  where the hell are you    feeling is the same one your community has while waiting 45 minutes for you to get a statement out    Indirectness    Skirting around an issue only prolongs the suspense  Failing to address the question continues the conversation  Reframing and deflection increase commotion and confusion  It s more frustrating to your customers   and damaging to your brand   if they have to do the untangling    Automation    Dehumanizing the conversation is a classic mistake  I call it  robot speak  when there s a scripted stiffness to conversations  Are you talking to humans  Then sound like a human  Robot speak is an acute stress reaction  As is the case in human psychology  brands often respond with emotional detachment and depersonalization   We are deeply saddened by the fact that this incident has been brought to our attention   is the brand equivalent of  Well  it s fine  but if you can make time  I was hoping we could possibly   Cut out the prepositions and get to the point    Assumption    Take a minute to sit with the situation then use your energy to strip away the surface emotion and ego as much as possible  Rationally frame what you know  One of the errors we often see is when a company responds to a crisis by extrapolating beyond the information available  Then  once things shake out  they backpedal and it s unclear if that s intentional or not  Just as you d do in your personal life  if you re asked a question  and you only know 10  of the story  don t offer a response that attempts to bridge the other 90   It s okay to say   I only have 10  of the information  and I m working to find the other 90  but right now this is what I know   Be honest  As a mentor of mine says  there s truth and there s truthiness  Offer the truth    Winging it   If luck is what happens when opportunity meets preparation  a crisis is difficulty meeting unreadiness  In business   incidents  can spin up just about anywhere  a leadership change  a shift in the market  product error  employee churn or data breach  So on a certain level  you will always be reactive  Consider scaling for growth  As the law of truly large numbers says  at a certain size  any outrageous thing is likely to happen  You can t account for the unknown unknowns  but that doesn t mean that you should fly by the seat of your pants  Plan   it s the only way you ll have some level of comfort with the  what ifs  should they happen  You can t avoid every iceberg  but you can add a few more safety boats    Creating a Culture That Responds to Crises  Before you find yourself behind the firehose  prepare your company to firefight with you  Here are the principles Berlincourt has used to create the right culture for her team and tools to work most effectively during a crisis   Seek to inform  not alarm   Calling an incident a  crisis  doesn t benefit anyone   not the communications staffer on point nor the rest of the team   For most people within an organization  when something goes very wrong  they re acutely aware and may feel helpless in finding a solution  Over time  this feeling can morph into a belief that you re also unable to accurately identify a risk   says Berlincourt   There s a system to help with that  but the first step is to dull the visceral response to the word  Use the term  incident  rather than  crisis   This is less semantics  and more a nuance that can have a real impact on your ability to handle challenging situations  Don t yell fire if there s simply smoke    At Simple  Berlincourt s use of  incident  has a widespread effect   I try to delineate between crisis and incident  The word crisis is scary  If I texted you and said   Hey  I m having a crisis   you would drop everything and come running  At Simple  we seek to inform  not alarm each other   says Berlincourt   When something unforeseen happens   whether it s a hiccup or a disaster    the panic threshold is different for every team member based on their past experiences  The last thing we want to do is activate undue panic    They are incidents  The word  crisis  summons panic and paralysis  not clear  measured action   Flag early  flag often   Only you can prevent forest fires  The same goes for brands  Build a culture where every contributor is not only empowered but encouraged to raise their hand when something seems to be going awry   If you smell smoke  say something  We ask every member of the Simple team to flag incidents  and describe  not analyze them   says Berlincourt   For example  the best outcome is that they raise their hand and say   Hey  I noticed this customer issue   or  We seem to be outpacing forecasted onboarding volume and applications are taking longer to process   We do this in a dedicated Slack channel  Then  a segment of the team will field  classify  and triage each issue with support from a technical team  as needed  More often than not  the smoke is eliminated before fire catches    Simple s engineers introduced the U S  Forest Service s model for incident classification   It s National Fire Danger Rating System is accessible and straightforward  The alerts begin with green  but any color beyond green is an incident  If there s even an inkling from a ranger or the public that something s afoot  it ll raise the alert  even if there s not an immediate action to take  There s a sensitive trigger with information  but a more deliberate one with action   she says   The beauty of this color warning chart is that its basic categories are commonly known and established  but are retrofitted for specific regions  For example  the Forest Service worked with a local agency in Southern California to develop an additional color warning to better assess the risks specific to that region  In the same way  companies should adjust their rating systems to best suit their risk tolerance given factors such as company stage  industry and customer base  For Simple  which deals with banking and personally identifiable information  it s flag early and flag often    Flag early  flag often  Otherwise  what a bucket of water would ve doused now takes 100 firefighters to fix   Thanks is the only answer   and last word   What most crisis communication systems neglect is closing the loop with colleagues in the same careful manner as they do with their customers   To build a culture that supports an effective crisis communications system  you need to thank each and every person who flags an issue   says Berlincourt   Even if it s a false alarm or a blip  it s really important to meet them with compassion  and say   Hey  thank you so much for flagging this  I think we re going to be okay  but we ll keep an eye on it  as opposed to  Why would you think this was an issue     This tenet builds on a culture that would rather respond to every shout from the boy who cries wolf than get devoured unaware   It s a cultural issue  If you have an environment where you even implicitly require 100  success  raising your hand becomes high risk  In those cases  you re going to feel the flames before you see the fire  because no one will tell you   says Krista   It s the people on the frontline who see the most  right  For consumer tech companies  the front lines are fueled by customer service reps who may be new to the business  If they re reluctant to raise their hand because bureaucracy will smack them down  don t be surprised if an incident develops before you re aware of it    Krista Berlincourt  The Team  Tools and Systems that Harness Incidents  Berlincourt believes that brands  like people  are measured most during bad times  It s during these depths when values are tested  The result is integrity  However  for many companies  those intangibles dissolve when disaster strikes  To make sure that doesn t happen at Simple  Berlincourt and her team turn to Simple s company values and incident management system  IMS  system to ensure their message remains on brand   The first tool in action is Simple s IMS   For any issue flagged by an internal system or someone at Simple  an alert is sent to a specific Slack channel  There are two classifications of alerts  technical and non technical   says Berlincourt   Non technical incidents have to do with people or relationships   That could include a customer issue  a partner or vendor issue  or a social firestorm  These types of incidents vary  but generally don t involve in house code  so engineers aren t automatically alerted  The operations or integration team is pinged and will decide if engineering needs to be pulled online to assist    Technical incidents have to do with product error   At Simple  anything other than optimal product operation will immediately trigger PagerDuty and simultaneously engineering  communications  integration and customer relations are alerted  This removes the barrier of playing telephone and creates an instant response team who can immediately dig into an incident  So  even if something happens at 2am  all the right players are in place    Simple developed these tracks to empower different groups to tackle unique situations   The two each require a different team with specific firefighting specialties  so we ve separated them  You probably don t need an engineer working on the non technical issues or a business operations specialist to help you debug infrastructure  I ve found that trying to create one catch all process only leads to confusion   says Berlincourt   The real time saving tool is activated alongside PagerDuty  our status page    Automate a status page   When technical alerts funnel through IMS  not only are the relevant teams paged  but Simple s status page is then updated to alert customers of any product error  slowdown or planned maintenance   This transparency may seem too vulnerable to some companies but we return the trust our customers have placed in us to safeguard their financial lives  We have a clear mission to help our customers feel confident with their money   says Berlincourt   This means giving them the option to self serve the question   Is my bank account normal   Instead of waiting or debating on when to update the status page or waiting for clarity on a technical issue  we can just switch the color and focus on fixing things    Similar to the National Fire Danger Rating System  here s what the status page looks like in a few different modes   The status page also serves as a running log of past incidents  They are not swept under the carpet  but shown on a feed  Any scheduled maintenance also appears here to alert Simple s customers of any interruptions in service in advance   To gauge transparency  measure how able your customers are to self serve during a crisis   A large part of why the status page works is the integration with Simple s incident management system   Our old status blog was a Wordpress site managed by Engineering  Incidents were described in technical terms  and while accurate  this wasn t always understood by your average customer   says Berlincourt   Plus there wasn t a way to stay current until the next update was posted  That sufficed for a young company  because our customers were fellow nerdy early adopters    Now when an incident is flagged due to interrupted service   say a slowdown with instant transfers or 10 minute glitch in photo check deposits   the feature s indicator is changed to yellow or red  depending on severity  More than creating an efficient system  the status page elevates Simple s quest to strengthen and return trust   On a grander scale  our vision is to create a self driving bank account  So fundamentally  if a customer can t answer her own question  then we have a problem   Being able to see when a service was last offline and check its current function builds trust  We believe your money is yours  you shouldn t need to call us to answer basic questions  We ll never stop working to continue earning our customers  trust    Triage the incident with four questions and a framework   When the alert simultaneously convenes the relevant cohort and updates the status page  the team is afforded a moment to step back and triage the incident  It can now be timely and thoughtful  by methodically working through the following questions to develop messaging while the issue is being resolved  They should be addressed  in this order   What do you know   Think about your business  then walk through each group and consider the incident s impact   technical  brand  timing duration  risk  compliance  and so on  Clarify what you know    What don t you know   If you ve uncovered gaps  can you answer them before responding to your community  If not  be clear that you simply don t have all the information rather than extrapolate on what might be or could be  Often  this evolves into what could be a lie once you fill in the holes later    What can t you say   For risk  compliance  privacy  personally identifiable customer information  and other legal reasons  there are things companies cannot say  even if you really really want to  This will help you you create boundaries for messaging    What do you want to say   Now that you ve corralled all the information that exists  identified gaps  assessed how long it might be until you know more  and the things you can t say  what do you want to say  Start with bullets  then go from there  One team agreement we have at Simple  no lies   lying is lame    Simple also uses a risk classification framework to diagnosis the severity of an issue and the resources it should supply to fix it  It supplements the four questions by helping to measure the potential damage after an incident occurs   Any incident can be translated into five tiers of severity  It s all about a company knowing and understanding their priorities and what matters in times of urgency   says Berlincourt   For Simple  we consider how many internal teams are impacted and customer impact  above all else  We also consider internal impacts and if our external partners need to be kept in the loop    Simple s Risk Classification Network  Issue a statement based on what you know now   Once an incident s been assessed and the internal team s mobilized to resolve  it s time to translate this for your customers and broader community  While Berlincourt has developed guidelines for how to respond  she shies away from specific tactics on what to say   One of the major sins in handling incidents is becoming robotic  so it s important that your statement be specific to the incident  not  canned    says Berlincourt   Tips and tools that we ve developed to help guide   but not script   our statements include a three point message  no timeline default and a no fly zone list    Three point statement    This approach is particularly valuable for especially challenging  entangled incidents  It s a brief update that follows this format   We are  insert feeling   We are looking into it  We are here   That first sentence should reflect how the company s feeling on the broader whole  The second sentence confirms you are in pursuit of a solution  and the third statement indicates that you are accessible and available  Many companies could avoid PR fiascos  customer revolts and fiery headlines if they execute their incident management systems and issued a similar response immediately while working on a solution  Lastly  it s as critical not to over promise     No default for a timeline    If you ve tapped everyone in the company and still have only 10  of the story  then that is what you know  Expanding your response beyond that 10  would be a lie  even if unintentionally  You re extrapolating with good intent  but you re trading future pain for temporary relief  I see this a lot with timelines  Your company may say   We ll have more to share in an hour   Well  you ve then committed to an hour  Now are your engineers on that same timeline  What if you don t have more to share in an hour  You don t want to blindly and publicly impose a deadline on your broader team  Don t be the comms lead who speaks for the company but is completely detached from the work that actually needs to be done  Assess what you know and align internally    No fly zone list   A no fly zone is like a safety belt for empathy  Create a list of words during the best of times that you d hate to see in a statement  then reference what s off limits to keep you on track when an incident hits  These generally fall into three categories   alarmist  careless and robotic   that  together  will help maintain an informed  friendly brand voice  For example  you ll sound robotic if you re hyper formal  but could come off as careless or flippant if you lean toward too casual  One of the words I most hate is  oops   It s becoming common for modern  conversational brands that try to sound playful and take the sting out of an incident  We make it a best practice to review incident messaging periodically and red line where we have room to grow   Close the loop with a learning review   Every incident needs closure   We all share a belief in the importance of a growth mindset  We can always improve  That s not to say that you need to get better  but you can  We reinforce this concept in the naming of our process for closure  Rather than  post mortem    which literally means an examination of a dead body to determine the cause of death   we use the term  learning review    says Berlincourt   Just as we flag incidents  we encourage anyone in the organization to raise their hand and suggest a learning review  We ll assemble a small team and run through the typical questions  What worked here  Where did we get caught up  Why did it take us so long  What would we do differently next time  How does our language stack up without the chaos of a time crunch    One more unusual addition is how Berlincourt s team brings checks and balances into closure   We also have a brand voice lead  who monitors and evaluates brand tone and language across the company  He s not on the team that responds to incidents  so he offers an objective  outside perspective on our copy   says Berlincourt   In your closure or feedback loops  I d recommend integrating people who aren t intimately involved in incidents to join your learning reviews after the storm has cleared  It gets you out of your echo chamber and is another chance to learn    Wildfires  like company crises  are powerful but manageable with the right fire and escape routes   When Berlincourt joined Simple  the team was just over 20  Today  the company is over 300 employees  Customer account growth has increased by more than 40  over the last two quarters  The stakes are high and incidents must be met with empathy and exactitude   you can t just throw up a fail whale in banking   To prepare for your company s own inevitable  oh no  moments  learn to sidestep the seven sins of crisis communications  Create a culture where your colleagues can habitually flag incidents early and often  Seek to inform  not alarm  Once that culture is alive  overlay the tools to enable it  An honest status page  incident management system  risk classification framework  no fly zone lists and learning reviews are key tools   and all the more potent when synchronized as a system  This plan can help a lone firefighter build a process that empowers a team  even at scale    Fires can move from sparks to an all out blaze very quickly  In fact  when the conditions align temperature  humidity and wind fire whirls have been clocked at more than 50 miles per hour  Compare that to the fastest human foot speed of 28 miles per hour and you begin to understand why you need a plan  a team  and focused response to have a fighting chance against the elements   says Berlincourt   The point is that  whether it s a sprint or a long haul  even the most skilled individual can t outpace a fire alone  And news travels even faster  If your company has the tools and a system to collectively and methodically handle incidents  you ll prevent a scorched brand    Photography by Ryan Donaldson,"[407 1061 19 296 1154 120 826 198 1385 190 391]"
408,training-dataset/engineering/1373.txt,engineering,Why Companies Adopt Microservices And How They SucceedThese are issues faced by many companies at some point in their lifetime  From a business standpoint it becomes clear that the current organisational structure and technical architecture will mostly likely hinder the progress of the company in the long term   The day 1 goal of the company still stands true  To deliver a quality product in the shortest space of time possible  However the company is now being limited more so by itself than the market or it s competitors   At this point it becomes clear that there s a need to address these issues so the company can be structured in a way that will enable it to execute and scale   The Road To Re architecture  It s not about technology  it s about people  The motivations are clear but before pursuing any path it s important to begin by discussing the existing issues with those directly affected   The team   Jumping too quickly into architecting a new system without understanding the existing problems could not only result in building the wrong solution but also wasting a significant amount of time and money   Every part of the organisation will be affected differently  Many of the problems you ll hear are not specifically technical but more so about cross team collaboration  prioritisation of goals  etc   Technology may be at the core of the product offering but the day to day operation of the company is focused on people and how they work together   Seek Out Expertise  While discussing the company problems and potential solutions amongst the team is imperative it s also worthwhile seeking an outside perspective  The experience of those who may have seen these problems before can be immensely valuable   This doesn t necessarily mean looking to consulting firms  The road to re architecture is nothing new  There are many experienced teams or individuals from other companies who ve already been down this path and can offer great insight   Ask someone to spend a few days talking to people at the company and looking at the technology  so they can provide a well formed opinion about how you should proceed  By seeking out a number of outside experts you ll be able to make an informed decision about what the next steps should be   In some cases  microservices may not actually be the needed solution  A lot of deficiencies may be process related and can be rectified by focusing on product lifecycle management with additional minor technical changes   You may receive contrasting views about what the right approach is  This will be because of past experiences with specific elements in place such as strong growth and revenue  senior engineers with past architecture experience  etc   It s important to listen to the various experiences and opinions  however at the end of the day your team needs to make a judgement call about what your collective priorities and the approach that s best suited to you   Existing Models  If you do decide that re architecture is the path to take  again seek out the experts in the field who ve done this before and identify models that already work   The things you really want to know are   What team structures and dynamics work Which technologies make sense for you How the architecture is built and scaled What the migration path is from the legacy system  The patterns for microservice platforms have emerged in recent years with the likes of Netflix being one of first to actively speak about their journey  This process of re architecture included a move to the public cloud leveraging Amazon Web Services   Others like Spotify have discussed engineering culture and structural practices that worked for them  There s a wealth of information on the successes of squads  tribes  guilds  mission teams and so on   Prototyping  With all that in mind  diving head first into a complete rewrite is unadvisable  The best way to begin is with some rapid prototyping   In this phase a group of engineers should be given time to identify and test potential technologies and architecture patterns  This is ideally a 2 4 week period that results in sample solutions  demo platforms and a summary that can be presented to the rest of the company   It s important to discuss what will and won t work as a team rather than making decisions in a silo  The entire company will inherently be users of the new platform and they should have a say in what they ll be using day to day   A lot will be learned during this phase  Whether the team has the existing skills and experience to build a better system than before   What timelines potentially look like in building the first version of said system  And whether it s actually going to solve the problems you re facing as an organisation   If it looks like any of these issues are going to arise in the next phases of the process it s ideal that they re surfaced now in this low risk low cost setting   Do not be afraid to take a step back to reassess if it no longer makes sense   If the prototyping phase was successful  it s time to move on to the next step  Building the new platform and validating that it actually works   A New Architecture  Looking back  it may become clear that the existing system was cobbled together manually and formed a unique architecture which was only fully understood by a few engineers within the company   Is there a disaster recovery plan  Is there automated failover  How long would it take to rebuild from scratch  Is it scalable  Is it secure   The answer to these questions probably wasn t met with a confident  yes   This is the time at which many take the opportunity to address the above questions along with all the other problems discussed before   So what s needed   A clean slate  A fully automated highly available cloud native platform   As mentioned before  the pattern and tools to develop a globally scalable microservice platform already exist  Along with the results of the prototyping phase  the team should be able to produce a repeatable model that becomes the basis of the new system   As this is a mostly non technical post  we ll leave out the details of how that s actually achieved  Reach out if you would like to discuss it further   The Migration Path  If you re providing a service to customers then you know business continuity is absolutely critical  Any disruptions in your service affects the customer experience and ultimately the company s revenue   A Service Level Agreement  SLA  is common practice and you want to ensure this is maintained throughout the migration process  It s key to remember that the business is first priority but maintaining this SLA during a migration process is a tradeoff between uptime and developement time   If teams are spending a significant amount of time migrating from the legacy system to the new system  the company is essentially unable to execute on other important aspects of the business  It s something everyone must be wary of before even beginning this journey   With that said  no matter which way you cut it  the migration path will take time  The tried and tested method is to take an existing function of the legacy system  build a new version as a microservice on the new platform and gradually shift request traffic over   There s a few important points to keep in mind here   1  The entire company does not need to focus on the migration  A single team  ideally the team which built the prototype  should take on this task  This allows the majority of teams to continue work on their existing projects and minimises any further disruption   2  Pick a well understood function of the system  It s important that the team migrating over the first feature has a deep understanding of that feature  how it will be architected in the new system and how to rollback if there are any significant issues   3  Set achievable milestones  A couple weeks is likely not long enough to migrate that first feature but if you re still working on it after 6 months  something is clearly going wrong  3 months is a good timeframe in which to develop a plan  write the software  and by the end  serving production traffic on the new platform   After successfully migrating over the first few features services a pattern will emerge in terms of the technical approach  timelines and team requirements   The process is one that can take many months or even years depending on how you prioritise the migration  Everyone should understand that this is not an overnight transition and the re architecture path must be as much a part of the roadmap as any new feature or product development   Platform as a service  Your developers are customers  As the migration is underway  patterns emerge and a playbook is formed for how this process should continue on successfully  The  platform  team will have developed a deep understanding of all that s involved   The rest of the company should be kept in the loop about the progress of the migration and will have accrued some knowledge of how the new platform works during the journey   Further effort now needs to be made to engage them in increasing this understanding and opening the platform up to them so they can participate in the migration of services themselves or build new products on the platform   This is where we really start to address the need for Platform as a Service   The Need For A Platform Team  You ll have heard of PaaS as some form of hosted offering for running applications  The benefit of such a system is that it allows you to focus primarily on product development and less on infrastructure management   When running a microservice platform internally you wan t this same advantage  Teams should be focused on delivering business value rather than on the complexities of automating and managing distributed systems   A platform team s primary objective would be to deliver platform as a service internally via APIs  dashboards and developer tools while maintaining a highly available and scalable system   There are varying opinions on this methodology  Spotify for instance have opted for a polyglot architecture in which every team chooses their own technologies and manages their own infrastructure   The likes of Google  Facebook  Twitter  Netflix and Hailo have opted for the alternative model where a set of services are provided to the company much like a cloud provider   As with any choice  it s a tradeoff  In this case time versus flexibility  By allowing teams to manage their own infrastructure  much of the time is spent there  If platform as a service is provided instead  that time is recouped but a more opinionated service is offered   Companies have to rationalise these decisions internally based on their skills  experiences and what they deem to be most important to them  An argument can be made for either methodology   Self Organising Teams  With the power of a microservices platform  feature development and testing new ideas should be quick  If anything 24 48 hour hackathons can become a regular occurrence and originate new products   One method of really harnessing this power is around the idea of self organising teams  For the most part you will have mission teams or product teams which operate autonomously and focus on key long term objectives  Self organising teams are a way of augmenting this structure   An example scenario  A group of 3 4 employees with complementary skills from various teams identify a problem that needs to be solved or they have an idea for a new feature which they feel strongly about developing   With the approval of their managers  they form a temporary team for a two week sprint to build out a solution  They re able to reuse existing micro services on the platform and make use of all the self serve tools which really accelerates the process   By the end of the sprint they ship a new set of services to production without having to coordinate with any other teams and also more importantly without having to modify a single line of code in any existing applications   If the solution proves successful they make the case for creating a permanent team to further product development   Self organising teams are a really great organisational enhancement driven by the advantages for microservices   Another common name for self organising teams is Guilds  It s a term popularised by Spotify as part of their organisation structuring methods   Learn more about Spotify s model here    What Success Looks Like  Zero to production in hours or days  not weeks or months  Migrating a running business from one platform to another can be a long and arduous process  The measure of success should not solely be judged on reaching the end of that process but the goals achieved incrementally along the way   Revisiting the problems discussed earlier on   Slow development process Cross team coordination Brittle monolithic software  Even while working on the migration  all of these issues should more than likely be solved  Microservices offer a form organisational speed  scale and agility via distributed systems technical architecture   The monolith application is decomposed into a number of smaller applications that can be worked on and released independently by teams  They do not have to be aware of technical details of services developed by other teams but can consume them via strongly defined APIs   Teams are likely to have faster product development cycles because of this and are able to operate autonomously  Where cross team collaboration does need to occur  it can be done in a self organising fashion or by simply consuming APIs of their services   Further to that  the platform should now offer a highly available and globally scaling system which product teams can leverage without having to think about the details of building distributed systems   Success is still measured as the ability to deliver a quality product in the shortest time possible but now with an ability to scale the organisation and technology,"[408 975 1385 826 1003 17 1220 1061 320 190 1030]"
417,training-dataset/business/352.txt,business,How did Jeff Bezos scale Amazon without destroying its entrepreneurial culture How did Jeff Bezos scale Amazon without destroying its entrepreneurial culture   Running a start up is profoundly different than running a big company  When you re small  founders are close to the action and can make sure all the important things happen  But as a start up scales  founders can t have their hands in everything  many companies lose focus on the customer  decisions get bogged down  and there are hiring mistakes  We ve all seen these things happen to good start ups   Amazon s magic is that it s a behemoth of a company that still operates like a founder driven start up in several key areas  This is partly because Bezos has a strong cultural influence throughout the company  But  he also developed some unique tools to institutionalize his core values in the company  For example   1  Customer Focus  Amazon has a unique product development process  before starting any new project  the product manager writes an internal press release  announcing  the product  This working backwards approach helps the team fully understand the product s value proposition to its customers  e g  what problem is it solving   A former director at Amazon described the approach this way   We try to work backwards from the customer  rather than starting with an idea for a product and trying to bolt customers onto it    If the team can t come up with a compelling press release  they either need to refine their thinking or maybe the product just isn t worth making in the first place   While distilling the customer needs and benefits in a concise press release is a great exercise  there s still the question of how the product team come to truly understand these customer needs and challenges  Amazon keeps managers close to the customer by having them regularly work customer service  We had a similar policy at AbeBooks   2  Organization  Amazon s Two Pizza rule is pretty widely known  if a project team can eat more than two pizzas  then it s too large  This means they break up a big project into smaller projects  where the smaller project teams can stay nimble and be less subject to complex governance   The supporting piece is that every product at Amazon should have an API  just as if it were developed for an external client  This decouples the speed of development between different product teams  and offers a clean hand off between the two  Its Bezos  vision of a decentralized company where small groups can innovate and move quickly independently of everyone else   3  Hiring  When a company reaches the scale when it s no longer possible for the founder to be hands on in each decision  it better have good people in place   Early on  Bezos implemented  bar raisers  at Amazon  These are Amazon employees who are skilled evaluators and interview job candidates  Bar raisers can veto any candidate  even for positions that are completely out of their area of expertise  Bezos has said this program helps weed out the  cultural misfits  at Amazon and makes sure the company makes good hiring choices by forcing several diverse employees to sign off on a candidate   Another important hiring tactic is Amazon s ability to keep acquired founders on board  For example  Mike George joined Amazon in 1998 through Junglee s acquisition  He has since become Bezos  go to person for many new initiatives  he launched the marketplace  ran payments  and is now heading up the Alexa unit   Keeping acquired founders on board is particularly tough  someone founds a company because they want to be a leader  not a follower  Entrepreneurs have a difficult time when the acquiring company tries telling them how to run the business they have created and grown  Amazon has been successful at keeping founders around by giving them lots of latitude   For founders of early stage start ups  you may be thinking more about getting your product out the door or acquiring your first 1 000 or 100 000 customers rather than any challenges associated with scaling  But some of these tools can be really important early on  20 30 employees   It s never too early to start thinking about implementing the right processes and tools that will help your company grow without losing its focus,"[417 430 19 1061 296 826 190 76 17 962 395]"
429,training-dataset/business/640.txt,business,The Failure of Coin   Bolt BlogThe Failure of Coin  A few weeks ago news broke that Fitbit purchased most of the assets of Coin  Existing Coin cards will continue functioning until the battery gives out but no additional units will be produced  For those of us that were early adopters of the company s digital credit card  Coin s failure comes as no surprise  Their first generation product was widely criticized   While first generation products are always plagued with bugs  fail whales  and even the occasional mass recall  most companies can bounce back from these setbacks  They build great customer support teams  release version two  and turn unhappy customers into believers  So with all the venture dollars and a talented team  why wasn t Coin able to overcome   Every startup is a constant struggle to manage and mitigate risk  When it comes to hardware startups  there are two types risk that are manageable on their own  but when combined often spell failure  technical risk and product risk   Technical Risk  Nearly all hardware products have some element of technical risk  a chance you won t be able to deliver the product due to engineering or manufacturing constraints  Coin s product had immense technical risk  Traditional magnetic cards are manufactured from laminated 0 76mm thick PVC with a two or three track fixed magnetic stripe  Now imagine cramming a battery  bluetooth radio  physical button  e Ink screen  screen controller  microprocessor  and electromagnetic transducer into the same mechanical form factor  The fact that the Coin team was able to overcome this technical risk and ship a product at all reflects immense engineering prowess and vision   Product Risk  While most investors understand technical risk  few think about what we at Bolt call  product risk   Product risk is the possibility that a product will fail to live up to the expectations of a consumer  The easiest way to understand this is to inspect the user experience when the product fails  Either it s not that big of a deal  low stakes failures  or it cripples the user experience  high stakes failures   If your product is low stakes failure  it has low product risk  If your product is high stakes failure  it has high product risk   Low Product Risk  Most products we buy have low product risk  These are products that routinely fail in small ways  and whose failures are viewed as mere annoyances  Fitbit may count 95  of your steps but if it s a little off here and there few people notice  If your Roomba misses a spot in its daily vacuuming routine  it s not a big deal  Alexa may mishear you once in awhile  but usually we chuckle at the funny interpretation and enunciate more clearly   High Product Risk  I bought a Coin under the promise I would be able to carry just one credit card  so when my shiny new Coin arrived  I emptied my wallet of all other credit cards and headed straight to my local coffee spot  I was feeling pretty slick when the barista commented on how cool the card looked  but when it failed to swipe I quickly moved from cool early adopter to embarrassed dork unable to pay for a  5 latte   Over the next ten days I tried to use my coin 54 times  It succeeded a mere 28  Even if that first use was the only failure and the other 53 times were smashing successes  the nervousness I felt every time I handed my Coin over to be swiped made the experience negative every single time  A credit card needs to work every time  if it doesn t  it causes a huge amount of pain   Lots of other familiar hardware products fall into this category  I bought a smart lock to avoid carrying keys  The experience when it worked made me smile every time  But a few weeks into my automagic door unlocking bliss  I came home to a smart lock that refused to connect to my phone  I reset bluetooth  restarted my phone  and even re downloaded the app  all to no avail  I was stuck outside my apartment at midnight with no keys and no hope of unlocking the door  I was forced to wake up my neighbor  walk through his apartment to get to the back of our building  and sneak in through an unlocked kitchen window  Now I worry my smart lock won t be so smart every single time I approach the door,"[429 1061 116 826 190 1030 829 1097 975 389 1093]"
430,training-dataset/business/80.txt,business,How Amazon innovates in ways that Google and Apple can tThe Echo  Amazon s voice controlled speaker  was a big hit this holiday season  Amazon is keeping specific sales figures under wraps  but the company says it sold nine times as many Echo devices during the holidays as it did a year earlier   It s the latest example of Amazon pioneering a new product category and then going on to dominate it  Amazon has become the leader in the e book market on the strength of its Kindle line of e readers  And it dominates an important segment of the cloud computing market  Amazon Web Services is expected to generate  12 billion in revenue this year   Next year  Amazon is hoping to start doing something similar for brick and mortar retailing  The company recently unveiled Amazon Go  a convenience store whose no checkout technology could revolutionize the retail sector   In short  Amazon has shown a remarkable ability to succeed in a wide variety of different product categories  That s a contrast to most other high profile tech companies that are really good in one area   Google s dominant online services or Apple s extraordinarily profitable hardware   but struggle when the quest for growth pushes them outside their zone of core competency    There s an opportunity to do innovation in big companies   says author and startup guru Eric Ries   But very few big companies have done this really well  Amazon is one of them    Amazon has figured out how to combine the entrepreneurial culture of a small company with the financial resources of a large one  And that allows it tackle problems most other companies can t   Most tech companies struggle outside their comfort zones  Google created or acquired a remarkable string of hit products during the 2000s  including Gmail  Google Maps  Google Docs  YouTube  Android  and Chrome  These products have a lot in common  Most are online services like Google s original search engine  The two major exceptions   Android and Chrome   are software that help people access Google s online services   During the 2010s  Google has gotten more ambitious  funding a series of  moonshots  that aim to solve big technology problems far removed from the company s traditional focus on online services  Indeed  Google co founders Larry Page and Sergey Brin felt so strongly about this mission that they re organized Google itself  creating a new parent company called Alphabet to serve as an umbrella for moonshot projects   But so far  Google has had little to show for these efforts  Google Glass was a flop  The company has developed some impressive self driving technology over the past six years but has still not turned it into a commercial product  Google bought Nest in 2014  but the company has struggled to expand beyond smart thermostats  Google acquired some robotics startups in 2014  but hasn t figured out what to do with them and wound up putting one up for sale   One of the big problems here seems to be that Page and company are a little too focused on solving hard technical problems  Creating a new computer platform around a pair of glasses is a hard and interesting technical challenge  for example  But it was never clear that solving it would produce to a viable product   Google s most promising  moonshot  is its self driving car project  which is widely regarded as the technology leader  But top engineers on the project have grown impatient with the company s slow pace in getting to market  A team of Google engineers left Google to found Otto  a self driving truck company acquired by Uber earlier this year  The leader of Google s self driving car project  Chris Urmson  recently quit to create a self driving car startup of his own   Similarly  robotics is an important area of computer science research  But it was never clear what Google was going to do with a menagerie of robot startups  The thinking seemed to be that Google would acquire the best talent first and come up with a plan to make money later   Of course  it s possible that Google s self driving car project or one of the other moonshots will produce a spectacular business success that will justify the costs of the other failures  But so far  at least  Google s efforts to branch out into markets other than online services haven t borne much fruit   Amazon focuses on meeting user needs  Google s approach   solve the hard technical problems first  worry about the business model later   is rooted in the engineering background of Google Founders Larry Page and Sergey Brin  In contrast  Amazon CEO Jeff Bezos spent almost a decade working for several Wall Street firms before starting Amazon   a background that gives him a more pragmatic outlook that s more focused on developing products customers will actually want to pay for   Bezos has worked to create a culture at Amazon that s hospitable to experimentation    I know examples where a random Amazon engineer mentions  Hey I read about an idea in a blog post  we should do that    Eric Ries says   The next thing he knows  the engineer is being asked to pitch it to the executive committee  Jeff Bezos decides on the spot    A key factor in making this work  Ries says  is that experiments start small and grow over time  At a normal company  when the CEO endorses an idea  it becomes a focus for the whole company  which is a recipe for wasting a lot of resources on ideas that don t pan out  In contrast  Amazon creates a small team to experiment with the idea and find out if it s viable  Bezos famously instituted the  two pizza team  rule  which says that teams should be small enough to be fed with two pizzas   Ries says that new teams get limited funding and clear milestones  if a team succeeds in smaller challenges  it s given more resources and a larger challenge to tackle   But Amazon doesn t spend too much time on internal testing   They prioritize launching early over everything else   one engineer wrote in an epic 2011 rant comparing Amazon s culture to other technology companies  Launching early with what Ries has dubbed a  minimum viable product  allows Amazon to learn as quickly as possible whether an idea that sounds good on paper is actually a good idea in the real world   Of course  this method isn t foolproof  Amazon has had plenty of failures  like its disastrous foray into the smartphone market  But by getting a product into the hands of paying customers as quickly as possible and taking their feedback seriously  Amazon avoids wasting years working on products that don t serve the needs of real customers   This seems to be the approach Amazon is taking with Amazon Go  its new convenience store concept  It s a technology that could work in many different types of retail stores  but Amazon s initial approach is modest  a single  relatively small convenience store  Media reports suggest that Amazon plans to open 2 000 retail stores  but the company disputes this  The Amazon way  after all  isn t to open one store because there s a plan for 2 000  It s to open one store and then open thousands more if the first one is a big success   Why big resources often don t lead to innovation  In the abstract this approach   minimize bureaucracy  start out with small experiments  expand them if they re successful   sounds so good that it s almost banal  But it s surprisingly difficult for big companies to do this  especially when they re entering new markets   Over time  big companies develop cultures and processes optimized for the market where they had their original success  Companies have a natural tendency to establish uniform standards across the enterprise  When I spent a summer as an engineering intern at Google in 2010  much of my time was spent learning how to use the company s powerful suite of proprietary software tools  Google employees are expected to use these tools across a wide variety of projects  That approach works great when it s creating a new online service that s similar to early hits like search or Gmail  But the tools can become a hindrance if a Google team is trying to build something that s very different from a search engine   You can make a similar point about Apple  The company is famous for its elegant user interface  a reflection of the central role of designers   rather than engineers or project managers   in the company s development process  That s a good way to develop user friendly gadgets like the iPhone or Apple Watch  but it doesn t necessarily work well for other product categories  Apple struggled for years to make its iCloud service  and predecessors like  Mac and MobileMe  reliable   In contrast  Jeff Bezos has been fanatical about letting teams operate independently of one another   It doesn t matter what technology  teams use at Amazon  one of the company s former engineers wrote in 2011  Bezos has explicitly discouraged the kind of standardization you see at companies like Google and Apple  encouraging teams to operate independently using whatever technology makes the most sense   Bezos has worked hard to make Amazon a modular  flexible organization with a minimum of company wide policies  That has made Amazon s internal culture somewhat chaotic and balkanized  An engineer on one Amazon project can t easily jump to another the way they can at Google or Apple  Friction between teams with different cultures may explain why some people find Amazon a stressful place to work   But this chaotic culture is also hospitable to innovation  A new team can use the tools and processes that make the most sense instead of feeling pressure to conform to company wide standards   Amazon is well positioned for the next decade of innovation  The reason Amazon s organizational choices are significant is that there are a lot of opportunities for big companies that can emulate the best characteristics of a startup   Amazon Go is a good example  It s hard to imagine a small startup pulling this off  The technology that makes the store work   using cameras and other sensors to track a customer s every step and instantly detect when he takes an item off a shelf   is a sophisticated feat of computer science that undoubtedly cost millions of dollars to develop  To recoup those investments  Amazon is going to have to spend years   and millions more   opening stores in an industry not known for its fat profit margins  That requires the kind of deep pockets and longtime horizons that startups rarely have   Back in the 1990s and early 2000s  the high tech frontier was on the web  Scaling a website from hundreds of users to millions is technically challenging  but it doesn t necessarily require a huge team or a ton of physical infrastructure  That s why companies like Google and Facebook grew from nothing to billion dollar companies   In contrast  the next generation of innovations is likely to be more tied to the physical world and to conventional industries  apartment sharing  self driving cars  retail stores  health care innovations  and so forth   Google  Uber  Tesla  and conventional car companies are all working on self driving technology  To succeed in this market  companies are going to have to bring together software  hardware  sophisticated maps  and a strategy for navigating complex regulatory issues   a combination that could be too difficult for an independent startup to manage   Amazon and Google are both working on drone delivery technology  which has a similar mix of hardware  software  and regulatory challenges  The companies  existing financial  technical  and lobbying infrastructure will give them a big leg up in these markets   One way to deal with the conundrum is for big tech companies to acquire startups early in their growth  That allows a startup s innovations to be combined with the resources of a big company  Uber acquired the self driving truck startup Otto less than a year after it was founded  GM paid a billion dollars for the self driving car startup Cruise in March   But acquiring fast growing startups is a very expensive way for a big company like Google or Uber to stay on the cutting edge  And in many cases  this strategy doesn t even work  Google s  2 billion acquisition of Nest was supposed to accelerate the company s growth  but instead the company has struggled under the Alphabet umbrella   This is what makes Amazon s evident success at nurturing entrepreneurial projects internally so significant  Amazon doesn t need to rely so heavily on expensive and risky acquisitions because it has developed a system for nurturing entrepreneurial projects internally  And as technology invades the real world  there are going to be more and more opportunities for these kinds of entrepreneurial projects   Disclosure  My brother works at Google,"[430 417 1061 19 977 408 826 190 829 1097 1339]"
441,training-dataset/product/807.txt,product,Why Continuous Delivery and DevOps are Product Managers  Best Friends444 Flares 444 Flares    In the first part of this series  I explained what these buzzword y  Continuous Delivery   CD  and  DevOps  things are and started to touch on why you should care  But really  why should you care about these practices  Here s why continuous delivery is a product manager s new BFF   Continuous Delivery is Transformative to Businesses  The main reason you should care about CD and DevOps is that it is transformative to businesses  Time and time again  organisations you admire  which produce products people love  reveal that they are doing Continuous Delivery and or Continuous Deployment  and have a DevOps culture  Some good examples of companies that do this would be Etsy  Netflix and Amazon   But CD and DevOps have not just helped Silicon Valley darlings to get big  CD has helped transform organizations all over the world  The Guardian is a great example of an older business who embraced the benefits CD brings by moving from a bimonthly release cycle to making tens of thousands of automated deployments a year  And the benefit for them    What has been transformative for us is the massive reduction in the amount of time to get feedback from real users    Likewise  teams at Expedia embraced CD  and within the first three months of using the new practices  they were able to run more experiments on their site than in the entire previous year  This ability fueled increased conversion rates  and led to significantly improved business performance   And these examples are not outliers  my friends  oh no  In the 2014 State of DevOps report  Puppet Labs asserts with confidence that    high IT performance correlates with strong business performance  helping to boost productivity  profitability and market share    Likewise in the 2015 paper by Jez Humble and Nicole Forsgren  after analyzing data from the thousands of companies surveyed by Puppet Labs  they were able to conclusively show that    IT performance positively affects overall organizational performance    This means that if you can up your IT and delivery game  you can up the game of your whole organisation   So there you have it  That s the big  meaty   you should totally do it   justification screaming at you  Share it with your manager and your manager s manager   Why Does Continuous Delivery Matter to Product People   But how will the product manager  the marketing lead and the support gurus out there see the benefit of these practices in their day to day work lives  Let s find out   It Will Help you Get Feedback Sooner  The main reason I love to deliver continuously is to get product feedback and validation sooner  The moment a new product or feature gets delivered to your customers  you start to get real feedback  Yes  there are a bunch of things you can do to test ideas before this with interviews  mockups  prototypes and user tests  I love these practices too  and I am not advocating  build it and they will come   Yet there is nothing like the rubber hits the road feedback you get  having pushed a new feature to production  to really learn if it achieves what you hoped it would   or not   It Increases Responsiveness  When your team can deliver each and every build to production  you get to choose if each and every build goes to production  That means the time to market for the feature your customer asked for last week is  theoretically  just the time it takes to build and test it  If an idea is your top priority  why would you want to wait before delivering it  With CD  you don t have to  No longer do you need to say  It s built   and will be released in December   unless you actually want to  Instead you get to say   The team pushed that to production while we were meeting  What do you think    This responsiveness works in a million ways to help you  the product manager  When the next Heartbleed bug comes out  you can get a fix out before lunch  When your startup s biggest customer needs a change  you can get it done and deployed overnight  Or let s say your once great but slowly fading industry giant is being killed by small  lightweight  agile competitors  and you re in charge of delivering value to customers this quarter  Let CD be your friend  It will help you solve problems quickly  fix issues as they occur and stay on top of customer needs   It Reduces Waste and Risk  and Saves Money  I would need numerous hands to count the number of times I have seen product managers and clients add scope to a release  horde bugs  or refuse to deliver an MVP because they thought the next release was the only chance they had to complete a feature  Just last week a friend of mine at a well known healthcare company said    We missed the May release train  so we go live in December  And that means January because of holidays  so we re just doing some extra stuff until then    Seriously  they are just  doing some stuff  for 10 months while they wait for the release train to pull into the station  And I bet they re not the only ones   If you re not following me  here s another example of what happens when you have to wait to release   Imagine you have an app store and you want to test out whether a ratings and review system helps users find the best apps on your store  If you are delivering continuously  you could start with a simple  thumbs up  feature   User gets apps they like and so give a  thumbs up   Does this solve your problem  If yes  sweet   you are done  Next problem please  If no  then let s see if a five star system is better  Or reviews  Or scores out of ten   Continuously Deliver Small Chunks of Value  If you can deliver value incrementally and iteratively  you can deliver less at each stage  get to the right solution faster and get better ROI on your investments  If you weren t delivering those features regularly  I bet you that you would design  develop and deliver a whole five point rating systems with user reviews  Then when you were thinking about reviews  you d realize that you need to run them through a moderator  or remove blacklisted words so the reviews don t have profanity in them  Suddenly you re building the world s best text moderation tool  and all you wanted to do was show users which apps were great and which were terrible   In this way  and by avoiding traps like those I outlined above   CD reduces waste  It saves your business from building stuff it doesn t actually need  allowing you to focus on value  It helps you meet customer needs sooner  It helps you to quickly understand how your product strategy is working  It helps you get ahead of your competitor more quickly  It will help you with your  business hat  on  not just your  technical hat    It Facilitates the Creation of Higher Quality Products   Quality is everyone s responsibility  One of the significant benefits of CD is that it gives better visibility to everyone associated with a software project of the state of that project and so anyone can react to something that doesn t look quite right      Dave Farley  co author of Continuous Delivery  Although this might not be something you think about all the time  service quality is as important a  feature  as the actual code or tangible products you deliver  If your releases never result in a downtime  if your software is always available  if users never find a bug  then your customers  opinions of your software will be higher  your referral rates will be higher  and you ll have won your market   It Leads to Releases That Are Sane and Calm  CD really does make releasing boring  My previous team complained to me that we hadn t had a release celebration lunch for months  And it wasn t because we weren t releasing   we released everyday  It was just that we hadn t had that adrenaline fueled 24 hour period of  We will we get the feature out on time   intensity followed by an evening unwinding in the pub that is often associated with a software release   When you get into the habit of releasing  it becomes a simple part of how your team works  At 4 p m  every day  our teams asks each other  what is ready to deliver    The product team  marketing lead and support team discuss the implications of what s ready  and they decide if they want to release or not  It s that simple   You ll remember from the first post that this choice is one of the key differences between continuous delivery and continuous deployment    If the product manager wants to build a little more feature  they do that  If they want to test it with a few users first  they do that  If the marketer chooses to wait for PR reasons  they can do that instead  And if the support team says they need a particular fix for one high value customer  it goes out  Calmly   It Makes For Better Teams  As discussed in the first post  DevOps is about culture  In order to get these practices right  people need to collaborate  meaning work together  break down silos  share goals and act as a team  As you can imagine  there are many side effects of the push to DevOps that make your team function better  As shown in the scenario above  because you are talking about deploying every day  you are likely to be talking about quality every day  as well as delivering value to customers   The more the team centers around these fundamental qualities of your software  the better the software is likely to be  Likewise  when team members are not siloed  they understand each other  and each other s work  better  The less they are feeling the individual burden of a deployment or bug fixing or a release test cycles  the more time they have to participate in team activities  share feedback  and help the whole team reflect and grow  It s warm and fuzzy  and maybe even sounds idealistic  but it s true in my experience   Too Good to Be True  Alright  I ll stop here  Honestly  there s actually more reasons that I can think of as to why I want you to embrace CD practices  but I don t want to sound over zealous  And I have to say  it won t be easy  Transitioning to a continuous delivery and DevOps culture is not all sunshine  unicorns and rainbows  It s hard work on the part of your engineering and operations staff  And you  You product people have got to work hard to get this change done  When you move to this way of working  expectations change  your way of working changes  you have to change  But when you do  the payoff is immense   Stuff You Should Probably Read,"[441 1371 116 1030 1146 17 1061 1339 190 296 1276]"
457,training-dataset/product/677.txt,product,4 ways to deliver better product analyticsAnalytics is a way of transforming data into insights  Great analytics goes one step further and ensures that these insights are always used to inform decisions   Over the past year  the product analytics team and I have been working on four key areas that have vastly improved our ability to deliver great analytics across Intercom   So whether you re a seasoned leader hoping to improve the effectiveness of your existing analytics team or an individual just starting out on your own analytics journey  the following might also benefit you   1  Foster a culture of open feedback  For analytics to inform and drive decisions that directly affect your product  there needs to be absolute trust in the analytics and the insights derived  Great analytics teams create processes to facilitate and increase that trust  Here are two ways you can do that   Use blameless postmortems   If one analyst is using one piece of terminology  and an engineer is using another  you ve got a problem   Make mistakes and slip ups an opportunity for learning  Understand why and how incidents occur but more importantly  how to prevent similar mistakes from happening again   For example  when we notice that something has gone wrong   a broken dashboard  an issue with tracking or bad data   we fill in a postmortem doc outlining what happened  how the issue was resolved and what lessons were learned  We then hold a meeting to discuss the postmortem and brainstorm how to prevent something similar happening again   These postmortems have resulted in concrete learnings and a number of key action items  such as introducing a new peer review process   Create feedback loops   Create ways to provide feedback on the queries code of teammates  We use a peer review process based on GitHub  Any technical effort  SQL query  python code  that s used to produce an analysis that s shared outside of the team has to be reviewed by someone else on the team   After a few months  we now have a central repo of reusable queries  whose quality and efficiency have greatly improved  We also have a weekly  team understanding  meeting where people are encouraged to present something they are working on in an informal way   an analysis that s in flight  or a visualization they want input on  etc   Allowing everyone to give open  honest  thoughtful feedback will help your team to collaborate and coach one another  and make everyone s overall work better in terms of quality and impact   2  Develop close partnerships  The foundation of a successful product analytics team is close partnerships with the product teams they support  There needs to be a shared understanding and context between these two worlds   This has a lot to do with how your analytics team is organized  There are multiple ways to organize and structure an analytics team  Two popular models are centralized or embedded,"[457 1030 1146 955 17 949 116 363 76 1003 1241]"
458,training-dataset/business/1407.txt,business,OKRs are Old News   Introducing Goal Science ThinkingIn the mid 1980s  Andy Grove at Intel and Gary Kennedy at Oracle started playing with traditional models for setting goals at companies  What they developed became known as the Objectives and Key Results or OKRs system   since tweaked and made famous by Google  which still faithfully practices it today   For a long time it was the latest and greatest in company planning and alignment  if you re not familiar  you can get an overview here   But now something new is emerging  Goal Science Thinking   It s an approach that uses OKRs as a foundation and turbo charges them by applying human behavioral psychology  increasing engagement  and enforcing regular practice  Essentially  it leverages all the tricks and hooks we mortals use to stick to good habits   only re imagined to help large teams stay on top of business targets   All of this is the province of a company called BetterWorks  headed up by CEO Kris Duggan who takes the term  dogfooding  to an entirely new meta level  Devoted to creating goal tracking software at the cutting edge of these trends for companies like Kroger  Pact and AOL  BetterWorks uses its own product to set goals to build an even better product  And it s grown tremendously in the process   adding nearly 50 new employees in just the last year  putting the scaling abilities of its software to the test   In this exclusive interview  Duggan shares how Goal Science Thinking can make your company s objectives more data driven  collaborative  and ultimately more successful as a result  Along the way  he surfaces some surprising data around how humans set and pursue goals  and why we need a new norm to truly do our best work   BY THE NUMBERS  The BetterWorks team has done its research to show how goal setting impacts companies  Here are some of their more fascinating findings   Organizations that use formal goal setting exercises are 3 5X more likely to be in the top tier of financial performers every year   Only 7  of employees report fully understanding their company s business strategies and what s expected of them to help achieve company goals   The average employee can only work toward 3 to 5 goals at a time   Only 1 in 2 senior leaders revise their goals throughout the year   1 in 3 manager level employees revise their goals in a year   1 in 5 frontline employees revise their goals in a year   So  despite the best efforts of leaders to introduce process that will connect employees to company wide goals  they re still failing  This is happening for several reasons explored in depth below  The opportunity is clear  but the execution needs help   CONSISTENCY   VISIBILITY  It s telling that 100  of employees at BetterWorks participate in goal setting and remain actively engaged with their goals even between check ins and reviews  The system they have in place maximizes for consistency and visibility   Everyone at the company can view everyone else s goals  There aren t any secrets or hidden agendas  Hierarchy has been banished   allowing direct reports to view their manager s goals and even those of managers on completely unrelated teams   Interestingly  BetterWorks found that people view their supervisor s goals 20  more often than their own  Obviously there s appetite for this kind of knowledge and transparency  In older  more traditional systems  this wouldn t have been possible  Only managers could have reviewed reports  goals down through the chain of command   Making goals visible to everyone is a necessary condition for consensus and alignment in an organization   In order for a goal to be effective  i e  for there to be any chance of it getting accomplished  it needs to be drafted and owned by an individual  reviewed by a manager  and tracked by both  If true transparency exists  you ll know because your goals will connect to but not conflict with your manager s goals  the company s overarching goals  and your peers  goals across teams   One of the big differences between OKRs and Goal Science Thinking is that  in the latter  goals can have multiple contributors from across different teams and departments  For example  Duggan might be a contributor on a goal for his head of communications to land a number of articles about the company  Sales has to work with marketing to nail their messaging  Marketing has to work with engineering to truly understand the product  Visibility allows this level of collaboration to not only happen  but be documented and monitored    We always see better performance on goals with cross functional contributors   says Duggan   Goals that are public for the entire company to see get 10 4  more check ins than private goals    On top of that  people can easily identify themselves as contributors for the company s big goals every quarter  Everyone talks about how individual OKRs should roll up to the company s major objectives  but the link between them remains invisible  BetterWorks has seen how powerful it is for someone to go through the motions of clicking a button  saying their work contributes at the highest level   It s important to note you don t have to use BetterWorks to build this type of functionality into your goal setting  It can be something as simple as a Google Doc listing the names of all the people whose work feeds into the company s itemized aspirations   Consistency is also vital  BetterWorks recommends setting goals once a quarter and involving the entire company in the process so they end up with a balance of top down and bottom up priorities  Duggan gives the company a week to develop their own goals and suggest ideas for the company at large   Behavioral scientist Gary Latham found a while back that stakeholders who participate in goal setting end up doing better against those goals  This should be the aim of every company   Quarterly conversations  however  are few and far between  So  on a monthly basis  BetterWorks  leadership takes an hour to do a deep dive together and review progress against company quarterly goals    For anyone who makes a point of setting goals  there s always the danger of setting and forgetting   in fact  most people do   says Duggan   You have to be incredibly regular in viewing them  assessing them  and measuring progress against them to stand any chance    Last year  BetterWorks rolled out at a large internet company with nearly 1 000 employees that was doing OKRs in a non standardized way  Some departments used Asana  Some used Google Docs  This fragmentation hurt leadership s ability to give one set of instructions around goal making  It prevented visibility and conversations about cross functional goal setting  Once they were all on the same system  they were able to create 20 000 objectives with 80 000 key results  The first quarter  they saw 60 000 views on goals not by the goal owner   in other words  people were looking at about 12 goals they didn t own in a quarter   The motivation to see what your colleagues want and need is there  they just need a central  consistent tool   One of the easiest triggers to put in place to enforce both visibility and consistency concerns one on one meetings  It makes sense that both parties in the meeting would want to see and understand each other s goals  That way they could provide more tailored feedback  help monitor progress  and also better grok how to help and support each other  To get all these benefits  make it a company wide practice that everyone reviews each other s goals prior to one on ones    It prompts a really important conversation about how things are going  how people might be blocked  and how others around them can help remove these roadblocks for them   says Duggan   Goals should be pulled up both before and in every single one on one    BUILDING  GOAL MUSCLE    Some companies have really good task muscles   they get a lot of small stuff done all the time and get to feel really productive   but their goal muscles are really week   says Duggan   They don t have the deliberate intention and direction behind all this activity  If this is your company  you ll be as off balance as a bodybuilder with huge arms and tiny legs    The best way to build  goal muscle    that is  the regular and effective use of goals to accomplish top priorities   is through constant  relentless re engagement   According to BetterWorks  goals that owners have checked 10 or more times over the course of a quarter are 21  more likely to be attained than those checked only once or twice  It s worth baking in mechanisms to force regular engagement   The most powerful of these tools is social reinforcement  No matter what system you re using to record and track goals  it s highly recommended to make it possible for people s colleagues to comment and provide regular feedback on each other s objectives and key results   These comments can be questions  constructive criticism  praise  encouragement  It doesn t matter  What does matter is that it will incentivize people to come back to their goals again and again simply to see what people are saying  Ideally  you can hook up notifications over Slack  push  or email to give folks a nudge    There s an experiment where people are told to write down their goals  share them with a friend  and then send weekly updates on their progress to that friend   says Duggan   These people were 33  more successful in accomplishing their goals than their peers who simply wrote them down    Recognition of any variety is massive for prompting action  Every time someone comes back to their goals to see a comment or even just a thumbs up from a colleague  they ll review what they wrote  think about the status of their projects  and up their efforts   BetterWorks takes this hunger for recognition one step further by actually rewarding employees that engage socially around goals  For example  at the end of every quarter they hand out awards to people with the most check ins on their goals  for the most comments made on others  goals  etc   One more bonus way to leverage social dynamics  Encourage your most influential team members to set ambitious personal goals and invite their co workers to join  At BetterWorks  an engineer created a goal to do 20 000 push ups during the quarter  and sent out an email saying others could donate push ups toward this total if they wanted in on it  Over 10 people signed on to contribute to his goal  and altogether they did 24 000 push ups   exceeding the original goal by 20   Now similar goals have been created around sit ups  biking  and catching Pokemon   Personal goals are inherently emotional  foster empathy  and compel a different level of interest than one might have in business goals  By encouraging them throughout your company  you re giving people incentive to connect more often and on a deeper level with their colleagues  It doubles down on the practice of collaboration on goals  and will also get people to revisit their own more often   The other mechanism for building  goal muscle  is to get people addicted to seeing progress    The quantified self movement   all these activity trackers like FitBit and Jawbone   have proven that people want to get frequent  measurable  visual and   this is key   graphical feedback   says Duggan   When individuals get this kind of positive  visual feedback  it literally shapes their behavior to take a more measured and consistent approach toward their goals    Let s say you can t afford software that will give your team fancy progress bars to look at  That s okay  You can still give them a visual emblem of how far they ve come  It might just be an ever lengthening list of completed projects and tasks  Maybe it s a spreadsheet where you turn completed rows green  Whatever it is  you need a user friendly  easily digested representation of accomplishment as part of your goal system   When people have the ability to move the needle on their progress  and see it happen  the pleasure center in their brain lights up  The same part of the brain that loves seeing retweets and Facebook likes  If you give them the ability to easily chart their progress this way  they ll do it frequently  be reminded of their goals even more often  and get more done as a result   Sculpting employee behavior like this doesn t happen overnight  You can t expect to give them social and progress tools and have everyone fall in love with your goal setting system right away   Give yourself 2 or 3 months to really build up the goal muscle that comes from increased engagement   says Duggan   Start with your executive leaders so they can set a positive example  Tap  goal masters  who are enthusiastic about the system to evangelize and teach others through the ranks  You ll see people convert    THE 30 DAY JUMP START  Home to early adopters who like to play with new products  startups tend to test out a lot of tools that never quite take hold and eventually get abandoned  This happens too often with goal related tools when stick to itiveness is the whole ball game  But  as Duggan s found  people keep using the tools they were first introduced to when they started a job    If you have an app or a product that you want to make a permanent cultural touchstone  integrate it big time into your onboarding process    In BetterWorks  case  they use their goal software to fast track new hire productivity  while also making goal setting a default for them from the start   Honestly  the thing that keeps me up at night is how can I get my new hires to be productive   Duggan s onboarding fanaticism has manifested in what he calls the 30 Day Jump Start   It kicks off when the hiring manager sends a welcome email to their new hire  Sure  it contains some intro info  bios of folks on the team  etc  But it also invites them to immediately create a goal using the BetterWorks software   a goal that they plan to accomplish in their first 30 days   complete with key results and milestones   They re asked to be aggressive    Doing their part  the manager quickly comments back  both praising and providing feedback on the goal the employee created  This gets folks in the rhythm of commenting and reading comments on their objectives  It also establishes a clear line of communication and expectations between employee and manager    This kicks off a healthy conversation about what  crushing it  at our company looks like in the first 30 days   says Duggan   In my experience  demonstrating what success looks like is the quickest way to get someone oriented within a company    This process initiatives new hires into the way BetterWorks likes to communicate  For instance  studies have shown that framing goals positively leads to greater achievement  Instead of stating your goal as   Try not to miss more than 3 out of 15 questions   you should word it as  Try to correctly answer 12 out of 15 questions   This prompts people to try their best  not simply avoid failure   language has a critical impact on outcomes  even if it seems nuanced   On the same wavelength  this is why people are pushed to create stretch goals  Proactively reaching out for more promotes higher performance  even if it doesn t all work out  As long as an employee has defined the goal for themselves  is capable of achieving it  and doesn t have any conflicts  there tends to be a positive linear relationship between difficulty and work quality   To make goal setting at your company work  the bar always has to be 100  participation  Starting at onboarding is your most powerful move in this direction  But it also takes rigorous practice going forward  Google s been running a variation of this system 4 times a year for 17 years  and it s still not perfect    Goal science is just a tool   not a religion   says Duggan   But if you do it right  it can have some pretty transformative effects on your business and how you get incredible results,"[458 333 250 503 1030 769 1061 116 17 19 190]"
497,training-dataset/business/204.txt,business,How Our Remote Marketing Team Collaborates Across 6 TimezonesIn the past when our marketing team was only two or three people  it was easy to work on projects together  Finding time to meet and discuss was also easy  as we only had to coordinate between a few people and we were in fairly close timezones   In the past year  our marketing team has grown from a team of four to a team of eight  yay    Timezones are mildly more of a challenge now that we are based all around the world   from the West Coast in the US to the East Coast in the US to Canada  to the UK  to Singapore   We don t let remote work halt any productivity  so we d love to share how we communicate  collaborate and get results  To truly reflect our team s strategies and thoughts  several members of our marketing team have contributed the sections below    From left to right and top to bottom  Spencer  Kevan  Brian  Bonnie  Hailley  Arielle  Ash  and Alfred    How we work across 6 timezones  by Alfred Lua  Content Crafter  It s hard to find a common time in eight calendars across six timezones when everyone is free and awake   For example  people in Singapore are usually going to bed when the people in the U S  are just starting their work days    Our solution  Asynchronous collaboration   Here are a few of the ways we typically collaborate asynchronously   Using Discourse to kick off an idea when others might be sleeping  When there s an upcoming marketing launch or when someone has an idea for the team  she or he will kickstart a conversation on Discourse for us to riff on the idea and share early thoughts   Here s an example for this blog post   Other projects we have worked on together include   When collaborating as a remote team  it is key for one person to own the project and guide the team  It doesn t always have to be the manager of the team  i e  Kevan Lee  our Director of Marketing   Any of us on the marketing team can kick off and lead a project  and several of us have   Using a tool like Paper or Trello where everyone can track progress  If we want to move forward with the idea after it s been kicked off in Discourse  we will move our discussion to a Dropbox Paper document  if it requires a bit more writing  or a Trello board  if we re tracking progress more closely   We all work on our own tasks when we re online and coordinate in the Paper document or Trello card if we need to leave updates or ask questions   Using our themed content week as an example  Brian and Hailley worked together on the podcast while Arielle amazingly handled the  bufferchat planning herself  As much as possible  we will update the Paper document with our progress   If we have any questions  we will comment on the relevant sections and discuss asynchronously  Here s an example   We found that having a central location makes asynchronous coordination much easier  We know where to look for the information we need and how we are progressing for the project  This practice has helped us coordinate big projects such as feature launches  where we also collaborate with the Product  Engineering  and Happiness teams   Using Slack to chat quickly and Zoom for meetings  Slack is an amazing tool to keep us all connected  help us ask quick questions when another teammate is online  keep everyone up to date with the latest in social media and  all in all  be together as a team   Zoom is our preferred tool for having face to face calls for meetings  brainstorms and our weekly standup   How we build the Buffer community remotely  by Arielle Tannenbaum  Community Strategist  Being part of a well oiled remote team has been instrumental in helping us build a remote community of customers and evangelists  We re experimenting with new processes for communication all the time as a team  and it s such a cool experience to take our learnings and apply them to how we grow our community   We have over 4 million users who interact with us on many platforms   on all of our social media platforms  through emailing us  and commenting our blog  It s amazing to get to know all of them  We re found that when folks respond to our social media posts  they re looking for one or more things  to learn new information  to get better at their jobs  to grow personally  and to gain new connections   By building an engaged and active online community  we create opportunities and spaces for all of that to happen  We focus on ways to increase  many to many  interactions  so our members are constantly meeting new people and learning a lot from each other  That s where the magic happens   when community members support and teach each other   Image above is via Alex Hillman  Our community  spaces  include our Slack community  our weekly Twitter chat called  bufferchat  and occasional in person meetups and workshops in cities all over the world  We have a landing page for all of our community activities  if you d like to take a look   So how do we organize all of this remotely  Here are some of our tricks for managing these projects   Managing our Twitter chat with Respond  We aim to have 2 4 team members tweeting from Buffer s Twitter handle during  bufferchat  to interact with the hundreds of participants that show up every week  We could not do this without one of our very own tools  Respond   Respond is a robust Twitter customer support tool  taking all Twitter mentions  and tweets from search terms like   bufferchat   and organizing them into an inbox  This way  multiple team members can be responding from the same handle without overlapping on tweets  It has been a lifesaver for  bufferchat   It s our secret sauce for how we respond to all of your tweets so quickly      Setting reminders in Slack  When you manage a community of thousands  having a little bit of order can be super helpful  In our Slack community  there are several tasks that happen every week like clockwork  though it can difficult to remember to do dozens of small things  That s why the  remind  feature within Slack has been a game changer   You can use the   remind  command in Slack to set recurring reminders   we set reminders for things like welcoming new members  inviting new members  posting about a weekly event  checking stats  etc   It s meta   using Slack reminders to remind us to do things in Slack   and it saves us loads of time   Organizing events in Asana  If you ve ever planned an event before  you know that there are a lot of tasks  big and small  that go into it  When we plan our meetups and workshops in different cities all over the world  Asana is the place where we keep our dozens of to dos   This project management tool comes in handy as you can set due dates for specific tasks and assign certain tasks to teammates  so nothing slips through the cracks  There are so many moving pieces with events that it s key to have one place to keep everything   How we run the Buffer blog remotely  by Ash Read  Editor of Buffer s Social Blog  When it comes to managing the blog  we re in an almost constant state of experimentation   from the types of content we write and the ways we formulate our strategy  to how we turn an idea into a ready to publish blog post and even how we measure success   We tend to tackle most of our work on the blog asynchronously  using tools like Dropbox Paper  for drafts and planning  and Trello  for managing our editorial calendar   Here s how our Trello board looks for February   If you want to check it out in more detail  we ve opened it up publicly   Here s how we currently approach the process of creating content for our blog   For Q1 2017  we re experimenting with using content themes each month  During January we had a new theme each week   Week 1  Facebook Ads  Week 2  Social Media Goal Setting  Week 3  Social Media Teams  In February  we re mixing things up slightly and running with three themes across the whole month   Storytelling on social media  Video marketing  Instagram marketing  When deciding on a theme  we use a mix of research and intuition  Over time  we ve built up a good understanding of which topics resonate with our audience and we tend to lean on this experience for our initial brainstorm into topics  We then turn to data to validate the opportunities within each topic  The data we look at is   Google Analytics   When we ve covered each topic before  how did the content perform  Are their any older posts we can relaunch     When we ve covered each topic before  how did the content perform  Are their any older posts we can relaunch  Similar content   How have other popular social media blogs covered each topic  What specific posts and angles have performed well   We look at share count as a validation here      How have other popular social media blogs covered each topic  What specific posts and angles have performed well   We look at share count as a validation here   Keyword opportunities  Is there opportunity to rank well for relevant  potentially high traffic keywords within this topic   Once we ve taken these points into consideration  we ll decide on a topic and then break that topic down into a bunch of post ideas   We re also quite fluid with our planning  so if something big happens  we can shuffle things around and jump into whatever topic is trending in the social media marketing industry   For example  last year when Instagram Stories launched  we dropped everything to get a post out covering how the new features work and this post was viewed over 45 000 times in the 7 days after publishing  it still brings in between 500 1 000 views per day today    How this looks in action  As a remote team  the majority of the work we do on our blog happens asynchronously  Once we have a blog post idea  we ll add it to Trello  first in the  Content Ideas  column  then it ll move along each column as we get further into writing it until it s shipped  Here s what our board looks like   When we decide to write a post  we ll then add a little context to the Trello card to help share a little clarity on what some of the key points this post should talk about and cover  Here s an example for our recent Facebook Ads Images Sizes and Specs post   From here  it s time to write the draft  When writing a post  we check in for feedback at two stages  First  when the draft is  30  complete and again when it s 90  complete   We check in at 30  to chat more about structure and layout of the post and then at 90  we focus on details and copy editing  Sometimes  we ll handle all these conversations on Trello  with the draft and back and forth feedback being shared within the card for each post  Other times we ll hop on a quick video chat using Zoom to chat through feedback   The amazing thing about working across timezones with the blog is that we almost have someone working on content 24 hours a day with Alfred in Singapore  Ash in the UK and Kevan  Brian  and Spencer in the US  This feels a like a huge win for productivity      Brainstorming remotely  Here s how we do it  by Hailley Griffis  PR and Communications Specialist  One of the challenging parts of working remotely is that brainstorming might not come as naturally  Whereas in an an office the team can gather in a room  or toss ideas around at lunch  we have to be very intentional about our brainstorming   We ve experimented with different styles and types of brainstorming  In one quarter of 2016  we did a brainstorming meeting every Friday afternoon for whoever was around   While we loved gathering in one virtual place  the time didn t quite work for all timezones once our team grew  We also found that small frequent brainstorming was good for when someone was working on a project and needed another set of eyes  but the short amount of time together made it hard for us to look at the big picture   The last quarter of 2016  we had a marketing team wide brainstorm that lasted an hour to reflect on 2016 and brainstorm for 2017   First  we had to find a time when we are all awake   Here s how we structured the meeting   Quick stats to celebrate 2016 accomplishments  since this meeting was also at the end of 2016   Reflecting on 2016  20 mins  What went well  What have we learned  What could we have done differently   Looking ahead to 2017  40 mins  Ash  our social blog editor  put forward a content plan that would have us all working more closely together on themed weeks of content  so we took the second part of this meeting to brainstorm and plan this new initiative     We wanted to have a plan in place to give everyone time to speak  Here s how that worked   Everyone was asked to answer the questions for the reflection portion and add it to the doc beforehand  Everyone was asked to prep a few ideas in advance  When we all get together on our annual Buffer retreat  we can take full advantage of brainstorming in person and potentially having more room to let ideas take place organically while we are all spending time together    Here s a screenshot from that end of year brainstorm  From left to right  Spencer  Hailley  Brian  Arielle  Bonnie  Kevan  Alfred  David  and Ash   David was our Marketing Data Analyst and has since switched over to focusing purely on the Data team  though we still ask him questions frequently    There are always ways to improve our set up and systems  If you have any ideas  thoughts or pieces of advice  we d love to hear from you   Over to You,"[497 973 499 116 898 250 304 1061 17 315 1339]"
499,training-dataset/business/418.txt,business,Team Building Across Six Time ZonesWhen I joined the Buffer team  I was employee number 23 or 24  and back then it wasn t too hard to keep connected to everyone on the team   On top of our go to communication tools for video conferencing  the now defunct Sqwiggle  and group instant messaging  HipChat   we had a few systems in place to get to know each other better   including masterminds  pair calls  iDoneThis  and an ongoing doc where we shared each week s personal and work goals   Two and a half years later  and goodness have things changed around here   On top of our communication tools now looking a bit different  we went from Sqwiggle to Zoom  HipChat to Slack  among others   these days we have to work a bit harder to keep connected as a team of 80 employees all around the world   Here are some of the experiments we ve tried for team building across a remote company  and a look at even more ideas we re excited about trying in the future   How we approach team building experiments  When I transitioned my role earlier this year from community lead to internal community building  one of my biggest priorities was to explore how to bring back some of that earlier days of Buffer closeness after our massive growth in 2015  from about 30 to 80 teammates    While some of our processes had scaled during this time  many of our culture based concepts didn t quite work in the larger team  Pair calls  masterminds  our self improvements doc  all eventually fell by the wayside as they grew unwieldy   Now  the People Team  our human resources crew  has full ownership of these efforts and we re approaching things with a different perspective   With such a large team  we strive to experiment with multiple opportunities for our teammates to gather throughout the week in various ways  Our goal is to bridge across time zones and help build smaller communities within the larger company   We have many large scale and smaller scale initiatives and look to tweak one or two things each week to create a new spin  reach new people and create lasting memories   Facilitating deeper one to one connections  Pair calls  Pair calls are one experiment that has roots in Buffer s past  Each week  every team member was paired with another teammate  Pairs would chat for 15 20 minutes every day for one week before being assigned a new pair call buddy for the following week  and so on   As we grew  it got tougher and tougher for some to fit in their pair calls  In August 2015  engineer lead Niel  shared that he hadn t been able to fit one in for several weeks and asked for advice on Discourse   Here s how Leo responded   Leo shared in this post a quote from Evernote s founder that as your company grows  things change   Mikitani calls it  The Rule of 3 and 10   Every time a company triples in size   everything breaks   And pair calls just weren t quite working   So we retired them  but kept a small rotation for those in bootcamp  our 45 day trial period for new hires   Each bootcamper would be paired with a more experienced team member and this would help provide insights into their values alignment and also a safe space for the new hires to ask questions  learn about other teammates   As our hiring slowed  pair calls nearly came to extinction  And several of our team members shared that many of them missed pair calls dearly through our feedback tool  Officevibe   Nearly exactly a year later  we rolled out a v2 0 of pair calls  with the main difference that this would be opt in  and opt out at any time   and less stringent in the number of pair calls per week  1 2 vs 5 per work week    We have about 50 Buffer team members participating right now  or 63  of our total team   We used a Google sheet to mix up the pairings each week  though this ended up a bit time consuming and messy  I d also spend a bit of time looking at the vacation calendar for the week ahead to remove anyone from rotation who might be out of the office   The solution to hand randomizing  Donut Slack bot  A handy dandy Slack bot named Donut came to our rescue   Donut is simple to install into your team s Slack channel and sends out a DM to you and your pair call buddy the same time each week   Team members can easily remove themselves from the pair call rotations by leaving the assigned channel from which Donut pulls the participants  Such a time saver   Our team found this helpful and we re excited to continue with Donut   Group discussions and water cooler chats  in person and a synchronously  Working in an office allows hallway chatter to help facilitate a bit of the  What are you up to this weekend   sort of chat   One of the major benefits of remote working is the less distraction of impromptu meetings and more productive hours afforded in the day  That said  a little distraction is sometimes a good thing  especially for building strong teams   To build in some time for these  on the spot  conversations  we host two  Impromptu Hours  each week  one timed for Europe Asia Australia teammates and one for North and South America Europe folks   These typically have no agenda  though we have announced a loose topic from time to time   There s no telling who will join or where the conversation will go  from books  to movies  to game shows  to high school memories  to family fun   We encourage people to keep their microphones un muted for a more natural flow of conversation and we also remind teammates to come by as they can  even for five or ten minutes   We record and share the recordings for those who couldn t attend   Credit for this idea goes to our former teammate  Mary   Water cooler Wednesdays  For ongoing conversations throughout the week  we share a  water cooler question  each Wednesday in our Slack channel   water cooler   Every week we learn so many fun new things about our colleagues  Many of these spin off into further conversations   We track water cooler question ideas in an ongoing Paper document and reference tools like Conversation Starter Generator  Real Talk question cards  We  Connect Cards and books like this one   I use Pablo to create the image so that it stands out a bit from the Slack conversations   Question and answer sessions with the co founders  In effort to keep our growing company better connected to our awesome co founders  Joel and Leo  and ask about the most pressing issues  we crafted an event for an open question and answer time   In this  we encouraged our team members to be open and not hold back on their deepest  hardest questions  The team responded well and our co founders shared that the insightful questions later led to deeper conversations between the two of them   an outcome we couldn t have predicted   We circulated a Paper doc for questions ahead of time  and also created an anonymous Google form for tougher questions   In our first Q A  we didn t quite get to all the questions  but we saved them for the next round  and Joel and Leo responded to a few via Paper as well   Sharing team member stories across the company  We shared a bit on how we are sharing personal stories of team members with the whole company  and after a few months  we decided to re evaluate the best approach to this   We wanted to make these more readable  more dynamic and more digestible   With this  we ve tried something new every week  including   1  Shorter stories  A personal story  but more focused on one life event   This fun one is about our very own  Tom Redman    2  Guess the Bufferoo story  In our weekly email to the team with news and updates  we included a short story  but didn t give any names  or too much personal detail   and had a quiz Google form at the end to see who would guess the right answer        For curious minds  it is Patrik who happened to study archeology in college    3  Trivia Quizes  We asked the question   what do you think others might not know about you   and got a ton of amazing information about our teammates  We then used Quiz Maker to put together a 22 question trivia game    And we provided a Google Form link for any other teammates to share fun facts for future quizzes    Spreading the need to know information  On a monthly basis  Buffer Reports  Sharing our progress  data and experiments transparently has been an initiative from the very beginning of Buffer   Over the past six years  we ve shared a variety of monthly report  most consistently  investor updates  happiness and engineering reports   This past July  we renewed our commitment to these  now in eight different reports each month  Investor  Product  Happiness  Marketing  Engineering  People  People Ops and Respond    We continue to iterate on the design as well to create a consistent and readable look for each report   On a Weekly Basis  Here s What Happened  Each Monday morning  team members receive an email of what happened the week before in a Mailchimp email of  Here s What Happened in Week ___    Here is a glimpse at a recent one   We keep an ongoing Paper document going all week long where several team members contribute and highlight special Discourse announcements or things mentioned in Slack channels   This format helps keep team members in the know across many time zones and distills all the important information into easy to read headlines   In the future  chat roulette bots  virtual reality meetups and more   We re excited to continue to find new ways to bring the team together   some ideas we re looking forward to testing in the near future include   A chat roulette style bot in Slack that randomly pairs you with someone  blindly  and allows you two to chat for 5 10 minutes before pairing you with someone new  A  This Makes Me Smile  shared Pinterest board where everyone can contribute  Virtual reality conversations   What will the team bonding of the future look like when we can virtually hang out in the same room   Or hang out in any location across the world or galaxy   We re keen to grab a VR headset and start trying it out   The possibilities are endless  which makes every day a new adventure full of a million new opportunities  Getting to know our fellow amazing teammates may take some thought and time away from the day to day  but it is well worth it   Over to you  How do you keep connected on your team  Are there any tools or methods you d recommend us try  We re excited to hear your thoughts in the comments,"[499 981 497 304 973 17 360 898 391 955 1030]"
503,training-dataset/product/402.txt,product,These meetings will make everyone a design leaderLeadership could be something you fear  You fear that it will cause problems  You fear that you have to do things you don t enjoy  You have to micromanage  You have to do a lot of admin work  The boring stuff   Leadership doesn t have to be this way  Leadership can be rewarding  inspiring  and simple  What you need is a set of meetings that will enable your team to lead themselves  You can focus on the fun stuff and do less of the boring stuff   The essence of leadership  Before we talk about our meeting structure  let s begin by defining what leadership is  The essence of what a leader should do can be summed up in 2 bullets   Leaders define the course for their team  Leaders also steer team members in the right direction  The tools of leadership  meetings  The main tools that we use in the Nordnet Design Studio are meetings  You might think   That sounds about as exciting as getting your teeth cleaned while reading the terms and conditions for opening a bank account   but meetings can be meaningful  fun  and engaging  Our meetings help us focus on the course  and to steer ourselves in the right direction   The old way of thinking is that leadership should be done by one person  Our meetings are run by all of us in the studio  meaning that we collectively lead ourselves   The recurring meetings that we have   A weekly Goalfest meeting A weekly design critique A monthly pet peeves meeting A quarterly retrospective  Goalfest  The term Goalfest was coined by Joel Califa in his article  Trust   Product Design   It s a fest with goals  simple as that  If there s one meeting to take away from this article  it s this one  It s the key meeting for us it helps us reflect and look forward   The setup is easy   Meet once a week on Fridays  We meet at 11am for one hour  Share what you ve accomplished during the week and the goals you have for the following week  Talk about lessons learned  The facilitator writes down notes on a page that s accessible for everyone  We use Confluence  which is sort of an internal Wiki   Goalfest is what happens when you combine 2 of the most exciting things the business world has to offer  meetings and spreadsheets    Joel Califa  Goals  Every business has goals  You have company wide goals  you have team goals  and individual goals  What we wanted to do is set up a clear link between what we want to achieve as a company to what we want to achieve as a team  and as individuals   The hierarchy that we re using   Brand purpose  At the top of our Confluence page  we state our brand purpose why we exist as a company  We exist to redefine the financial world by empowering savers of today and tomorrow   Company wide goals  We have a company wide priority list of what to focus on as a business  We list each of our goals in order of priority   Team goals for the quarter  At the end of each quarter  during the quarterly retrospective  we meet and define the team goals for the forthcoming quarter  We typically have 3 or 4 of these goals  We ll describe more in detail how this works further down the article   Example of a team goal  We have consistently contributed to the design community with many articles and open source materials   Individual goals for the quarter  Same setup here  Each quarter  we individually define a set of goals that we want to achieve during the next 3 months  They re all transparent for everyone to see   Individual goals for the week  This gets updated every week  We write a few bullet points of what we want to accomplish next week  For instance   I want to document graphs in the UI kit   We also look back on the week and rate our individual goals  that we wrote during the last Goalfest  from a scale of 1 5   As we share our goals  we have discussions within the team  Maybe someone is struggling with a task and someone else can help  Maybe a team member has learnings to share about a new tool  By discussing our goals  we not only keep ourselves aligned  but we also share knowledge and help each other   Lessons learned  After rating our goals for the week  we also populate a list of lessons learned  We list what we ve learned and what we can improve  It s sort of a mini retrospective it pushes us to reflect on our work   Happiness metric  As a finale of the meeting  we track our happiness metric  It s a rating system of how happy we are at work  but it s also a way to increase team happiness   We measure happiness by asking 3 simple questions   How happy are you with your current role   1 6   How happy are you with Nordnet   1 6   How can we improve your happiness   You receive a rating for the first 2 questions  but the third question generates ideas on how we can become happier  Based off of these ideas  we ve organized team outings  bought equipment  and much more  We track all ideas in a Kanban board using the columns  todo  doing  done   Tracking the happiness metric is good for business  Scrum Inc  the company who coined the term increased their velocity by 500  by tracking their metric   Design critique  The design critique is our other weekly meeting  We have these sessions on Wednesdays  The purpose of the meeting is to show your work in progress designs and receive feedback   How it works  Every designer presents their designs in 5 to 10 minutes  The slot is time boxed for a reason  If we don t have a set time  the discussions might snowball  Before presenting a design  you must first share the background of the project  and articulate the problem you re solving   After showing the design  the team gives constructive feedback around   Simple   How simple the design is    How simple the design is Consistent   How consistent the user experience is  and how aligned it is to our visual identity    How consistent the user experience is  and how aligned it is to our visual identity Accessible  How the design is adhering to our accessibility guidelines  Facebook wrote at length about their setup for design critiques  We ve  stolen  quite a few bits from them  For instance  they have an excellent way of framing their feedback  We use the following guidelines to give more useful comments   Ask questions  don t judge  For instance  Why did you choose the color blue for the button    For instance  Why did you choose the color blue for the button   Be objective  not subjective   When I ve reviewed customer research  I get a sense that they want the overview first  not the details     When I ve reviewed customer research  I get a sense that they want the overview first  not the details   Be concrete  not vague  In this case  I would suggest you move the button    In addition to the design critique  our lead designer Can organizes weekly one on one sessions with designers to support with more detailed feedback   Pet peeves  We re firm believers that limitations spark creativity  Instead of starting with a blank slate  we have tools and guidelines to increase the consistency and quality of our designs    Instead of freaking out about these constraints  embrace them  Let them guide you  Constraints drive innovation and force focus  Instead of trying to remove them  use them to your advantage    37 Signals  The constraints we work with   Our visual identity  A UI kit and a workflow for Atomic Design  Even though we appreciate working with a design system  we don t always agree with all of our previous decisions   That s why we have a monthly  pet peeves  meeting  where we can talk about issues and frustrations with our system ultimately to elevate our design language   A democratic process  Pet peeves meetings are held with both the product design and the marketing design teams  It s a forum where any issue  no matter how large or small  can be raised  discussed  and documented   We begin by going through proposed solutions to previous problems raised in earlier meetings  our  peeves   We keep track of them using a Kanban board  The peeves can be as simple as someone disliking a particular icon  or as complex as someone questioning an entire flow within the product   After that  we present new peeves and discuss them with the group  It s a democratic process  Although we may not always reach unanimous decisions  everyone has their say and all points of view are documented   If an issue requires a larger amount of exploration than a meeting allows  a designer is tasked with taking the lead on creating a solution  It can sometimes be hard to pick a designer to explore an issue  particularly if opinions are very divided  If that s the case  we ll often assign the task to a designer from each  camp  to ensure that we ve thoroughly examined both sides of the coin   Once we re aligned on a solution within the team  we integrate the end result with our visual identity and our UI kit   Quarterly retrospective  At the end of each quarter  we meet to reflect  We set aside at least 2 hours  and the purpose is to look back on the quarter  learn  and review the goals for the forthcoming quarter   Rate team goals  You begin the session with rating the teams  goals for the quarter  You read each goal aloud and then you ask each member to rate how they feel we ve accomplished the goal from 1 5  By doing this  we receive a rating for how we have achieved each goal   Retrospective  After we ve reviewed our goals  we do a retrospective of the quarter  We use a structure from the excellent Retromat created by Corinna Baldauf  You can use the Retromat to customize your own retrospective   The process we follow   Why we do retrospectives The good  the bad  the ugly Start  stop  continue My team is awesome  Why we do retrospectives   We set the stage by asking the question   Why do we do retrospectives   It might sound awkward  but it s a great question to ask in order to align on expectations   The good  the bad  the ugly  For the next part  we write down on Post its what we felt was  good    bad   and  ugly  about the last quarter  After we ve finished writing  everyone presents their learnings and puts them up on a whiteboard  By doing this exercise  you gather insights  which warms up the brain and tees up for the next step   Start  stop  continue  Now it s time to generate ideas on what we should  start  and what to  stop  and  continue  doing as a team  The same setup as the previous exercise applies  We write down our thoughts on Post its and put them on a whiteboard to discuss  However  as a last step we ask everyone to dot vote on what they feel are the most important ideas  During the next quarter  we follow up on the suggestions with the most votes   We re almost done  Just one more step   My team is awesome  Retrospectives can sometimes be quite draining  You bring up issues  which can cause frustrations  To end the session on a more positive note  we conclude with a filling in the blanks exercise    My team is awesome because _______________  and that makes me feel __________________   Summary  Give these meetings a try  We re certain that you ll see benefits within your team  such as less micromanagement  more alignment  and more collaboration  Running these meetings will bring out the leader in everyone   This post was originally published on Medium,"[503 333 458 1030 116 1093 1411 17 769 391 19]"
513,training-dataset/business/1207.txt,business,Here s How Asana Won With Its Product RedesignProduct redesigns heat sink to headlines  Instagram Gets the Redesign We ve Been Waiting For  Medium s redesigned website wants to bring us back to blogging  Facebook co founder Moskovitz retools look of future of work startup Asana  Then there are your users  Whether it s a consumer or enterprise product redesign  they re the ones who declare success or failure   either through praise and referral or by voting with their uninstalls  How can a company own its evolving identity when the verdict on a redesign so often comes from the tastes of its users   Asana product manager Sam Goertler has thought about this question a lot  especially as it relates to improving team collaboration  As an early member of Asana s product team  she s focused on building an easy and powerful product that helps teams track work better together  Previously at Yammer  Goertler worked on enterprise social networking in its early days  She s familiar with the late night pushes  behind the scenes kerfuffles and the ramp up to the big unveiling  There s also the redesign expectations that can split like a middle school dance  On one side are the designers  with their big dreams  expansive thinking and hope for a silver bullet to fix all product problems  On the other are the PMs  grappling with impossibly high stakes  fear of user backlash and complex plans to execute  And those are just two types of stakeholders   In this interview  Goertler covers why redesigns   even of apps users have already come to love   are as difficult as they are inevitable and how to navigate them with grit and grace  Using Asana s successful redesign as a case study  she outlines the team who needs to be assembled  the obstacles to flag and how to plow through them  Lastly  she digs into how to take a uniquely iterative approach to a redesign and when to declare success   Why Redesigns Are So Hard But So Inevitable  There was a time when Microsoft Word came out with a new version at the same cadence as the Olympics  but that time has passed  People have adopted agile methods and rapid release cycles  There s a shorter runway to extend design systems now  the unit of time is weeks not years  It s not unusual if SaaS companies ship new functionality every few weeks  so redesigns become a natural consideration to match faster product development cycles  According to Goertler  there are two key factors   one external  one internal   primarily driving this change   The prevalence of digital interfaces in our daily lives has accelerated the evolution of design trends   Pretty much everything we do now  whether it s shopping or managing our finances or making a doctor s appointment  we re doing it through a digital interface   says Goertler   That means there are more designers out there who are collectively advancing design languages and pushing visual styles forward  In turn that leads to a faster rotation of design trends  It s a virtuous cycle    But virtuous cycles are also vicious ones  Those who don t spin at the market s speed can be spat out entirely   What it comes down to is that design trends are moving quicker than ever  As soon as a new style rolls out  the previous version seems incredibly outdated by comparison   says Goertler   One stark example is when iOS launched it s new flat design to replace a more skeumorphic design that had been long favored by Steve Jobs  Now  if you look at that early design  it feels like a relic from an older world  Iconic brands like Apple endure because they evolve their brands  If you can t keep up  you ll have a tough time attracting and retaining users    If the rapid cycle of design trends is the external trigger for a redesign  there s another internal reason one should be initiated as well  the pace of product development   It s not just design trends that are moving faster  We re seeing more functionality and features developed in a shorter time span   says Goertler   In a year  you can go from an MVP to a product that s chock full of functionality  which  when more features are piled on at top speed  can become untenable  That s when you hit the limits of your original design  You can t extend your design system to accommodate new feature development  So it s time for a redesign  The alternative is to continue cramming everything into an already cluttered UI  which stifles all your feature development work    With dynamic forces at play  you d think it d be relatively easy to jumpstart the redesign process  Yet there are cases in which executive teams and product managers can drag their feet with redesigns  When they do  let your users speak for you  Here s a closer look at these key stakeholders   Expect executive teams and PMs to take a risk averse stance towards redesigns   It s definitely tough to get their buy in for a redesign  They tend to prefer projects that are more straightforward in terms of returns on investment and amount of risk   says Goertler   For example  by comparison  feature development work can seem much more appealing to PMs and executives because it s presumably more straightforward to build features incrementally  That means lower risk and clearer metrics for success with the help of A B testing  The assumption is that in order to successfully execute a redesign  you have to go heads down for several months and come out the other side with a big reveal  You cross your fingers that you didn t miss the mark  That can be very scary and unappealing for executives  PMs and other key stakeholders    Highlight the urgency for a redesign by channeling your users  Your users are your bellwethers and spark for a redesign  so poll them every 24 weeks by folding in a question about design in your periodic surveys  If you ve already made the case for hitting the limits of design extensibility  stifling the success of all feature development or cluttering your UI  let your users speak for you    If your company still isn t feeling the need for a redesign and kicking the can down the road  reach out to your users  I think the best way to track the need for a redesign is to get a pulse from your users through net promoter score  NPS  surveys  A lot of companies use NPS to gauge word of mouth growth  so it s a familiar tool for both companies and customers  It asks whether or not they d recommend your products  with an option to give additional color   Goertler says   At Asana  we were seeing that the original design was the top reason why people wouldn t recommend our product  That was a clear sign that we weren t able to fit into our users  modern lives and our cluttered UI was preventing them from getting value out of new functionality  It was evidence that our design was hindering us from growth and engagement  two metrics that grab the attention of and matter deeply to executives and PMs    If your users don t swing internal momentum for a redesign  mirror the tactics of the product team  That doesn t mean changing the goals of the design team to those of the product team  but rather adapting to the way they achieve and measure objectives   We mitigated internal concerns about a redesign by pitching an incremental strategy that would take all the benefits of what we ve learned from the feature development process and apply it to the redesign process   says Goertler   This approach allows you to validate your assumptions early  build momentum  know when to change course and recognize when you hit diminishing returns  When we were able to take those aspects of feature development and apply them to our redesign strategy  everyone got on board    How to Assemble Your Redesign Team  A redesign affects not only how your company uses your product  but how they connect and feel about it on an instinctual level  Logistically  that means that this is a unique undertaking that impacts the entire organization  but practically cannot involve everyone at every step  Here s how Asana built its team responsible for its redesign   Convene a temporary  cross functional crew  Goertler  as product manager  and Vanessa Koch  the lead designer  partnered to spearhead the redesign  They assembled a team of product managers  designers  executives and user researchers who d work together for a defined sprint   It s important to have two leaders   one from product and one from design   to make this work  Vanessa was a huge part of why this project was so successful for us  She was able to get the entire design team involved in the exploration phase of the project where we were considering all the different visual styles and UX changes to make  She was able to get input from the entire design team and consolidate that into a single vision  which is critical   says Goertler   As for the team  we organized our  program   which for us is a cross functional team that s assembled for a four month period to solve a higher level problem  In this case  it was about user confusion   we didn t yet know that a redesign was the solution  We received a signal from our NPS reports that our UX was puzzling to users and that we needed to dig into the problem  Only then did we realize the extent of the issue and the need for a full overhaul    The key to the genesis of our redesign was that we first convened to solve a problem  not to implement a solution   The redesign program kicked off its collaboration with the team by relocating to a cabin in the woods  The goal was to get out of the office  block off a huge chunk of uninterrupted time to work together while not being distracted by the existing design   The team   designers  product managers  executives and user researchers   got started with brainstorming exercises led by our user research team  They d paint the picture of the problem by presenting a lot of qualitative data gathered from users   says Goertler   Then they d pepper in anecdotes  One use case was about a construction company that uses Asana to help their team coordinate homebuilding  We really got to know exactly how users work  how they use our product and what other products they use to get their jobs done  Once we had a really clear understanding of their workflow  we then started to brainstorm ways that our product could improve the way they tracked their work    Resolve philosophical differences by picking up from pain points  The contingent of product managers on the redesign team were eager to use an iterative methodology to product development  Broadly speaking  that meant starting with an MVP  A B testing it and iterating to a better end result  Yet that approach didn t immediately sit right the designers   They believe that a redesign is more than the sum of its parts  As such  they couldn t imagine launching a redesign in a piecemeal way or stomach putting users through a Frankenstein experience  where parts of the old style would exist along remnants of the new design   says Goertler   Goertler and Koch wondered if there was a way to get the best of both worlds and marry the instincts of the designers and PMs on the team  They found a way to take an iterative approach  while also building in a grander unveiling that was more comprehensive and holistic to users    Instead of choosing the designers  approach over the product manager s methodology  we looked deeper into what the users had flagged as the main problem  We realized there were two sets of issues  structural issues  such as broken navigation and lack of hierarchy  and visual issues  such as outdated button styles and a drab color scheme   says Goertler   Making this distinction in the pain points allowed us to merge our team s different philosophies  We realized that we could incrementally launch structural improvements in our old visual style without putting users through a Frankenstein UX  Once the structural changes were integrated  we could do a visual refresh in one fell swoop  having already mitigated the risk of user backlash because they wouldn t have to change their workflows overnight    We knew the designs were going to shift  but we needed a North Star to guide us through the incremental work   How to Take an Iterative Approach to a Redesign  At Asana  an incremental  iterative redesign plan got the green light  but it didn t immediately quell all the concerns or rally the organization  It took more steps to transform the nervousness into productive teamwork  To kickstart the iterative style to a redesign  draw from the same methods used in feature development  Set a general vision  break it up into independent parts and sequence their launches  Here s how the redesign team got the process started   Set a general direction   Our user research team led brainstorming exercises to tease out a vision that would solve our user confusion problem  Our design team laid out specific possibilities that might improve clarity for our users  After our trip to the woods  Vanessa took all of those ideas and consolidated them into a single concept mock that didn t have to be perfect   says Goertler   Since everyone knew we were taking an incremental approach  it was easier to get consensus on a general vision and buy in from other stakeholders  Everyone knew that we d never have to ship those initial designs  so it lowered the stakes and made it easier not to nitpick over which shade of blue was best    Break up the design into parts    Once we had the general direction  we had to build the steps to get there  That meant breaking up the concept mock into all of its independent parts  such as top bar and sidebar navigation   says Goertler   It can be easy to lose your way here  so lean on a mantra   we used  maximize clarity   As we put designs together we had many versions of the new navigation  So we returned to our mantra when we got stuck  If we thought one design would bring more clarity to a user than the other  we chose it and moved forward    Sequence the launches    After identifying the independent parts of the redesign  we had to figure out how to sequence the launches in a way that would optimize for learning up front  To do that  we listed out what we believed we could learn from each individual release   says Goertler   If it was a huge departure from the status quo or if it was a design based on assumptions that we weren t able to test with a prototype or get user feedback on  then we knew we had a lot to learn from actually launching it  We wanted to get those insights early on so that we could course correct our way to the best end state    Validate assumptions early    The major advantage of an incremental approach is to learn along the way  You get to answer your biggest open questions before making big decisions on false assumptions  and therefore lessening the chance of a big catastrophe down the road   says Goertler   But another advantage is that you can also build momentum along the way  You re not holed up in a room for months with the A Beautiful Mind approach   you can ship  get feedback and garner trust with the organization    Notch a first small win  Even after Asana initiated its plan for a redesign  there were still nerves  It took a mini victory before people truly got on board with the redesign   Sentiment finally changed as soon as we got initial results from our first few launches  Showing how our work was moving the needle helped to change people s minds and get the company to rally around us after that   says Goertler   Our first launch was a redesigned top bar navigation that we had A B tested  It was a big victory for core metrics  Once people saw small changes working  they realized they didn t need to be afraid of a bigger transformation    Sam Goertler  How to Let Users Help Guide Your Redesign  It s critical to define a rough timeline  launch strategy and feedback loops  but your users will help you refine each of these elements  Here are Goertler s recommendations on what to do to allow your users to have an additive role in your redesign   Sprint to a signal  not a deadline  The Asana team working on the redesign did not linger  but they also didn t drive to a predetermined deadline   While we did have an upper limit of how much time we want to spend on the design  the more valuable measurement was time bounding our efforts to get a specific signal   says Goertler   Remember  we were working through incremental steps  We would sprint towards the next launch and once we had A B test results from that launch  they d give us signal on what to do next  We let the strength of a signal guide us  For example  the navigation launch was a huge win for our core metrics  But as time went by  the effects of each subsequent change was more and more subtle  That s when we knew that there s probably higher impact work to be done elsewhere in the redesign versus chasing diminishing returns    Resist over bundling features for releases  The advantage to an iterative approach is that interactions with your users help you isolate issues better and faster   If we had launched our sidebar navigation with our top bar navigation  we may not have gotten a clear read from our users  The top bar navigation really helped with a pretty cluttered UI that had too many calls to action everywhere   says Goertler   But if we had paired it with our sidebar navigation release  we may have had to untangle that feedback  We realized the sidebar didn t scale well for larger organizations that had many shared projects  It was painful to get those A B test results back  but we were really glad that it had launched independently so we could find our misstep  roll it back and fix it  Otherwise it might have tainted the overall launch    Asana s initial design  Asana s new design  Incorporate your customers into your big design reveal  If you re just thinking of your customers as mechanisms to run your design A B tests  you re missing a big opportunity  Asana purposely activated them for their big launch   All of the incremental UX changes had a minimal amount of go to market strategy built in because we were A B testing and not sure what we might roll back   says Goertler   But when we unveiled the new visual style at the end  it was our opportunity to tell the world about all of the progress  The marketing campaign leaned into customer love  a special event for press  engaging social media  and blog posts all centered around the customer s stories in announcing the all new Asana  User response  in the wild  was also core to the process   their response was key to our release    We gave users an option  the newly designed Asana or a return to the older version  Fewer than 1  went back   A redesign should not only be a reflection of a company  but the customers who use its product  Both continue to evolve  accelerated by the proliferation of digital interfaces and pace of product development  Despite the inevitability of redesigns  expect internal resistance given that they are perceived to be risky  unpredictable endeavors  Assemble a cross functional team  Mirror the metrics and marry the methodologies of each participating function to kickstart an iterative approach to the redesign  Set a general direction  break it into parts and sequence your launches to learn faster early on  Lastly  involve your users to help measure and celebrate success    One of the most important aspects of a redesign is flexibility  When you are taking an incremental approach  your plans are going to change based on the feedback you collect along the way from your users  That s a good thing because it means you re learning and getting closer to that ideal end state that was fuzzy at the beginning   says Goertler   You have to start before knowing exactly where you ll end up  Though we  finished  our redesign at Asana  we ve created it in such a way that there s room for change as we evolve  If you re a company that plans to be around for a long time  you not only need a formula for growth  but a flexibility for it,"[107 513 663 190 1061 826 1030 116 233 77 1384]"
517,training-dataset/business/1391.txt,business,Buffer s new Engineering Career Paths FrameworkDuring early startup days  everyone pitches into everything and just does what needs doing  The focus is on building a product  getting it out the door and delivering something great for our users  A small  flat team  a cluster of passionate engineers doing whatever it takes each day  works just fine   More than fine   it s brilliant  It s what got Buffer to where we are today  passing  12M in ARR with a team of 81 Bufferoos spread across the world  serving over 4 million users who send more than 200k social media updates each week  We re pretty happy with our engineering team   This year  we ve been realizing that we ve outgrown that structure  Buffer s now focussed on building a company  not a product  The engineering team has grown to 27  of which 24 are fully focused engineers  not managers   Like with most startups who start to grow up  the time has come where we need the transparency of a career framework  We need a structure to develop our engineers and start growing careers  not just codebases   For Buffer to continue to be a place of growth and fulfillment at this bigger scale  we need a way for engineers to advance to bigger responsibilities and harder challenges as engineers  To deliver great software  we need to encourage engineers to grow horizontally  to grow their knowledge and thought leadership as engineers and do the job they are good at even better  Management should not be the only option for growth and advancement   An engineer centric framework  Our career path framework is engineer centric and crafted for individual contributors  Engineering managers don t fit into this framework  We don t yet have a management career track  What we do know is we don t want the only way to grow to be by becoming a manager  Our career path starts at  Software Engineer   and carries on right up to an  Engineer of Distinction   someone who has industry wide impact  and who is very rare indeed   Where an engineer is currently at on this path is determined by two factors  the scope of influence they have  and the  ownership  level engineers commit and are held accountable to   Scope of influence  The scope of influence concept that drives our structure is borrowed from Camille Fournier s engineering ladder and we ve found it a useful and accurate proxy for how far along their career journey an engineer is  A very skilled engineer will likely have influence over a whole project  or area  and having wider influence requires deeper skill  Someone earlier in their journey may influence only the tasks they work on directly   We decided not to use a matrix of hard skills because you can never make a complete enough skill checklist to avoid unfair negotiations on this skill vs that skill  Comparing a front end engineer and a systems engineer and an iOS engineer using a checklist of specific skills didn t lead to transparent and fair outcomes  or outcomes we could make much sense of at all   It also might encourage engineers to grow in artificial directions following a random checklist rather than their true interests  Instead  scope of influence  together with a description of  how work is conducted   proxies for technical skill   Ownership  The second major component of our career path framework is the concept of ownership  Making ownership explicit like this wasn t something we ve seen done before  so this is one way where the framework is a little different and experimental  We feel it is important  because ownership is a core part of our engineering culture  and of Buffer culture   Bringing it into the framework as a major component forces us to articulate what ownership is and the ownership expectations at each point in an engineer s journey  The technical skills someone has should enable them to fulfill the ownership requirements for where they re at  but technical skill tells only part of the story  The rest of that story is about owning increasingly heavy responsibilities   something not every skilled engineer is ready to do  or indeed wants to take on   It s not a  ladder    here s why  Lastly  a note of the wording of our framework  We chose not to call it a  ladder  with  levels  or  rungs   There s nothing inherently wrong with a ladder like system of advancement up various levels   it is really clear  for one thing  It s just that talking about ladders with  higher  and  lower  rungs felt out of tune for our engineers   Being a flat team was very in line with our  Be a no ego doer  and  Focus on self improvement  values  and having a career framework described in strong hierarchical terms seemed harder to reconcile with those values when some people are described as being levels above  or  levels below  others   Instead we choose to focus on the journey  the growth and evolution that is a career  We talk about paths and where you re at now  and where you hope to grow towards  At any one time  you re simply at one particular point on your path  And no one stop ever describes the whole journey       Scope of Influence How work is conducted Ownership Software Engineer Themselves and their tasks    Makes a contribution through completing well specced tasks     Receives closer guidance and technical mentoring to avoid becoming blocked stuck    Not yet learning at Buffer in a self directed way  No ownership responsibility yet  this person is learning and being actively developed by others   Average Expected Timeframe to Software Engineer II  6 12 months Software Engineer II Their project and their peers    Works on project as a whole    Makes steady progress on tasks within the project    Works directly in parallel with peers     Self directed learning process     Knows when to ask for help when they are becoming stuck  does not go down rabbit holes   Co owns an area with guidance   takes initiative  e g fixes bugs unprompted   Average Expected Timeframe to Senior  1   3 years Software Engineer III Their project and their peers    Same as above  Software Engineer II  Fully owns a service or component  Average Expected Timeframe to Senior  1   3 years Senior Engineer Whole team product area   Translates ideas into projects with discrete tasks     Gives guidance   unblocks others on their team area     Sought out by others as a technical resource     Seeks design architecture or specialized input when needed  and knows when it s needed      Makes good  informed decisions around technical debt and tradeoffs     Communicates with non technical team members to give technical advice  Has a consistent record of very strong ownership for their area  e g  figuring out on call schedules  establishing monitoring  Timeframe to next Step of Senior II or Staff Engineer  2  years  if you choose to increase influence further   Every engineer should aim towards becoming a Senior Engineer in their own ways   From Senior Engineer  Becoming an Expert Technical Leader Within One Team or Area     Scope of Influence How work is conducted Ownership Senior Engineer II Whole team product area   Exhibits excellent judgment regarding decisions across many aspects of the project    Acts as a resource to unblock and enable the whole team     Reduces the complexity of projects services processes in order to get more done with less work     Researches and leads adoption of new systems technologies to stay current and strive for excellence on your team     Routinely and consistently pushes the team forward  Senior Engineer II conducts work in the same way as a staff engineer  except across 1 team project rather than multiple teams projects  going deeper into their team project rather than increasing breadth influence to staff engineer   Timeframe to next Step of Staff Engineer  2  years  if you choose to increase influence further     From Senior Engineer or Senior Engineer II  Becoming a Technical Leader Across Multiple teams projects     Scope of Influence How work is conducted Ownership Staff Engineer Multiple teams projects   Exhibits excellent judgment regarding decisions across many teams     Acts as a resource to unblock and enable teams across various projects     Reduces the complexity of projects services processes in order to get more done with less work     Leads architecting new systems technologies processes to stay current and move the bottom line     Routinely and consistently pushes pushes multiple teams forward  Exhibits ownership across the org   this person is a guardian of BufferTimeframe to next Step of Principal Engineer  3  years  if you choose to increase influence further   From Staff Engineer  Choosing to Become a Thought Leader     Scope of Influence How work is conducted Ownership Principal Engineer Whole organization   Sets the technical path and direction for the company     Understands business need and impact of choices     Makes multi year decisions and informs the vision for technical culture     Anticipates challenges across the organization well before they occur and takes preventative action  Ownership  Is a last point of failure  the buck stops here  in the case of some massive failure  the 5 Why s process would likely come down to something went wrong at this level   This person is rare  This takes an exceptional amount of dedication to the craft and is again a big jump from staff engineer  Engineer of Distinction Industry   Is a thought leader in industry     Makes major breakthroughs     Driving projects on which multiple organizations depend     Unblocking multiple organizations of the future  Same as above  Would guide principal engineer   Very few organizations would have an Engineer of Distinction   Over to you  We d love to hear what your take on this  and of course feel free to copy and adapt this framework for your own organization,"[517 315 1195 375 1146 1385 363 973 1061 39 1241]"
519,training-dataset/product/910.txt,product,Why I m not a big fan of ScrumScrum is now the default agile software development methodology  This management framework  which is  simple to understand but difficult to master   is used by 66  of all agile companies  After two extensive workshops  more than five years  and a couple hundreds of sprints working in Scrum  I have some points of criticism about it  I think it s not naturally conducive to good software  it requires too much planing effort on the part of the developers  and it inhibits real change and improvement  In the following  I will try to put these into more detail by organizing them around more concrete topics   Before you go to the comments section to tell me that I have no idea what I m talking about  please keep in mind a few things  First of all  this is not a rant against agile  I m a big fan of agile  as it is explained in e g  The New Methodology  and I believe that the potential of this concept has not been exhausted yet  Also  I m not against every idea and practice in Scrum  For example  the principles of the whole team taking responsibility for the code base  or always having an integrated  working master are really awesome  Last but not least  the following points are directed against standard Scrum as described in the official guide  If you are doing something totally different but still calling it Scrum  this post is probably not so relevant for you   One thing I would like to refrain from here is anecdotal evidence  My individual experiences  as far as they are not related to the proper Scrum entities  are not really relevant  since many of them are individual mistakes  and will therefore intentionally be left out from the following   Obsession with points  The use of story points appears to be one of the defining features of Scrum  Each user story is given a certain count of story points  and a team is confronted with the number of points it has  achieved  at the end of a sprint  Some teams also follow their daily progress in terms of story points with a burndown chart that is consulted every day at stand up  The points collected at the end of a sprint consitutes the velocity of a team  and the team is expected to keep this velocity  During planning  the team takes on stories it thinks it can finish until the end of the sprint by looking at the velocity from previous sprints  The velocity of the teams serves to project an estimate of what can be achieved in the future  for the purpose of business planning   There are many murky things about story points  but somehow the scrum masters and coaches will not abandon it  First of all  what are story points  Are they measures of time it takes to complete a story  If yes  then why are they not in terms of time  Are they measures of complexity  If yes  why are we not talking of the complexity of stories  and how we can remove them  instead of how we can achieve as many points as possible  That is  shouldn t we be talking about doing as few points as possible  The best measure I have heard is effort  You can work three hours on half effort  but work hard for an hour and finish a task  which explains why it s not about time   No matter how you define story points  the real issue with them doesn t go away  The main purpose of points is making planning more reliable  and providing a temporal perspective for business  They never fail to take on a life of their own  however  with teams working to gather points instead of delivering good software  I don t understand why points are special compared to the oft mocked cases of bug hunts or lines of code written  If devs are measured on points  they will optimize on points  Has the code base improved  Did it become more modular  simpler  habitable  see the section Habitability and Piecemeal Growth in this book  pdf  by Richard P  Gabriel   None of these questions is of relevance  The points have to be gathered  The spice has to flow  That s what counts   One can of course counter that if you write stories for accomplishing these counter examples  you would get points for them  But the point of stories is that they have acceptance criteria that can be tested for  and demo ed at the end of a sprint  see the point on creating user value below   How can you demo that your code base has become more habitable  Will the acceptance criterion be that the code is  just  you know  nicer   In practice  refactoring that aims to improve existing code is done as a part of new stories  Instead of simply adding more to the spaghetti code that exists  you try to  leave the grounds better than you found   as per Pragmatic Programmer lore  This might well be true of simple refactoring where you move code  reorganize classes  or rename things  but the really complicated cases that require rethinking of the base abstractions cannot be covered with this simple recipe   I definitely understand the need for making software development plannable for business purposes  If the business people cannot rely on some kind of an estimate as to how much can be achieved in a certain time frame  they are navigating in the dark  and the developers are in danger of losing their jobs  Programmers also occasionally dig deeper when they have already dug themselves into a hole  so it makes sense to set limits to stories  But there are  must be better ways to make reliable estimations of how much effort stories require   Meeting extravaganza  Scrum meetings  aka rituals  have been among the most miserable hours of my life  and this is coming from someone with a number of visits at the Berlin foreigners office  First of all  they are long  I don t care that the meetings take place every 2 weeks if I m going to be sitting there for three hours  They have too many attendants  Most of the stuff presented is not relevant for most people  but everyone comes because there might be something relevant  and because they have to  The review meeting causes utterly unnecessary anxiety  Oh my god  will my feature work    It s as if the whole work of the sprint will get evaluated then and there  which in some Scrum implementations actually is the case   and you either get the points or don t  no matter how much thought you put into a piece of work  The app is now faster  Who cares  I don t get the exact response that was expected  so no points for you  One implicit requirement of every story is thus  should be reliably demoable to a roomful of people   which requires much more work than you would imagine  think payments    In the planning meeting  you get to discuss with others about whether something is two points or five  and then actually list the things you are going to do  I presented my gripes with story points above  but in the context of planning meetings a few more sentences are in order  Why estimate stories that you are going to break down anyway  The breakdown will be a much more detailed analysis of stories  so doing that would provide a much more precise estimate  Another thing that outright astonishes me is how little attention is paid to whether estimations are correct  This is one area where teams can learn the most  because incorrect estimates point to misunderstanding of the code base and domain  but decent review of estimates is rarely  if ever done  Tracking and estimate reviews would also enable Monte Carlo simulation of delivery dates  which sounds awesome  but is  again  rarely done   Next up is retrospective  Frequent feedback meetings  in which also the estimates are reviewed  are actually a great idea  because the best opportunity to learn from something is right after it happened  but in Scrum  the retro is explicitly supposed to be about the Scrum process itself  not about the codebase  the technology stack or development patterns  So you have this hour for the team  and you are supposed to use it to talk about Scrum itself  Blergh   The daily standup deserves a blog post of its own  This religious ritual has become a staple of every team in the world  Ten minutes of staring into the void  talking about what you did while no one else listens  because they were in the middle of something five minutes ago and will go back to it in another five minutes  and waiting for everyone else to finish  I know this sounds cynical  but it is the end result of asking people to do it every freaking day  Nowadays devs are communicating on all kinds of channels  email  Slack  Github Gitlab  ticketing system  and tracking detailed progress on some of these  What s the point in having them stand around for another ten minutes to repeat a few standard sentences  The daily standup is in my opinion a manifestation of a significant but unspoken component of Scrum  Control  The main goal of Scrum is to minimize risk and make sure the developers do not deviate from the plan  I will come back to  Scrum controlmania  later   One problem Scrum meetings share with all other meetings is that they are synchronous  For teams working remotely  this can become a serious issue  because you have to synch across continents  ending up with people attending meetings at 7 in the morning on one side of the world  and at 4 in the afternoon on the other  This might sound like a simple scheduling problem  but synchronicity is more than that  It means cutting into people s daily routines to force information exchange that could as well be handled otherwise  As argued here  the agile manifesto is complicit in this meeting obsession  due to its emphasis on face to face communication  What I have a hard time understanding is why the ancient  simple communication form of text is given second seat  The truth of the matter is that  especially under the constraint of distributed teams  it s difficult to beat text  It is definitely true that writing well without offending others is not the simplest thing in the world  but why not educate the developers and stakeholders in this dark art  They will have to learn to communicate anyway  so you might target this asynchronous mode of communication supported by all tools out there  Text is the best means of communication  and a team that masters it will have a huge advantage  Scrum  however  does not build on text  but on meetings   Sprint until your tongue is hanging out  Scrum is organized in units of sprints  A sprint is an iteration in which work is done  evaluated  and the process is adapted  The idea of the sprint is that the developers take on a certain amount of work  and do their best to finish it  as in  you know  they sprint  Nobody is allowed to change the acceptance criteria of the stories in the sprint  or add remove stories  The sprint has its own backlog  which can be changed only in agreement with the team and the product owner  I find the idea that you should get somewhere by sprinting repeatedly rather weird  As any developer will tell you  software development is a marathon  not a series of sprints  But let s forget the semantic point for a moment  since it s a bit too obvious  and scrum proponents could claim it s just a convention that does not have to reflect the actual spirit   But still  why the artificial two weeks unit  In the above mentioned guide  there is even talk of four weeks  Four weeks is a lot of time  and it is an ordinary occurence that one or more stories become superfluous the way they were written  or other  more urgent things come into focus  If the aim is to be agile  why not accept this as the correct way to work in the first place  In my experience  two weeks is too long for review purposes  too  It s impossible to remember at the end of the sprint what bothered or satisfied you in the beginning  If you shorten it to one week  however  it feels like spending twice the time in the scrum rituals  although they might be shorter   There is a more fundamental problem with the sprint idea  in my opinion  The reason software is so difficult to plan is that you discover new things about the problem at hand and your idea of a solution as you implement it  These discoveries affect not only the estimate  but also the actual path you are taking to the solution  as excellently described in this Quora answer   The immediate work items  which consitutes the head of the backlog  is the most affected by these discoveries  So essentially  a sprint is working on a frozen set of items that are most prone to change within that time frame  This is also relevant for the point made above  of assuming a too linear trajectory for software development   Oversimplification of development process  What s so difficult about software development  Write stories  put them on a board  split them into tasks  and then start processing them from the top to the bottom  Gather points by closing stories  pick a new story after closing one  and watch your burndown chart go down  There are a million complications with this approach  of course  How should the teams manage dependencies among each others  backlogs  Can I collaborate with someone  or make sure that I m not stepping on someone else s toes  One of the most central questions of large scale software development alluded to above is how to rearrange work in the face of new discoveries as you are actually working  how to rebuild the ship while you re sailing  so to say  This does happen in Scrum within the sprint  and the results of the sprint flow into the next planning session  but it is not foreseen  or even taken to be possible  that the development team can rearrange work while it is making progress   The Scrum coach will find fifty ways of attacking each and every one of these topics  but all of them will be in the form of one more thing  One more meeting  one more document  one more backlog  one more item in the definition of done  The development process of a scrum team resembles one of those overly pimped cars after a while  There are so many fancy bits and pieces that the actual car is not recognizable underneath anymore  The development process starts to resemble the oft mocked enterprise development process  where devs are occupied with attending meetings and filling up some documents more than anything else  Talking about the code the team is writing  and how to improve the codebase  might just be one of the meetings among others  if it at all exists   Creating customer value  Every story in scrum has to end in customer value  The acceptance criteria have to explicitly state what the customers will derive from the results of that story  in the well known  As a    format  The idea sounds great in its simplicity  but leads to some really convoluted results when taken to the extreme  which Scrum masters have consistently told me should be done   The most obvious thing is refactoring  already mentioned above  If neither the behavior nor performance change  why even bother with refactoring  And one thing I would be ready to bet my career on is  if you want to develop quality software  you should always be refactoring  As an engineer  I care about many things that will not lead to more sales  or the customer going  It got better  in the very short run  Making the platform more reliable  understandable  aesthetically pleasing is worth spending time on  but none of this is easily expressable as delivering customer value  For that matter  is writing a blog post delivering customer value  Will I get points for it   As a customer  I want to read Ula  s blog post  just doesn t sound right  What about contributing to open source software  Reading the code of an important external dependency  such as the web framework your team uses  and working on bugs or feature requests to get a better understanding was not part of any Scrum backlog I ve ever seen   One more note on refactoring  since this is a favorite topic of mine  Why is it that scrum coaches keep on saying  You should always be refactoring   Because the assumption is that refactoring will be a few hours  work  or even shorter if it s renaming a class here and replacing a file there  These are only the most superficial cases of refactoring  however  The most difficult refactorings  incidentally also the ones that make the biggest difference  target balls of mud that need considerable effort and work to disentangle  and this is not happening  always   It is the ideal condition to be able to do mini refactorings  and improve code little by little  but small steps bring you nowhere in the case of these hardened balls of mud  It s of course well and dandy if you can somehow magically plan such a complicated refactoring and find a place for it in your backlog  If you can t  which is much more probable given that deep reaching refactoring is difficult to foresee  good luck telling your product owner that you will be lost in the depths of your codebase for a while   Scrum is not native to software  Any team that builds something can work on Scrum  This is often touted as a selling point  but it is admission of a shortcoming  in my opinion  Claiming that Scrum is generic is admitting that it is not cut for the specific nature of software development  What is the job of a software developer  Writing code  I don t think so  I think it s inventing and customizing machine executable abstractions  and Scrum has no facilitating aspects specifically for this kind of work  Scrum does not tell you how to organize interdependent processes that mutate while they are in flux  It doesn t tell you how to match domains to common abstractions  It doesn t tell you how to distinguish important differences from superficial ones based on context   Of course  one can claim that this is not the job of Scrum  which is a software management methodology  and not a software engineering methodology  that it s only concerned with organizing the teams  time and workload  and anything else is the business of an engineering methodology  such as XP  If that is the case  why the hell am I  the software engineer  doing most of the work   apart from the product owner  whose job description is doing Scrum anyway  Isn t it by definition the job of the managers  and not of the developers  to be practicing Scrum  Shouldn t I  as a developer  be spending that whole batch of time and energy on software engineering relevant things  instead of on demoing stories  discussing the ordering of stories  and debugging the process itself  Why are the developers practicing only Scrum  and not  let s say  XP with bits of Scrum thrown in   Another sign of the software distant nature of Scrum is how little talk there is of an agile codebase in Scrum organizations  It s a non sequitur to think that Scrum is agile  agile teams produce agile code  ergo Scrum teams produce agile code  Having and keeping an agile codebase is crucial to  being  agile  and is actually hard work that requires much more than only following Scrum  It is difficult to introduce processes to manage this work  however  because  Scrum makes claims that it is enough for design to  emerge   and  Where there is Scrum  people are reluctant to introduce even more rituals and documents   In short  Does scrum help you write good code  Does it help you achieve modularization  expression  complexity reduction  The simplest answer I have is a clear no   Scrum inhibits deep understanding and innovation  This is actually my biggest gripe about Scrum  As mentioned above  in Scrum  the gods of story points per sprint reign supreme  For anything that doesn t bring in points  you need to get the permission of the product owner or scrum master or someone who has a say over them  Refactoring  reading code  researching a topic in detail are all seen as  not working on actual story points  which is what you are paid to do   Specialization is frowned upon  Whatever technology you develop or introduce  you are not allowed to become an expert at it  because it is finishing a story that brings the points  not getting the gist of a technology or mastering an idea  These are all manifestations of the control mania of Scrum   I recently read Innovation  The Missing Dimension  my review of the book   a book that focuses on an aspect of innovation that is invisible if you look at design only from a problem solving perspective  An important part of solving a problem is finding the right problem to solve  and this cannot be treated as a problem itself  It rather requires a community  what the authors call an interpretive community  that can reformulate the given domain and create linguistic and technological tools that allow novelty  This idea is inherent to the original agile principles in the form of individuals and interactions taking precedence over processes and tools  Scrum  however  is much closer to the problem solving approach  where analysis  breaking down a problem  and reassembling the solution  is the organizational tool  In order for an interpretive community to emerge  an organization needs ambiguity  open ended conversations  and alternative perceptions  All of this  Scrum leaves to something else  whatever it is  They are not the domain of Scrum  but where there is Scrum  there is very little time and energy left for anything else  What s more  the conditions necessary for the emergence of an interpretive community  and thus for innovation  are seen by Scrum as risk that has to be controlled and eliminated  You cannot Scrum innovation   You might of course think that innovation is not necessary for you  or that it s overrated  and your company can survive without innovating  But keep in mind that the software industry is probably the most innovative one out there  There are new technologies every day  and the basic tools of software development go through revolutions every couple of years  If you re not innovating  someone else who does might knock on the doors of your customers at some point  Also  innovation  in the sense of reinventing  is what software developers love to do  and is a great incentive for keeping top talent   Summary  Ideas for Alternatives  So  in summary  Scrum  wastes too much of the developers  time for management  does not lead to good quality code  is a control freak which does not leave room for new ideas and innovation   Discussion on software methodologies are a bit like discussions of open source software  The default answer to any substantial criticism is  What is your alternative    which is pretty much the equivalent of  Why don t you submit a patch    Unfortunately  software management lies in the intersection of many disciplines  and is a huge field itself  My priorities as a developer lie elsewhere  namely in algorithms  programming languages  computer networks etc  I cannot squeeze in 500 page tomes on software management into my already crammed bookshelves   Which won t hold me back from making probably ill advised and rather general proposals  or at least a clarification of my expectations as a dev  First  estimations and forecasting  I don t think there is anything wrong with estimating individual stories in terms of time  and deriving a general estimate of how long a project will take from this  The problem here is that the way stories are split and estimated is orthogonal to the way devs are working  That is  the work I  as a dev  put into organizing the backlog is not helping me in processing the backlog  If it were possible to organize and study the backlog so that this process also helps the devs  they would do it much better and eagerly  One way to achieve this might be putting work items through what I would call an algebra of complexity  i e  an analysis of the sources of complexity in a work item and how they combine to create delays  The team could then study the backlog to locate the compositions that cause the most work and stress  and solve these knots to improve the codebase  The backlog would then resemble a network of equations  instead of a list of items  where solving one equation would simplify the others by replacing unknowns with more precise values   The other proposal I would have is to get rid of the review  planning and stand up meetings  Like  just stop doing them  There is no reason to make them so grand and rigid  You can replace most of the synchronous communication with textual communication  and create ad hoc meetings to discuss specific work items  Instead of having sprints that are marked by these meetings  one could simply point to the backlog as a measure of work done and pending  The retrospective  on the other hand  is the only meeting in which I saw magic happen in Scrum  but it has to happen more frequently  and concentrate more on the code base  as mentioned above   To make it short  my dream workflow would combine offline working  continuous analysis of the sources of complexity and errors  and detailed  open ended discussion on the path on which the team is approaching the goal  or not   The correct way of building software should align the understanding that devs have of the problem and the complexity involved with the aims of the other parts of the company,"[519 220 168 655 1276 120 1003 1385 391 503 93]"
568,training-dataset/business/1433.txt,business,Less Work  More Play  Change the Game With SimulationsIn 2009  virtual computing company VMware was in a state of transition  The founder and CEO had left and a new leader was at the helm  While server virtualization had powered a decade of success  the company needed to find its next revenue growth engine  The CEO had made several acquisitions  but employees struggled to understand why  The company decided to take an unconventional route to address a rapidly changing landscape  Do a business simulation  VMware partnered with consultancy BTS to build a simulation that mimicked the challenges facing the company  The two day  game  forced company leaders to wrestle with funding challenges and make trade offs between short  and long term investments  Leaders also swapped roles  such as sales switching with product  The all encompassing exercise did the trick  upleveling empathy  understanding and collaboration at a critical time   Then VP Yvonne Wassenaar saw the success of the simulation firsthand and has since become a passionate advocate for the exercises  She s also a pro at growing companies  At VMware  Wassenaar helped triple company s revenue from  2 billion to  6 billion and adopted simulations to help pivot the 1 500 plus person sales force to selling a broader product portfolio  Now as New Relic s CIO  she s been quick to employ simulations at the software analytics company  which she helped prepare for an IPO and more than double annual recurring revenue to  250 million within two years  Before that  Wassenaar spent nearly two decades at Accenture  where she held a variety of roles  from software engineer to global sales operations lead to partner  She serves on the boards of Bitium  the Athena Alliance and Harvey Mudd College  Wassenaar was listed as one of the Top Influential Women of 2016  theBoardlist Top 20 and a Wall Street Journal Woman of Note   Simulations are used by pilots  the military and disaster response teams to prepare themselves for highly intense and hard to predict situations like catastrophes and attacks  Wassenaar believes that startups can also use them to build more resilient teams and prepare employees for change  Here  Wassenaar outlines why simulations are invaluable  when they re most effective and how to use them to help startups maneuver through difficult junctures   A Snapshot of a Successful Simulation  At six years old  many considered New Relic a darling of the startup community  The 550 person company had been on a star run fueled by an engaging CEO and rave reviews from software developers  But as the company prepared for an IPO  executives realized they would need to pivot to continue aggressive growth  Doing so meant shifting from selling to software developers to targeting larger enterprise buyers  meaning they needed to build an enterprise sales team from the ground up   Making those changes wasn t easy  First  there were varying levels of buy in on the decision to move into the enterprise space  Second  there was tension around the trade offs being asked of the product team  What s more  budget shifts were making employees tense and frustrated   To help address these challenges  the company chose to do a business simulation  Wassenaar  then the SVP of Operations  set a goal  Drive understanding and alignment across the top 30 company leaders so they could all more effectively execute and support each other in the move to enterprise  To prepare the simulation  Wassenaar partnered with BTS consultants and asked for input from the finance team  with about 15 people who were interviewed in advance of the exercise  The process took about six weeks    From the very start  executive engagement was paramount  Our top executives formed a steering committee and reviewed the preparation of the simulation  Along with some key board members  they took part in a half day beta during its development   Wassenaar says   The actual simulation included those top 30 leaders   representing departments like sales  marketing  product management  engineering  finance and people operations  We ran the simulation over a day and a half offsite and divided people into six person teams   each composed of a mix of backgrounds and departments  and we assigned every team to a C suite coach from the New Relic executive team  The simulation exercises were mixed with team dinners and executive talks on key topics like product strategy and building for scale     The setup of a simulation was simple  Teams competed against each other running the company over a three year period   Done right  it s a lively and engaging process  We played three rounds  and each round of the game represented a year  In each round  teams made a set of trade off decisions and investments that were run and scored against expected trends built into a premade forecast model kept secret from participants until the simulation  To keep it interesting  we threw unexpected events that required teams to react  like a competitor making a hot acquisition or a sudden security breach   Wassenaar says   After the simulation  the teams were scored and ranked by highest revenue  profitability and customer satisfaction  Then the teams debriefed and examined their performance  At the end of the  three years   the team with the highest weighted score won   An agenda for a New Relic simulation   Why Simulations Are So Effective  Simulations are great ways for companies to deal with controversy and change because they are a low risk way to let someone be CEO for a day   Who would say no to that   Wassenaar asks   And it s incredible because people get to learn through play and practice in real time  The experience of wearing someone else s hat is hugely empowering for people  With management simulations we are free to see the bigger playing field  test our ideas and learn in a lower risk environment than real life    While they re serious business with important outcomes for a company  simulations can also have a lighthearted component that can result in team bonding   To start  everyone had fun with the naming the company and their teams  The main company was called Nu Icon as a pun on New Relic  A competing team gave homage to the head of engineering by naming the their company after him  Bjorn To Be Wild   Wassenaar says   Parts of the game went down in history  such as the Fort Knox play  a deeply divisive cloud security investment option  Those who opted for other investments instead of Fort Knox paid dearly when there was a security breach abroad and security became a top concern for customers  After the game  Fort Knox was a convenient reference point in many real debates around security investments    There are lots of reasons to do simulations  key among them their powerful effect on team bonding and putting people on the same page  Wassenaar spells out additional benefits to the exercises here   They create empathy among teams  This is particularly true when tensions arise between factions of the company  Wassenaar saw this at New Relic   We were transitioning from being a marketing driven to a sales driven company and building an enterprise sales organization  This new sales team was predominately being funded out of the marketing budget  People were struggling with the constrained spending and questioning whether the pivot to enterprise was really necessary  After a mock simulation of the next several years of the company s trajectory  it became clear to everyone that the move into enterprise was needed to drive the three  to five year growth projections that would later support the IPO  People started to get it  They could now better connect the dots across the organization and over time   Wassenaar says   And the thing about simulations is that you also get to actually meet people  Once you get beyond 100 people at a company  you don t know everyone and you become more siloed  It s easier to work through challenges and changes when you know your team    They identify and develop talent  Keep an eye out for those who rise to the occasion during simulations  They just might be your next set of company leaders   In our two day simulation we assigned a C suite executive to be a coach for each team  This gave us great insight into people who viewed and understood the business with clarity and creativity  regardless of role  Those cross functional and cross hierarchical bonds still serve us to this day  especially among executives   Wassenaar says   We found leadership candidates as a result of this exercise who have since stepped up and taken broader company roles  So in many ways  the simulations led to a new reality for participants who just needed a chance to try on more responsibility    They sharpen and weather test strategy  At New Relic  doing a business simulation had a very real impact on the company s ability to communicate its strategy   A very exciting  unexpected benefit coming out of the preparation for the simulation was the strategy CliffsNotes we created  These were developed as part of identifying the key tension points to focus on for the construction of the simulation  When I was reviewing our results with the company president  what we had on paper was a succinct two page articulation of how we saw the market  our position in it and what we were best positioned to do and not do  It was so powerful that we shared and validated it with our board of directors and ultimately distributed it to the entire company    They foster longer term thinking  This is especially true at small companies   Most startups think three to six months out  but your time horizon is three to four years in a simulation  It makes people think hard about what the business and their jobs will look like down the line   and what they individually need to do to get their team there  We found our employees asked bigger questions and were more motivated by the broader vision for the company   Wassenaar says   It s easy to get bogged down in the day to day  but simulations can open people s minds and gets them thinking more actively about the future of the business as a whole    Watch kids at play  They cover a lot of ground  because they re having fun  Business simulations recreate that feeling and energy   New Relic CIO Yvonne Wassenaar  When You Need Simulations  Simulations aren t only effective when companies are pivoting or extending into a new space  They come in handy whenever your organization is undergoing some kind of structural or strategic change   through all growth stages  Here are three times to consider doing a business simulation   Expansion into new customer segments or selling styles  This is a situation that can be challenging to effectively execute  It often takes the shape of moving from one style of selling to another  or perhaps moving to a higher level or different buyer in an organization   It s a challenge to reframe your employees  thinking and turn them on to working in a new way and with new buyers in mind   says Wassenaar   The benefits from a simulation effort in this area include doing a role reversal that helps people better appreciate and deeply internalize the world from the vantage point of their new buyers  It allows people to practice how to position their product more effectively given the makeup of the buyer and how they think    Post acquisition spree  Wassenaar s first simulation focused on helping the sales teams understand and sell the broader company product portfolio post acquisition   The sales teams got to practice in a role playing structure how to pitch the new and broader value proposition to a new set of buyers  played by other team members  They also learned to whiteboard and sell the value of the different offerings rather than deliver dry  canned slides from marketing   Wassenaar says   They did all of this while learning in an engaged and active way  which research shows is one of the best ways for people to retain information    Pre IPO   The very first thing I did as SVP of Operations at New Relic was a business simulation  When we were getting ready to go public  we had just expanded from selling to developers to selling to enterprises and that required a lot of changes in the company  Many people were unsure what was wrong with the current model  People nodded their heads when we announced it  but large portions of the company didn t really buy into it   Wassenaar said   After a simulation that dove deep into the market realities and what growth would require over the long term  the shift made more sense to everyone  It was instrumental in helping the company understand more deeply what it would take to pivot into the enterprise and support the growth rates required for our IPO    Five Ways to Mismanage Simulations  If the preparation and execution of simulations sound involved and complicated  it s true   they can be  Great simulations are realistic replicas of real life scenarios without being overly complex  They re engaging  regardless of whether they re role reversals  like having people ops and engineering swap roles   scenario trainings  such as testing crisis preparation or a new product launch  or company simulations  in which a few people run a simulated company   In all formats  you need to have involvement from top executives and the resulting buy in from other managers and participants  Here  Wassenaar lays out the five mistakes to avoid to increase your chances of running a seamless simulation   Making things too complicated  It doesn t have to be a perfect incarnation of today s reality   The simulation is best if it s realistic enough that participants can relate to it in their day to day job without getting bogged down in the details  Simulating three to five years of the future over two days is not easy  so focusing on what matters is key  Isolate and choose a handful of a few really important variables and measure results by a few factors that matter most   Wassenaar says   At New Relic  we focused on the key investment areas like product and engineering but eliminated a lot of the details around legal and finance  which were important but not contentious  We honed in on the three most important company business outcomes  Revenue growth  profitability and customer satisfaction  Doing so made it easy for people to stay focused on a manageable number of investment areas  and made the goals for the simulation crystal clear    Creating teams that are too homogeneous  Make sure your participants represent a diverse group of perspectives  particularly in the area you re trying to create big shifts   A great company simulation is cross functional  You don t want to load it up with just marketers  or go too heavy on engineers  The key is to find the right mix of leaders from different key groups who are executives  managers  sales  engineering  marketing   they ve got to be representative of your company as a whole   Wassenaar says   So  for example  a great sales transformation simulation should include solution engineers and marketers  not just salespeople  Think broadly about whom you invite to the exercises and how you set up the specific competing teams  People who represent different viewpoints create resistance and tension  and that s a key element for impactful dialogue  And given simulations are an opportunity to spot rising stars  inviting a range of functions to participate will help you identify talent across the company    Building from only one perspective  Include and interview people from across the company for business simulations because you need cross functional views for a clear picture of the business as a whole   Sometimes that can be hard to surface from a single department s viewpoint  For example  when you decide to open a new geographic market  the sales team may only be thinking about the cost of a new salesperson  What they might not realize is that there may be significant finance and legal considerations and investments associated with entering a new market  particularly if it s about international expansion   Wassenaar says   At New Relic  we factored these incremental costs into the simulation model  By doing so  all leaders gained a more comprehensive understanding of how decisions impacted the business  not just their department  We did one simulation like this  and the takeaways helped our leaders think more holistically and thoughtfully as to which countries to deploy salespeople as the company scaled    Assembling teams that are too big or too small  Simulations can go south when companies choose the wrong group size   I have seen successful simulations done with 25 people and up to 200 people  The overall size is less important than the team size   the ideal team size is four to eight people  That s large enough to have different viewpoints and small enough that everyone can have a role and is forced to engaged in the discussion  For a big simulation  the greatest challenge is having enough experienced coaches  To work around this  you can rely more heavily on the people who built the simulation  or roll it out in phases where people who ve already been participants in the simulation become coaches for future groups going through it   Wassenaar says    With large groups  you ve also got to think about how to keep debrief exercises interactive  At VMware we broke the team of 200 into five core groups of 40  and then into eight groups of five  Debriefs were done by core group until the final all hands recap  So no matter how large of a group participates in the simulation  break it down into smaller cohorts so those involved can participate and don t get lost in the crowd   says Wassenaar   If it s too big  the logistics of the simulation will be overwhelming to run  If it s too small  the workload will be too much per person  You need to be big enough that not everyone is making every decision every day  If five to ten people are wrestling with each issue that arises during the simulation  you ve hit your sweet spot    Failing to get people on board   You need executives and employees to be fully engaged in the exercise  If the CEO and the board are behind it  everyone else falls into line  It shows when employees haven t bought into the exercise   then it s all for naught  In particular  managers must believe in the simulation  because you need them to provide the right information to assemble a realistic exercise  The easiest way to get the team to take it seriously is to signal through word and participation that there s buy in from upper level management  People need to be doing the readings and not just checking their email   Wassenaar says   The easiest way to get your CEO and other top executives behind a business simulation is to have them speak to peers who have been through the transformational exercise themselves  At New Relic  we got our CEO on board because both our Chief Revenue Officer and I had a great experience at Salesforce and VMware  respectively  working on simulations with BTS  Our CEO trusted that if business simulations could help two growing companies transform in major ways  they d help New Relic  too    One of the first hurdles is converting the faction of people who don t think there s time for a business simulation   How to Integrate Takeaways  When the simulation is done  you want to make sure that your company integrates learnings from the exercise   It s important to keep the spirit of the simulation alive after it s over   Wassenaar says   Otherwise you re just kicking the can down the road   Try the following approaches to make sure the exercise doesn t go to waste   Tie lessons into day to day tools  Use the tools you use to run the business coming out of the simulation   Continue to use the same management dashboards  sales processes and familiar company vocabulary  For some startups these areas may not be codified yet  and I would encourage people to think though getting more bang for the buck in creating them as part of the simulation  You can then carry those tools forward   Wassenaar says   In our New Relic simulation  we created our quarterly business review  QBR  scorecard as part of our company simulation  It highlighted the metrics that mattered to us in the simulation and which we used to determine the winners  We continued to use that scorecard for our real QBRs  That reminded us of the lessons learned in the simulation and was a great reference point and operating tool for our leaders    Make simulation materials part of new hire and manager training   Regardless of their specific role  new hires and managers must understand how the business works  The simulation gives people a shot at seeing the bigger picture   especially from a different vantage point  These perspectives help accelerate and quickly onboard new hires and managers  It can be as simple as including the simulation case as a required reading to help new employees quickly grasp the company s business  Or it might involve doing mini versions or full versions of the simulation   Wassenaar says   Something is better than nothing  It ll go a long way to acclimating new people to a company wide context and experience that shapes how the company operates    Set objectives and use success scorecards and checkpoints   What I recommend is before you start the simulation that you identify what needles you re trying to move for people and business metrics  Then create a scorecard and milestone markers to track progress  In New Relic s case  we use things like employee survey results and quarterly business reviews to keep us on track   Wassenaar says   We wanted to test new evaluation tools to monitor employee engagement and whether or not we re meeting revenue and productivity targets as a business  Integrating those tools into a simulation made people more comfortable with using them  and acclimated the team to being measured against new goalposts in their day to day jobs after the simulation    Simulations are fun  but not cheap  It s a big investment of time and you pay to play  So make them count   Simulate Your Way to Success  Simulations can be your secret weapon when you hit a roadblock as a company or a tough turning point  They re an investment of time and energy  but can yield significant returns  The best simulations are realistic  not overly complicated and have high executive engagement  Leaders need to be on board with the plan and support it from both a content and a morale standpoint  Companies can benefit from simulations when they re trying out a new strategy  pivoting the business or any milestone that might throw employees into disarray    Simulations can be highly focusing for a company  I ve found it work wonders when it comes to building better teams  And there s so much more empathy in and between teams  It s about walking a mile in someone else s shoes  and it s such an effective way to build cross functional teams that have stronger relationships and more understanding for each other   Wassenaar says   At the end of the day  we all want a stronger company  The way to get there is to practice over and over again at being a strong company    Photographs courtesy of New Relic,"[568 19 1061 17 190 826 1154 694 120 912 962]"
581,training-dataset/product/633.txt,product,Ken Norton on learning to say no People always talk about failure in tech as if it s a badge of honor  but it s terrible   says Ken Norton  seasoned product leader  partner at GV  and avid cyclist   It s not like I celebrate when I crash my bike    But failure is a natural thing we do when building products  just as the threat of crashing your bike is a part of getting on the bike  Every time we fail  we have new data  Now  I know not to try that wet corner at 35 miles per hour without leaning into it   he says with a smile   On a bike or in the boardroom  Ken Norton has climbed his fair share of metaphorical and professional switchbacks  Instrumental in developing GV s portfolio  which includes Uber  Slack  Nest  and One Medical Group  he mentors founders on all things product related  He also serves as the acting PM for the fund s engineering team and curates a weekly newsletter   Bringing the Donuts   which is read by thousands of subscribers in Silicon Valley and beyond   From leading product teams for Mobile Maps  Google Calendar  and Google Docs  to joining GV s operations team  Ken didn t just pump through tough sprints or push through resistance on his Trek  Being a PM requires endurance  honesty  and sheer determination   While technical know how is critical for a career in product  this former software engineer learned that one of the more powerful skill sets is developing a discipline of saying no  This isn t about shutting down ideas or being bossy  The discipline of no is about sticking to what s important and clearing away obstacles so the real priorities gain momentum  Looking back on what has made him effective over the years  Ken shares the times where he had to sweat through uncomfortable yet necessary conversations and set boundaries  Committing to a discipline of no has paradoxically fueled Ken s career trajectory  and it s his go to drill when managing teams  and even  confronting decision makers   The discipline of  no   Just like no one wants to recount the worst bike crash they ve ever had  no one wants to reveal their weaknesses at work  But  when asked  Ken Norton says confronting his personal fumbles redirected his entire approach    I m naturally a very collaborative  eager to please person  I m an introvert  I m conflict averse   Ken says   So the thing that I struggled the most with  particularly when I was moving from engineering to product  was being able to say no  Being unable to say no hurt me a lot early in my career  and it was actually a skill that took me a long time to develop    Being an introvert doesn t bar you from a career in product  However  after evaluating how his personality influenced his work style  Ken decided to adjust a few of his communication habits  The worst thing about being unable to say no  Ken explains  is that it creates ambiguity   for the team  and for yourself   If you re a product manager or leading a product team  you can probably relate to the many times when a sales manager or support engineer requests a change or a new feature based on customer feedback  Instead of clearly stating   You know  that new feature isn t a priority for us  in terms of the next six months   you might say   Okay  we ll look into it     We ll look into it  is like biking straight into traffic  You can bet there s going to be a collision down the road  Six months later  that same sales manager will check in on that feature you were  looking into  and learn it was an empty promise  This is tough to navigate because the customer feedback could be valid  but it s just may not be a high enough priority    In general  it s best to just say no  because if it s not a set priority  ambiguity creates a lot of missed expectations and frustration on the team   Ken continues   Ambiguity is the worst thing in product management because when you re not clear on what you re saying no to  it creates a lot of decision debt  which affects a team s focus and motivation     What I like to remember is that saying  no  to one thing is saying yes to something else  There are only a few things a team can really focus on  When you categorize something as non urgent or non important  that s not saying things won t change in the future  It just means there are other priorities that take precedence    Ultimately  what a product manager has to constantly fight is ambiguity  There s no room for being unclear  Goals have to be set and measurable  The timeline is finalized with milestones and benchmarks  Everyone on the team is honed in on what has to be done to hit their marks  But just because things are clear and decided doesn t mean it s going to be easy   In the world of product  being  and staying  uncomfortable  Ken Norton said in a recent keynote  is something to get used to  The liaisons between the executive team  engineering and design  product managers are often at the center of conflict  Product management quickly turns to diplomacy when people disagree on what s important to prioritize  And in these cases  it s important not to frame a conversation about priorities as a  people problem   When fighting ambiguity it should never get personal   However  this is particularly tricky when the ambiguity is due to  the boss  waffling  While it may get intimidating  a product manager has to facilitate a conversation with important stakeholders so there s a clear resolution on how to act  This isn t just necessary for the team s workload and focus but also for the integrity of the product   Uncomfortable conversations  In tech  the inability to say no is a symptom of a larger problem of ambiguity  It s why it s so important that leaders make definitive choices in product roadmaps and paint a vision of the company  If there s not a clear pin dropped in the proverbial Google Map  how can any one move in the right direction    I ve definitely had to sunset products before  but when I look back on why we ended a product  it was largely due to the fact that the leaders weren t fully committed to the idea from the beginning   Ken says   I remember working for a difficult person who ran an org and  despite his apprehension around the concept  still thought it was worth having me and a few other people thinking about it    For Ken  this was frustrating    I spent more of my energy trying to convince the leader of the org that this product was something we should actually invest in  rather than putting that energy towards managing the team to build it   he continued   Ken now knows how he should have been communicating   What we needed from leadership was an affirmative  let s go all in on this  Let s put people behind it  let s put energy behind it  let s put the rest of the company s focus on it  But we couldn t get that until we convinced them   Ken remembers   Hindsight is the greatest teacher  and from this experience Ken realized that he should have  forced a decision   Though it sounds confrontational to do so  pushing leaders to make a decision doesn t have to be without tact   Reflecting  Ken wishes he could have said to this org leader   We can t be in this half alive  half dead state  If we don t get a yes  we re going to have to stop because we re not going to accomplish what we want to accomplish without your full support and investment     This definitely goes back to my belief that making no decision is worse than saying  no    Forcing a decision  Ken explains  is part of the PM job description  And unique to other roles in an organization  product managers have a powerful currency when it comes to bringing people together with the sole purpose to resolve issues    If I ve got three different people that disagree  then it s my job to get them all together and come to an agreement on what to do next   says Ken   If people want to argue  that s fine  and the decision may not go the way I want it to go  but at least we reached a point of decision    It s in these moments where Ken feels like a product manager is also a mediator  The goal is to reach a decision  No decision is not an option  At Google  aligning complex sets of priorities is par for the course  but this is mostly due to the fact that products are very integrated  As he puts it   Things can t just be shipped in a vacuum     A product may be linked with Android Maps and the Homepage  so as the product manager you would have to bring all the necessary teams together to decide what you need from each of them   he explains  Do I want this team to commit to letting me ship my feature in their code  or do I want them to commit to giving me the support I need   When there are many factors and opinions at play  it may seem impossible to come to a resolution  In these cases  deferring to those above you is best    While at many companies escalating to a manager is seen as passive aggressive   because you re either trying to box someone else out  or it s some kind of  failure    sometimes it s the best way to come to a conclusion on what needs to be done   Ken says    Besides  that s the whole reason managers exist   they help resolve conflict  But what s most important to remember when you do bring a manager into a conflict is that you have to communicate the consequences of not making a decision    We ve got 15 people waiting  We ve got 10 people who have built this thing that now can t be shipped  We ve got 20 million users who can t do X and Y  What are the consequences of it  In these cases  clearly stating the trade offs or illustrating the repercussions of inaction is the most effective way to inspire people to make a decision   PMs need to hone the fine art of briefing your superiors   being able to objectively interpret both sides of the argument  spell out the consequences  facilitate a healthy discussion and get a yes or no decision   While advocating for diverse opinions sounds like a key ability in product  there will be a number of times where you have to be the voice of the people who might disagree with you and others  In fact  those you speak for might not even be in the room   Filling the empty chair   If you re meeting with the executives  marketing  and sales team  and you re talking about a new product direction  you have to speak on behalf of the engineer   Ken states   And  if you re with the entire team  and you work at a startup  and your founder or CEO is not in the room  you need to be able to channel the CEO in the room  Often times  at Google we d think   If Larry Page was in the room  he would remind us      Ken calls this meeting technique  filling the empty chair   But this isn t just being someone s proxy and voting for consensus  In fact  when you re filling the emptying chair it s probably even more important to share what  your person  would say no to more so than what they d agree upon  Because when a room is filled with yes s  oftentimes the conversation desperately needs someone with the foresight to spot the potential potholes  For example  when representing an engineer  a PM needs to remember the limitations of the code   Sure  when you re the only person in the room giving a version of  no   it might seem like you re just pumping the brakes on a meeting s momentum  But what you re actually doing is staying true to preset priorities and accurately expressing stakeholder points of view  From the onset  it s important to make it clear why you re contesting an idea so it doesn t seem like you re disagreeing for argument s sake  And when discussing technical matters  it s even more important to have incredibly clear communication skills   While engineers may implement code  product managers still have to understand the architecture so they can express  with confidence and specificity  whether a new feature is possible  given the current framework   There s no room for ambiguity during technical conversations  This may actually be why some of the most logical and clear communicators in product are also those who hail from technical backgrounds   Shifting gears  Before the idea of product and venture capital was even in his sightline  Ken was a software engineer  a CTO  and a founder of a cloud integration platform company    I recognized pretty early on that I m an okay programmer  I m not a great programmer   says Ken   I tended to be the engineer that everybody wanted to ask questions when it came to technical details  or when they needed an engineer on a sales call or in marketing meeting    At the juncture of implementing software and architecting it  Ken switched gears  But before he officially transitioned into the  product track    by starting his own company   he learned that the most valuable prerequisites for a career in product can t be practiced in a vacuum  They hinge on communicating and working with others    So much of PMing is code switching amongst different types of professionals or large groups   Ken remarks  Being able to steer through personal and group dynamics is not just an important skill for PMs  but any technical leader  whether you re young or seasoned in your career  Who you communicate to and how you convince or inspire someone  or an entire team  will inevitably affect the entire process and the end result   While Ken s discipline of no sounds one dimensional  he would also be the first to admit that saying no doesn t rule out being flexible or a good listener  In fact  the interdisciplinary nature of product management requires flexibility  It s one of the keystones to his rubric  When shuttling between roles of mediator  liaison  and sometimes even instigator  having that adaptive nature  to alter your focus or tone depending on the audience  is foundational to effective communication   Photographs by Stephen Bowler  Graham Campbell  and Jeremy Segrott made available under an Attribution 2 0 Generic license,"[581 1061 17 826 190 315 694 1030 1154 1385 1146]"
601,training-dataset/business/205.txt,business,the technical interview is broken   Code2040   MediumReal talk  the technical interview is broken  The following was written by Karla Monterroso  our VP of Programs   As anyone at a fast growing startup knows  scaling can show you what is broken  yet hidden  in a system  This summer  Code2040 more than doubled the size of our Fellows Program  to 87 students  As part of this growth  the technical interview landed at the top of our list of broken systems in the tech industry   We know a lot of you have noticed the same problem   Companies we love have tried to be thoughtful about this but even self aware  data driven  inclusion oriented teams are struggling to develop scalable  equitable evaluation processes  The defects have grown so obvious that at least five partner companies have told us they re starting from scratch  They know what we have suspected  current interviewing practices provide mediocre  biased results   Meanwhile  a cottage industry has emerged that reminds us uncomfortably of SAT prep  An individual can spend thousands of dollars learning the cultural norms necessary to get themselves into a desk at a technology firm  Research tells us the SAT doesn t effectively predict college or career outcomes  and we believe current interview practices do not currently predict future success within a company   Candidates shouldn t be patching this deficiency on their own   much less spending their own money to do it  That s unfair and inefficient  We need a systemic fix   We need to refactor the technical interview   Staging an intervention  This year  after countless conversations with engineers  hiring managers  recruiters and others in our network  we re getting to the bottom of this issue  We convened an all day think tank with GitHub  Slack  Medium  Lyft  Pandora  Intuit  Pinterest  LinkedIn  and former Stripe VP of Engineering and Code2040 board member Marc Hedlund   Most of those in the room made their careers in building software  either as developers or managers of the development process  We also had support from recruiting and sourcing professionals   Here s what we figured out together   Process is not just broken  it s non existent  There s little industry or even company consensus about what a useful process for technical interviewing looks like  There s no universal understanding of what must be tested  why it s part of the conversation  or how to fairly evaluate the results  This inconsistency makes murmurs about  lowering the bar  even more frustrating to hear   One of our partner companies  Medium  came out of our think tank armed with information to build a process document and create consensus inside of their own company  We highly recommend this kind of intentional thinking around an organizational approach   Even when companies create a rubric  the questions asked vary wildly based on the experience  abilities  and biases of the interviewer  Alongside this lack of organizational process  many interviewers receive limited training on the basics of running a good interview  This creates ad hoc  unpredictable interviewing experiences across a majority of companies   We need to create scalable content for measuring technical competency  While there isn t a universal consensus for sound process  there s surprising consensus around what doesn t work  We have heard from so many of you about how frustrated you are even when you go out for your own technical interviews   Current technical interview practice bakes in social signaling  At the least charitable interpretation  technical interviews may be seen as a sort of hazing to establish that a candidate belongs  Rather than discovering the candidate s skills  evaluating their depth  and mapping them to the job at hand  interviews can devolve into a game show where the prize is an offer letter   These interviews often have tests of trivia  tests of performance before groups  even surprise coding challenges that spring up according to the interviewer s whims  We believe these tests of mettle are unrelated to everyday job performance   Here s a summary of the unproductive practices our group surfaced   A focus on brand names is a distraction  Whether an elite school  a well known company  or an obsession with rank at university  relationship to brands hold enormous sway in interviewing conversations  We believe  and our think tank agreed  that this emphasis is unproductive   and not predictive of a candidate s potential  Assuming these pedigrees are essential to success disadvantages those marginalized by race  class or gender  Algorithm and data structure quizzes are a red herring  Many interviews center conversations on algorithms and data structures that are unrelated to the day to day role candidates audition for  This blanket obsession not only devalues other important skills  it fails to embrace the diverse talents  interests and experience even of senior technologists we ve met  Artificial  high pressure tests introduce noise  While solving problems with diagrams and whiteboards is a common tool of collaboration  many organizations take evaluating this practice too far  Very few working engineers prefer a dry erase marker over their favorite text editor  Despite this  candidates may be expected to code on a whiteboard  under scrutiny and time pressure  Not only is this performance unrelated to the demands of most jobs  it s also an enormous trigger for stereotype threat   So what can we do   Code2040 remains committed to untangling this issue and supporting our partner organizations as they do the same  Ineffective interviewing is a problem that impacts too many of our students for us to sit idle  As our friends at the Management Center once told us  when people practices are not explicit  they disproportionately impact marginalized communities   Community  let s get explicit   Our next task will be convening a group of technologists to tackle the problem of documenting scalable strategies for improving hiring  While we assemble this guidance  we can offer some takeaways as you begin your own journey to improve hiring at your organization  For partner companies  we ll have some of this guidance available at our Code2040 Summit   In the meantime  here are some things to get you started on the path   First  consider that you re building teams and hire according to that reality  A biased  one size fits all hiring approach will disadvantage anyone trying to build robust teams with balanced skill sets  Some developers are entirely productive despite flunking algorithm trivia  If your interview process evaluates only that and not  say  design thinking or project planning skills  you ll find yourself creating lopsided engineering teams that struggle to collaborate with other parts of the organization   Next  consider evaluating a project a candidate built on their own terms  Our partners at Slack will take the technical challenge candidates complete and ask them questions about what they learned from the choices and tradeoffs they made  This helps surface how candidates think about problem solving and navigating the complexity of a software project  We believe these observations will tell interviewers much more about candidate abilities than any rote recitation of computer science fundamentals   Fundamental to any screening is whether your assessment measures a candidate s ability to learn  Technology evolves all the time  The most successful contributors will be those who are most capable of teaching themselves new languages  APIs and processes for solving problems   At Code2040  we ve built an intern level coding challenge to help qualify incoming fellows  Students write code in the stack of their choice to connect to a simple web API  which gives them real time feedback on their performance  This challenge not only provides a chance to write code they can talk about during interviews  it also assumes that technical skill isn t fixed   that even if a student doesn t know immediately how to solve a problem  a bit of googling  persistence and experimentation can open the door  As the challenge escalates in complexity  starting with string manipulation and building to date time transformations  both our students and our partner companies can see a growth mindset at work   Be vigilant about how your current technical screening is a behavioral screening in disguise  While a candidate may have learned certain habits from previous employers or projects  the agreement of those habits with your organizational preferences is not the same as technical aptitude  Be intentional  Rather than measuring identical thinking with your current team  consider how your evaluations can instead measure how well candidates match your organization s appetite for solving problems collaboratively   Next steps  We ll be working on specific  public guidance for improving technical interviewing  Most of our think tank guests  though  went immediately to work on troubleshooting and refining their hiring  This work reveals many immediate bugs  and their initial fixes may reveal plenty more we don t see right now  Fixing the technical interview will take time   both for individual organizations and for our industry as a whole   Still  indifference or resistance to progress here is something we now see as a red flag  It may signal an inflexible company culture that avoids introspection and embraces exclusivity  Those qualities have a negative impact on a company s ability to retain talent from marginalized communities   not to mention its overall cultural health,"[601 76 304 269 255 1061 1276 19 1385 116 315]"
624,training-dataset/business/1170.txt,business,The Science of Speaking is the Art of Being HeardFor thousands of years  people have constructed cairns  a human made stack of stones  as landmarks  monuments or tributes  These days  hikers will add a rock to a cairn as they reach a summit of a mountain or a turning point on a trail  The longer one sits across from Khalid Halim in Reboot s San Francisco office  the more one realizes his sofa is a modern day cairn  Instead of stones  well known tech leaders  angels and VCs have dropped their guard there along with their stories  ambitions and fears  It marks the start of many technologists  inflection points   Halim is the cofounder of Reboot  a coaching firm that s worked with leaders at companies such as Coinbase  Lyft  Kickstarter and Etsy  yet what s more impressive than its list of clients is when Reboot started with them  Halim has helped a founding team of six people in an apartment grow into a now famous startup that s 100 employees strong  He s coached an executive team as its company grew from a 100 person  domestic startup with a  300 million valuation to a 1 000 person multinational valued at  5 billion  There s an adage that being an entrepreneur is like building the plane as you fly it  Yet even before helping founders navigate their metaphorical flight paths  Halim literally fueled the tech community at its greatest heights  He s the founder and former CEO of a California based inflight catering provider for private jets   As a sought after professional coach and former turnaround CEO  Halim specializes in untangling complex company communications to help organizations build upon one narrative  In this exclusive interview  Halim draws from his work with Carl Buchheit of NLPMarin and expertise in neuro linguistic programming  NLP  to reform the way leaders communicate with their teams and vice versa  He dissects four meta models that ve proven to be especially effective tools for the leaders he s coached   Rebooting the Operating System  The level of depth in Halim s work on communication is alluded to in the name Reboot io   It s a play on words  If you ve ever called tech support because your computer is frozen or slow  you ll be told to reboot it  People come to us when they re unsure what to do next or how to resolve a crisis   says Halim   The  io  of Reboot io refers to the operating system  It s a reconfiguration at a deeper level not just installing the  new app   Whatever we work on that ll help you run a better board meeting will also apply to your whole life  Any effort is at the core of what it means to be human among other humans    In the case of communication  a central component of a human s operating system is the reptilian brain and amygdala   I don t know who coined the term  but you cannot come across a management or communication training program these days that doesn t include the term  amygdala hijack   But how do you hijack an amygdala   asks Halim    The primary function of the oldest part of our brain is to answer the question  Am I with like kind   In other words  if I m in a group of deer  the amygdala first asks  is there a lion around  If the answer comes back  no  I am not with like kind   then the reaction to fight  flight or freeze is triggered   says Halim   The amygdala  hijacks  any further processing until the animal is safe  If the answer comes back  yes  then the prefrontal cortex  the part of the brain that make us uniquely human  can come online fully to engage and connect with others    The ultimate goal is to remove the unconscious triggers so that anyone on your team can have the full conversations they want and need to have   There are specific meta models that have been developed to help people with different work styles  functions and perspectives more seamlessly communicate as  like kinds    says Halim   Paying attention to these models and mirroring them back calms the amygdala so communication can actually happen  It s not a  managers only playbook  or a  secret hack   but techniques that should be openly shared and used by every member of a team    Four Meta Models That Underpin Effective Communication  Yes  we know there are countless pat tweets  blog posts and management maxims about communication  But it s that insistent emergence that should validate its significance and its difficulty to execute well  So before jumping into the specifics of each meta model  here s why Halim sees it as so central to leadership and company building   1  The output of management is a high performing team   2  The team s primary function is to coordinate action   3  Humans coordinate action through communication   4  Communication is based on each individual s values  beliefs and identity   5  Values  beliefs and identity are filters for how we see the world and these filters are called meta models   Developed by Rodger Bailey and adapted by Shelle Rose Charvet in Words that Change Minds  meta models are sequences of mental and lingual adjustments that lead to different behavioral outcomes   Communication is not just about what you say  it s about the reaction it causes in the listener  Often we think delivering a message is enough without checking to see if it was actually received  This can be made more efficient with attention to meta models  Lastly  communication is making sure there s enough shared context for the person to act on what s next   says Halim   Meta models are categorized as motivational traits  how a person triggers or loses interest  and working traits  how a person treats information   As outlined by Charvet  here are four meta models two  motivational  and two  working  that Halim shares most often with clients   TOWARD VS  AWAY FROM  This meta model is about motivational direction  specifically whether a person is predisposed to focus on goals to be achieved or problems to avoid  Here s how individuals who classify as  toward  or  away  can be identified    Toward  people are motivated to achieve and attain goals  They have trouble recognizing problems  and are adept at managing priorities  They frequently use words such as  gain    obtain    attain    get   and  achieve     Away from  people are motivated to solve problems  They focus on what may be going wrong  They frequently use words such as  avoid    steer clear of    get rid of    exclude  and  not have    Halim coached a CFO who was frustrated with his CEO   He told me that he went to the CEO and told him   We need to cut 10  of our burn or we ll need to lay off some of our staff   He couldn t understand why he wasn t getting through to his CEO   says Halim   I told him to do me a favor and go back to him and tell him you have to cut 10  of the burn but instead of telling him the negative consequence of not doing so  tell him what the company gets  Which is what   Two more months of runway   he said  Great  say that    The CFO told Halim that that s what he had said originally   Not exactly  The CFO spoke of budget cuts and layoffs  not of the months of runway gained   Halim says   The CFO changed his statement and the CEO who had said no to the cuts  considered them when the CFO reframed his statement  The reality remained  except the CFO spoke initially of moving away from a full budget instead of toward more runway  When he spoke as a  like kind  of the CEO  he used  toward  language  which resonated  CEOs don t tend to be  away from  people  They move toward the future    Of course  pure dichotomies rarely exist   Studies have found that 40  of people are  toward   40  are  away from  and 20  are equally both  In fact  some of the most influential leaders are those who not only can identify if they are talking to  toward  and  away from  people  but can appeal to both   says Halim   In her TED Talk  Nancy Duarte unconsciously decodes this meta model at play when analyzing some of the great speeches of iconic figures like Steve Jobs  or Martin Luther King Jr   who famously said   I have a dream that my four little children will one day live in a nation where they will not be judged by the color of their skin but by the content of their character   King talks both about going away from racism and segregation and more toward a more enlightened future of equality  He appeals to both types of people listening to him    For each meta model  there is typically a question that can help determine which type of person someone may be   To decode  toward  versus  away from  people  ask the following  Why is that  criteria  so important  Ask it up to three times to get to the heart of whether a person is moving toward that criteria or away from it   says Halim   Any action can be described as moving away from something or towards another  Like a glass half full or empty  how you see that movement has ramifications   INTERNAL REFERENCING VS  EXTERNAL REFERENCING  This meta model is about motivational source  particularly if a person is driven by judgments from external sources or by referencing her internal standards  Here s how people who classify as  internally referencing  or  externally referencing  can be identified   Internally referencing people make decisions based on their own internal standards  They say  only you can decide    you know it s up to you    what do you think  and  you might want to consider   as this language reflects how they make choices   Externally referencing people seek outside information and feedback to make choices  The language they use includes  _____ thinks    the impact will be    the feedback you ll get    the approval you ll get    others will notice  or  give references    Once a CEO reached out to Halim to discuss a conflict with his executive team and worsening relationship with a board member   I started by asking about each of the executives  Eventually  I heard a similar refrain   My board member vouched for him  saying he was among the best he s worked with   It clicked   says Halim   I d seen this before  especially with young  first time CEOs  Like many in his position  he d defer to a more experienced board member to hire an  all star team   The result is that he brought on a team that worked well with his board member  not with him  One by one  we spent the next year assembling a new leadership team  relying on the board appropriately to source  vet  interview and close candidates  but not abdicating responsibility to the board to tell the CEO who to hire  A board is an invaluable resource for a leader  but a CEO must be sufficiently internally referenced to make a final decision    In that case  there s a clear distinction between when the CEO was internally referencing or externally referencing   At times you ll see leaders especially green CEOs or founders who are very external  They talk to their board  investors  peers and direct reports seeking validation and get pulled along   says Halim   Alternatively  some CEOs are internally motivated because everyone has told them from the start that they can t or shouldn t do something    Determining if a leader is internal  or external referencing is paramount to the team   If you re talking to a person who is internally motivated  you can t actually convince her of anything without her tapping into her personal experience  So  if I m having a conversation with her about a decision for the company  I ll need to reference a time before when the company did something and she changed her mind  Action will come from her knowing and recollection of that moment  not my convincing of her to do it   says Halim   On the other hand  appealing to externally referencing people means giving your opinion and citing outside references    When Khalid works with founders  he s often had the conversation that he refers to as  taking your seat as CEO    When a leader takes her seat as CEO  she realizes she has all the resources she needs  she knows what she needs to know to build the company  and respects those who ve gone before her and the mistakes they ve made   says Halim   Ultimately  it s about finding the balance of the two traits  Leaders shouldn t be so external that they just listen to the board  Conversely  they shouldn t be so internal that they blindly bulldoze a path and ignore the abilities of an able executive team    Silver Bullet Question  To determine if a person is internally  or externally referencing  the helpful question to ask is  How do you know you ve done a good job  at _______    Halim stresses how essential it is to know this motivational trait of leaders  He says   It s how they make their decisions  Do they stem from an internal knowing or an external reference  The former will say  I just know  I look at it and I m really proud of what I ve done   The latter will say   People tell me I ve done a good job   It s simple  but so effective    A leader will fly the plane regardless  But there s a difference between auto pilot and co pilot  It s about making conscious choices   SPECIFIC VS  GENERAL  This meta model is about scope  and informs the working environment people need to be most productive  This strategy helps define how big a picture a person can manage  Here s how individuals who are either specific or general in scope can be identified   Specific people operate with details and sequences  They cannot see the overview  They say  exactly    precisely    specifically  and supply details and chronology   General people focus on the overview or big picture  If they handle details  it s for short periods  The language they use includes  essentially    the important thing is    in general   and they return to concepts   For this model  Halim draws from an experience that is common across functions at work   We ve all had the experience of these two different styles  You probably get two types of emails in your inbox  right  One is a few bullets and the other is paragraphs of information  There s probably one that annoys you and one that eases your whole system   says Halim   As it suggests   general  is a top level overview  with the intent of communicating breadth merely what s going on  Whereas   specific  is the fine print or play by play  provided in deep detail    Halim s client was a CMO who was crossing wires with her CEO   Naturally  the CMO is about narrative  story and writing full accounts of her work  She d receive response from the CEO in terse bullet points  She was convinced the CEO was angry at her  as she put her heart on paper and she got back three bullet points   says Halim   Knowing the executive team  I knew the CEO loved it  but it took walking the CMO through this model to understand what happened  The CMO was a  specific  profile  while the CEO was a  general  type    Without decoding this difference  there could ve been continued confusion as their conversation played out over email or in person   It can devolve quickly  If the CMO receives bullets  she may think that the CEO doesn t trust her with an equal amount of context or information  whereas quick notes could be the CEO s style or intention  so as not to burden the CMO with excessive context   says Halim   If the CMO had recognized the preferred scope of her leader and vice versa the bottleneck and assumptions could ve been sidestepped    In the case of the specific versus general meta model  Charvet nor Halim have identified a  silver bullet  question that can help decode  specific  from  general  people  but written and verbal correspondence is a leading indicator  Use an example of an exchange to prompt a conversation and determine the default of your executive team and colleagues early on   SEE  HEAR  READ  DO  This meta model helps identify how a person is most naturally convinced  It zeroes in on what type of information a person needs to begin the process of getting persuaded about something  Here are the different types  how to identify them and the distribution of behavior out in the world  per Bailey s research    See  people  55   are influenced by what they perceive  They might say   Oh  I saw that work at my previous company     Hear  people  30   rely on oral presentations or listening in versus leading meetings  They might say   My board told me and that convinced me     Do  people  12   are persuaded through their own action  They might say   Oh  I ve done that before     Read  people  3   are swayed by reports  research or meeting notes  They might say   I read it in a report    It s key to remember that these channels are not necessarily how a person might intake information  but the pathway through which they are ultimately persuaded to act   I recall instances when members of executive teams were trying to make their case to the CEO through the channels in which they themselves would most likely be convinced  For example  if the CTO was data driven  he d share stacks of reports with the CEO   says Halim   If that indeed was the right channel for the CEO  he d have read the report and taken action  It would have saved everybody a lot of time  But it wasn t his channel    Silver Bullet Question  To determine how a manager or colleague is convinced  ask  How do you know that someone else  an equal of yours  is good at their job  One of the earliest and recurring assessments in the workplace is how a person does his work   We intuitively gauge others  performance and typically do so periodically in formal reviews   says Halim   By asking how one knows if an equal is good at their job  you not only remove the additional noise that comes when evaluating someone on another level  such as a manager or report  but subtly hear the way in which they made the assessment  Is it by watching them  hearing good things  reading an evaluation or comparing them with yourself  if you ve done that work before    The Tip of the Iceberg  Halim draws from over a dozen of these meta models  as developed by Bailey and advanced by Charvet  Yet  these models constitute only a sliver of one variable of a broader equation used by Reboot and its clients  The company calls this equation  The Bet  and here s what it entails   Practical Skills   Radical Self Inquiry   Shared Experience   Enhanced Leadership   Greater Resiliency   As you can see  The Bet is composed of three parts  but it s the tactical skills  such as the meta models that everyone comes to Reboot to learn  But to use a cooking metaphor  if I show you how to use a paring knife  that s a tactical skill but it doesn t mean you re a chef  It just indicates that you know how to use a knife  which also means you can do a lot of damage   says Halim   In a business context  this is the equivalent of getting tactical skills and advice from one s board  investors or other CEOs and unwittingly building someone else s company    That s one of the very first points that Halim makes when clients walk in his office  Early on  he explains the two pronged nature of his role   I have two goals   he says   First  that you build the type of company that s unique to the kind of company you can run  And second  that you don t wake up one day and hate to come into work because you didn t build your company    If its clients are willing to make  The Bet   Reboot is confident there ll be  a return   In brief  here s a bit from Halim about what each variable of the equation entails    At the core of radical self inquiry is letting go of your ego  It s not fake humility  It s acting on the core truth that we don t know what we don t know and adopting a learner s mindset again  That means an acknowledgement of what brought you to this point and an authentic admission that you ll need more self inquiry to get to the next level     The practical skills are the tactics  templates and techniques used to build a company  They can range from meta models to facilitate more effective communication to concrete ways to resolve conflict with your co founder     The CEOs who are  crushing it  are privately emotionally spent and worrying about the next big hire  raising funds  deploying teams and launching products  Shared experiences ground people in that actual reality whether that means joining a conversation with your peers or hearing your issue articulated and analyzed by another     Early on in a company  CEOs managing by pure force is actually what s needed  It s the difference between launching a rocket and keeping one in orbit  Enhanced leadership is when the charismatic founder with a strong vision starts to enable people  a leadership team  to help bring the the company achieve its full potential  For the founder  that s a moment of transition and an exhibition of greater resiliency     It s called  The Bet  and not  The Formula  because we don t pretend that we have all the answers  But we are smart gamblers  We know the odds are stacked in our favor because we ve seen it work so many times before in our practice and in our own lives   says Halim   Also  it s a bet because we don t presuppose that anything the other person has been doing is  wrong   It s just the best strategy they have had so far and we want to acknowledge how far it has gotten them already  There s not one way  but for each individual there might be a better way otherwise we d all take the template and build successful companies  Lastly  there s an inherent building of trust when someone accepts your bet and follows you down a path  That trust marks the beginning    Bringing it All Together  To take on the elements of  The Bet  with Reboot is to discard ego  embrace a learner s mindset  honor but not settle for what got you here  and enable others to become more resilient yourself  The seed of this transformation is in the contours of how one communicates and leads  The first step involves learning and applying basic meta models in each interaction with your team to help facilitate communication as  like kinds  and work better together  Admittedly  this step is only the beginning of  rebooting the operating system   a fundamental practice that can bring empowerment and resilience to leaders  their companies and people    Entrepreneurs become extraordinary storytellers because they themselves are their own most loyal  eager and captivated audience  That is how they ve fostered the type of conviction that allows them to ask for millions of dollars to build a company that doesn t yet exist or to convince people to leave steady jobs to join them   says Halim   But they  like everyone  only use the best strategies they have communication presets that were wired when they were young  The founder becomes a rare leader when she can communicate and resonate with all of her people  That takes a conscious change an awareness  a mindfulness  radical self inquiry in communication  Only then do leaders get that it s not about what is said  but what s heard,"[624 1061 19 962 120 1154 190 644 17 1292 1357]"
644,training-dataset/business/1328.txt,business,How to Lead and Rally a Company Through a LayoffThe Grateful Dead  Jimi Hendrix and U2 aren t the only ones who can fill up the iconic Red Rocks Amphitheatre in Colorado  If every person that Beth Steinberg has helped hire took a seat at the venue  about 500 people would be left standing  They d hail everywhere from fashion retailer Nordstrom to gaming giant Electronic Arts  from solar provider Sunrun to social network Facebook  Any talent leader knows how astoundingly hard hiring can be   until they execute a layoff  which Steinberg has had to do at least once at nearly every company she s worked  If you think hiring 10 000 people over a career sounds daunting  try laying off 2 000 of them   Steinberg started her career with a decade in retail  in which layoffs are common given the seasonality of the sector  As she began working with more technology companies  she managed another type of expansion and contraction cycle  but this time mirroring the ebb and flow of capital and talent  In addition to some of the aforementioned names in technology  Steinberg has advised several organizations such as Ideo org  Puppet Labs and Hackbright Academy   Permanent layoffs   or what are more accurately known as reductions in force  RIFs    are terminations rooted in structural and market based changes  versus the performance of specific individuals  Here  Steinberg addresses the four phases of a permanent layoff and outlines the people to convene and steps to take during each stage  Drawing from anonymized examples from her career  she brings tactics to one of the most difficult times a company faces and what to expect from a leader  terminated employees and the team that remains   Layoffs transform all founders and confirm some as leaders   LAYOFFS ARE ABOUT PEOPLE AND HINGE ON PROCESS  When it comes to layoffs  Steinberg has worked with leaders who are incredibly empathetic with employees  but lack experience  as well as those who can lead layoffs methodically  but without a keen awareness of their impact on their team  The key is to get those elements in equal proportion    Layoffs are first and foremost about your people  those who will be let go  those who remain with the company  and the leaders who guide the company through the process  So while it s a business decision  what s in motion are the people you ve hired and have helped you build   says Steinberg   Every company wants leaders who naturally understand and guide their company according to this principle  But even the most capable leaders can falter when emotion  inexperience and pressure come into play  That s why you need a process that orients leaders and couples attentive management with a thoughtful plan    BEFORE YOU KNOW IT S COMING  Steinberg still remembers the experience that shaped her current philosophy toward layoffs because it caught the entire company off guard   It was my first HR leadership position at a very early stage startup  Over 18 months  we grew from about 50 to over 300 people  Headcount went unchecked as we went after a business model we thought worked   she says   Turns out we didn t have the model to justify our team  We needed to get our burn rate down immediately  The layoff strategy was haphazard  some decisions were based on performance  team  popularity  Thinking back  it was entirely the wrong approach in every possible way    The most disastrous part was the leadership at the top   Our CEO took very little   if any   accountability and actually did not come to work the day of the layoffs  So the CFO  a few other managers and I had to sit down and lay off about half the company   says Steinberg   It was very painful experience because there was not a lot I could say that made me feel like we were doing the right thing  Years later  it still makes me sad and wonder what else I could have done    When Steinberg works with leadership teams  she makes a note to double check that headcount is justified whenever hiring plans are being discussed   It s not to be a killjoy  but to add in a checkpoint  It s hard work to get funding or close a big customer  so when there s the opportunity to grow  the first reaction is often to hire more people  It s as if it sends a signal that the company is making it   says Steinberg   I realize now that I had the strength to step in and layoff people  I just wish I d had a stronger voice earlier on and asked   Why are we hiring all these people   The truth is that there needs to be an awareness before there s a strategy  If your hiring plan is one side of the coin  your layoff plan is the other side    Steinberg understands that the quick turns of company building make this type of methodical thoughtfulness around layoffs at the onset not easy   especially for startups  So she suggests taking incremental steps to usher in that philosophy   Map out capabilities  not just headcount    When managers grow teams  I often see them conflate people with skill sets  They need a sales director  so they immediately think of that profile existing in a separate person  often outside their company  If that happens with every team leader  all of a sudden the company is hiring left and right   says Steinberg   By the time you define a profile  put lines out into the market  vet candidates  interview  hire  extend an offer  set a start date  onboard and get the hire spun up  you could be looking 3 6 months down the line  And that s probably conservative    Instead  define the skill sets you want   By extracting the skill sets you need from the person you think might have them  all of a sudden there are many other ways of obtaining the capabilities you need to grow  You may still need to hire  but maybe you ll realize that a freelancer or contractor can supply what you need  Or an employee you already have is able to grow into that skill set in the same amount of time it d take to hire someone else   and would be current with institutional knowledge   says Steinberg   From a management point of view  these types of options keep your workforce flexible and lean  Also  employee development not only gives you more depth with your existing workforce  but it s a retention mechanism  They re not mutually exclusive  but instead of just immediately growing headcount  you re also developing talent    Steinberg has helped not only heads of people develop these talent plans  but also entire leadership teams   All group leaders should go through the exercises of mapping out the skill sets they need 12 18 months down the line  I know it s hard because they re stretched already to hit pressing goals  but it makes life much easier over the long run   she says   I m working now with a leadership team that s never done talent planning  I told them that if their talent lead knew what they might need 12 18 months from now from a skill perspective  they can start seeding those relationships now  Some upfront work would make their lives   and the talent leader s life   much easier    For leaders or startups that need to keep talent planning low lift  Steinberg can boil down a conversation about critical positions into five key questions   What is the position that s needed   What are the key skills and competencies   When will these skills be needed   Why will they be needed what is the work   Who are potential internal candidates or external profiles who could fulfill this work   This lightweight version is powerful when it rolls up to give a talent leader or founder a sense of the skill sets the entire company will need down the line   The mindshift from headcount to skill sets is one shift  a systematic way to track those needs is another   says Steinberg   Beth Steinberg  A budget is not just a number  but a signal   One of the immediate challenges facing leadership teams at growing companies   especially quickly scaling  dynamic startups   is deciding how and what information should flow throughout the company    It s hard to know where to start  so here s what I recommend  all people leaders  from the C suite to the frontline leaders get exposure and access to view the annual budget  I ve seen how this act has made founders nervous or fearful  but also how they relax when their people rise to the responsibility of what s been shared with them   says Steinberg   Here s what happens  the health and of the company is no longer an abstract concept  They see in print how the biggest expenses are facilities and salaries and how increasing those fixed costs quickly make burn rate accelerate over time  It s the only way managers will learn and get better    When this exposure happens long before any sign of a layoff  it is an act of trust and every part of the leadership is empowered  When it s done just before or after the layoff  it s an explanation more than an education  There s a power vacuum  and exposure at that stage of the game makes middle and frontline managers feel informed by   not in line with   their leadership    Create a view only  shared document that  at minimum  outlines budget and projected headcount for each team  I encourage leaders to share the entire budget to avoid different versions throughout the organization   says Steinberg   Then bring in the finance leader if there is one   or an external consultant  if not   to explain the budget and budgeting process for non finance leaders  It sounds basic  but this act is as critical to the long term health of a company as the budget itself  Thereafter  set a quarterly check in to provide voiceovers to any changes  Then  when there s talk of needing to reel back to get to profitability or to raise more money  you ll be surprised how people rally around a goal driven by information they ve been entrusted with    Otherwise  there s a lot of ground to cover when something like a layoff hits   Without that exposure to the business plan and budget  a freeze in headcount and impending layoff will catch the company off guard  For leaders who hesitate with transparency or worry that their decisions will be called into judgment  I remind them  people can usually handle the truth but they can t handle feeling as if they ve been deceived or purposely left in the dark  That feeling seeps into the culture and dissolves the conditions that allow people to do their best work    A layoff isn t a thunderhead looming on the horizon  There s agency  It s a tool used as a last resort   WHEN YOU KNOW IT S COMING  A layoff shouldn t be a surprise to leaders  nor to its people  It s not something that happens to a company  It s an act by its leadership when no other routes can be pursued  In other words  when a layoff is your way forward  you should implicitly be telling people that you ve exhausted every other route  Here is what you should have already considered   Delay hiring    It s not uncommon for companies to move resources from one quarter to a later quarter  Leaders should ask their people managers to look at their goals and headcount asks  and then see what s realistic to move  I ve never had leaders not work together to delay and re prioritize hires    Cut salaries    I ve been at a company where every senior leader didn t take a bonus   which amounted to about 33  of our pay   in order not to have to lay anybody off  For many  the cut felt substantial  Not every senior team will like it  but driving accountability at the highest levels is paramount and can prevent a layoff    Reset the senior junior employee ratio    If a layoff is about helping return a company to financial health  senior members should not be immune to a layoff  as they can account for a big chunk of expenses  It depends on the company  but a good rule of thumb is that senior leaders should make up less than 5  of the headcount  I ve seen companies as high as 20   Factoring in equity  there s a huge delta between the compensation of senior and junior staff    Scale back perks and T E    This isn t the first lever to pull to scale back costs  but it could be a significant budget line especially in smaller companies  At one organization  they had 15 different types of chips  The very tools used to delight and retain employees might put the company at risk down the line    Consult with your board   Changes in customer buying behaviour is the first signal many companies should get that market forces may be shifting  However  leaders familiar with   but who are external to   your company are especially helpful if they ve operated or invested in similar organizations or funding cycles  Keep those channels open  Not only do they have a vantage point to help spot potential downturns or droughts of capital  but they ll have ideas on what has worked to weather these changes    When alternatives are being explored  there is a core group that s involved in evaluating options   In a startup  it may include the co founders and the board  With larger companies  that may involve the CEO s executive team  In both cases  it s standard that in house or external counsel is involved to ensure legal compliance and act as a sounding board   says Steinberg   Each executive has a part to play   such as running numbers or preparing legal documents   in evaluating the alternatives to a layoff  There s a lot of detailed work and careful review that goes into this process  Don t cut corners  You need to always remember that you re talking about people and in the process of taking away their jobs    How to convene this core group that s evaluating alternatives is also key   I recommend that those weighing the options convene as conspicuously as possible   perhaps either very early or late during a work day  This is not for focus or to be excessively secretive  but to avoid worrying teams unnecessarily   says Steinberg   If people see their leaders   who may not meet all together in this way regularly   locked in a meeting room  they ll think something bad is going on  Speculation not only starts the rumor mill  but halts productivity  Until it s been decided that layoffs are the only way forward  there s no reason to let people feel anxiety    Inform and equip your senior leadership   Where many leaders understandably struggle is how  when and with whom to share the news that a layoff is coming once people outside the most senior decision makers must know  News travels quickly  so laying the groundwork to manage internal communications is the first step to initiating a layoff  Here are a few tips from Steinberg on sharing the news internally   Justify your confidentiality    After the core team who evaluated the alternatives  the next group of people who should receive the news are the leaders of each team  If they were involved in the initial collective  then it s all people managers   says Steinberg   If possible  meet in person with the most senior tier of management who wasn t involved in the initial evaluation  Share the problem you are trying to solve and run through the alternatives that you evaluated  Let them ask questions  Your thorough diligence and an open forum is a key way to gain their empathy and confidence    Ask for your people managers  help    The link between the senior management and next level of people managers is critical  As mentioned earlier  they should have context already around the budget and hiring plans  but they ll still need to digest the news and ask questions  Once they have  you must ask for their partnership to help roll out the news   says Steinberg   I ve seen situation where managers and their people were told in the same conversation that their people were being laid off  That s demeaning to the manager  There s always a challenge when cascading news during layoffs  but it s more vital to trust that your managers will have discretion than to have them feel undermined    Anchor to the definition of a layoff   There will be a range of emotions  This is where getting wording right matters  especially to your senior leaders  who will field questions after the layoff is announced  A talent head or coach must train leaders and practice these conversations with them   says Steinberg   They must help them be crystal clear that a layoff is very different than terminating people for bad performance  This is not about something the employee has done wrong  Many people lump them together  but a layoff is defined as the elimination of job or function  not a specific person    WHEN IT S HAPPENING  Steinberg has seen a range of viable layoff communications plans   and outlines a few of them below   but feels most strongly about how quickly a layoff should happen   From announcement to exit conversations  the information should flow through your organization through established channels in hours if it s a small startup  or days  if it is a large company   says Steinberg   If it draws out for multiple days or weeks  it generates anxiety for all  managers  their reports and the leadership  Not only is it cruel  but it brings productivity to a trickle    That s why laying the groundwork for a layoff is not only so important for leadership and culture  but for the speedy dissemination of information   Managers who have access to a current budget and updates to headcount projections are not caught off guard when layoffs might happen  That transparency leads to increased trust in leadership  which brings credibility to the executive team when it says a layoff is necessary after considering all the options   says Steinberg   Only if that pre work has been done will a leader be able to go from making a decision regarding a layoff to disseminating it through her senior management efficiently  If not  all efforts will be toward building relationships versus disseminating information   not ideal when there s urgent news to share    Two Approaches to Breaking the News Internally  When the a layoff is about to be announced to the entire company  Steinberg has seen two main approaches work   The company calls an All Hands  The CEO makes the announcement  People return to their desks and direct managers start having team and 1 1 conversations   Direct managers announce the news to their teams  The company calls an All Hands  The CEO expounds on the news  People return to their desks to have 1 1 conversations    Which way to announce the layoff depends on the culture of the company  I ve always pressed leaders to consider which option they think is better suited for their people  even if it s not easier for them  By and large  the more transparent the culture  the more frequently they start with the All Hands   says Steinberg   In cases where there s not a periodic All Hands or frequent interaction with the CEO  I ve seen the second option work better  Either way  the people should convene to receive a message from their CEO and have the chance to ask questions in a small group  Regardless of order  they should both happen in immediate succession so information is contained as much as possible until everyone has spoken with their direct manager    Regardless of order  when the CEO speaks  she should hit a few main points   First  the CEO takes accountability  It s the leader s job to bring together the right advisors  intelligence on the market and senior leadership to avoid needing to use this tool of last resort   says Steinberg   Pretending that it s someone or something else s fault causes a lot damage  The CEO and leadership team are accountable for the health of the company  You admit what went wrong  commit to fixing it  outline your plan and restate that you re taking accountability for it    If a message about layoffs can ever crescendo  it should do so around the summary of the plan forward   There needs to be conviction in the way ahead  not only to show that the layoff was not for nothing  but to reassure those who ve believed in   and have worked hard for   the company  It s not easy  but  as much as possible  a leader needs to think of this as a structural change that will also allow people to keep their jobs and drive toward a vision   says Steinberg   The final point should be an assurance that all measures have been taken to ensure this happens once and without more rounds of layoffs in the near future   You don t want your people to have a lingering fear that more people are going to be laid off  I was at a company that laid off 5 6 people every week for four months because the leadership thought it d be better for optics   says Steinberg   But it became a morbid joke where people would guess who s turn it was each week  As you d expect  people lost their trust in the company and productivity and morale plummeted    Layoffs are hard  even for a serial founder  If you don t feel awful after one  you shouldn t be leading a company   When to Break the News Externally  When it comes to leaks about a layoff  Steinberg admits that that s a curveball that can come at leaders   There are ways to minimize the risk of leaked news of your company s layoff  but the moment the consideration is shared with anyone outside the CEO  it could happen  A layoff is as much a litmus test of leadership and culture as it is a milestone for a company   says Steinberg   You may wonder if you can trust your senior leaders and direct managers with an important  confidential message  Now you ll find out  And that realization of the company you re running is more precious than a potential leak    That said  there are measures that can help control the message outside of your company s walls   Of course  you want to get ahead of any leak or review on Glassdoor  I ve seen the most success when the Marketing or PR lead has a press release queued up and media contacts ready to receive it   says Steinberg   The lead clicks send the moment the CEO announces the news at the All Hands to the company  Many CEOs also work with teams to prep a more personal blog post  All these techniques are signals that a company isn t hiding from the news and it wants to address what s happening in its own words    Considerations for Terminated Employees  In order to execute a layoff expediently  direct managers should be the ones to deliver the message to each terminated individual  In addition to training with a HR or People team leader  Steinberg says that in house or external counsel can be a resource for what absolutely shouldn t be said  Here are her tips on a few key issues   Severance    There s a big range  I ve seen a company that laid off people after eight years and gave them two weeks  Another company overhired and  in wanting to own their error  gave a generous two months to everyone   says Steinberg   It s all dependent on the plan to getting back to financial health  Most people grant varying amounts of severance by tenure and seniority  It s different for public companies  but I m not a fan of doing a severance policy up front  as situations are different and require flexibility    Walking out    Layoff typically range from being effective immediately to two weeks out  Either way  have boxes pre ordered so that people have a way to carry out their belongings if they wish as soon as they hear the news   says Steinberg   I always recommend that direct managers give laid off employees options  They can pack up and go home immediately after the announcement  Or they should offer to meet them over the weekend  if they prefer to pack up with fewer people around  Respect them by trusting that they know what they need  Be present and helpful    Help finding new jobs   At past companies  the talent team and I have worked with anyone who wanted help  by reviewing their resume or supplying intros to other companies  We assigned each recruiter a functional areas to support those in non technical and engineering roles who were let go  Also  the CEO worked with the board and investors whose other portfolio companies had open jobs   says Steinberg   This puts action behind the reality that a layoff was a business decision  not about the people as people  Don t just let go and cut ties  Take it personally so those laid off don t    People watch  How you treat those who are let go after a layoff gives a big cue to those who aren t   AFTER IT HAPPENS  Just as preparation for a layoff begins long before it might happen  so are there important steps to take after those laid off leave   I recommend the same All Hands and small group session combination for employees who are still with the company  The CEO should readdress what this change means for the company and explain the organizational structure and plan going forward   says Steinberg   The small group sessions focus on asking employees three questions that are more difficult to cover in one large session  They are  Is it clear why this happened  Do you have any questions about our new plan  Is there anything we could ve done better     Give people time to grieve because they lost friends and colleagues  But  after that  quickly orient the company to the future  There should be a celebration of the contributions of those who have left and those who remain  Don t pretend it never happened  but focus on what s next   says Steinberg   After a layoff  I ve seen companies host happy hours or lunches  These are routine acts that can help reinstate some sense of normalcy  When a layoff has gone as well as it can go  you ll eventually see former employees return to visit  The best companies host alumni events and online forums to encourage these relationships    Ultimately  you want former employees to eventually acknowledge that it was a bad and difficult situation  but not fault how it was handled   I ve personally tried to write handwritten notes to everyone who s been impacted by a layoff  I let them know that if they need anything to please let me know   says Steinberg   Many people write back notes of appreciation or return to visit and thank me in person  It s about making an effort as a human being  It may take longer to write a note   it doesn t scale   but those gestures endure and define your company    BRINGING IT ALL TOGETHER  A layoff is difficult to discuss and even harder to execute  It s a tool of last resort that can revive the financial health of a company when nothing else will  To avoid using it  give your people leaders   down to the newly minted frontline manager   access to current  projected headcounts and budgets  This information should be coupled with financial education and quarterly updates  By establishing this common knowledge and relationship  leaders will be able to more easily mobilize and count on their managers to help roll out a layoff efficiently if it s necessary  Layoffs should be done quickly  but with consideration of those leaving  Leaders must be able to articulate which alternatives were considered  Those staying will take note of how their colleagues are handled  The leadership and talent team should use their networks to help place former colleagues  while the CEO must guide the company to its next chapter    The memory of Silicon Valley   and other entrepreneurial hubs   is long  That s why it s so important to do what you can upfront to lay the groundwork should a layoff happen   says Steinberg   Fortunately  these preparations are also in step with smart company building  such as getting teams to be as productive as possible  monitoring and sharing the levers of financial health with managers  and building trust through transparency with your teams  But even if all these gears are turning  bad luck happens  When the situation intensifies  don t let yourself forget that those line items are people with lives and families interwoven with your company  You must act with empathy  That s the only way to get through a layoff,"[644 1061 962 1154 19 120 190 17 624 1421 826]"
652,training-dataset/business/1324.txt,business,Inspire Your Inner Leader with Simon SinekWhat do all leaders have in common  What is the key differentiator between a successful leader  and just another boss  Simon Sinek shares his insight on leadership in this inspiring TED Talk   Simon focuses on the concept that all acknowledgeable leaders think  act  and communicate in a unique way which sets them apart  The difference between a good product leader and a great one is the awareness of the impact their actions make  simply understanding why they do what they do    Grasping the fundamental impact of your mundane day to day tasks sets you apart from your peers  and has the potential to make you a great product manager    Click to Tweet   Comprehending the purpose behind your actions allows you to obtain the ability to lead your team to greatness  Performing actions with purpose behind them is ten times more meaningful then just going through the motions  and that attitude rubs off on your team   Watch this motivational Ted Talk  and learn about Simon Sinek s unique leadership techniques  Apply his philosophy to your own life and you ll have the ability to inspire your team to achieve incredible feats,"[652 962 1421 1153 1030 17 1061 826 120 906 1146]"
655,training-dataset/product/1173.txt,product,Understanding the Agile Testing ProcessIt is commonly known that the agile testing process uses a unique approach to project management and it serves as a mechanism to unite teams centered on the principles of collaboration  it incorporates flexibility and places emphasis on simplicity  This process also requires a certain degree of transparency and responsiveness received from feedback  Because it uses this unique approach it is very effective when creating a new product or developing a new program   Where Did The Agile Approach Come From   Interestingly enough it came through some pretty intense discussion by seventeen men at a secluded lodge in Snowbird Utah  This team of computer engineers got together to create a new future for their industry  Here they discussed their favorite and not so favorite workflow practices currently available in the industry  After several days and nights of technical discussion they formulated a new digital manifesto  This new manifesto would create a lot of interest from IT professionals and software developers worldwide  The purpose of this meeting was not to create another project management method  but rather a revolutionary new mindset that would shake the IT industry from center to circumference   Constant Feedback Equals Constant Improvement  So what makes Agile so great  As mentioned earlier  it incorporates constant feedback from clients  end users  product developers and engineers  This approach seems more effective than the archaic linear approach widely used from 1979 until about 1985  This style of codifying information is commonly referred to as the  waterfall  method  This method flows in a straight line from requirements to design to implementation to verification and finally to maintenance  But the   waterfall methods has limitations in that it creates bottlenecks in the development of new software products by limiting feedback to flow only from the top down  But  this is where Agile shines  Virtually anyone involved in the process can offer valuable feedback to any department and this frees up the creative juices of software or product developers to create a high quality product   Is There a Critic in the Audience   Naturally  any workflow process will have its critics and Agile is no different  Even with all of its positive qualities it still has some negatives that put on the brakes  The skeptics state that the workflow process is chaotic and unorganized  They say this miscommunication or over communication creates lower quality products and as well as various problems too many to name here  They also report that this experience leaves a bad taste in the mouth of product creators and software engineers alike   So what happens if you are part of a team that is used to using another workflow process  Should you switch over because you believe it will solve all of your development processes  scheduling and management issues  You may be surprised by the answer  The answer is maybe  A lot depends on the size of the company and whether the employees are dispersed over a wide geographic location  While it may work well for small companies it may be counter intuitive for large companies   So as you can see it is not a one size fits all approach  In fact the critics of this process are not in the minority  Back in 2012 TechWeek Europe conducted its own research on the subject  More than 200 participants completed the survey and out of that number 64  said that switching to Agile was far more difficult than they were led to believe   Scott Barber of SmartBear com states   Even though the trend leans toward Agile  it s a misguided trend  When companies develop good software  and the people involved in developing software are happy working with the existing process  and if development is sustainable  and the business is doing financially well  there s no need to make the switch to a new workflow process  And besides it has challenges just like any other culture  but the single biggest challenge I find are companies trying to solve development  process  management  and schedule problems by changing over  Teams who have grown up in a culture that is fundamentally linear will not find it easy to make the switch   I Can See Your Future  Although I am not a fortune teller  I believe I can see the future for Agile  The mainstream software development world has already accepted the new workflow process  Many of the principles used in the new workflow will stand the test of time for many years to come  With all of that being said the workflow process is only effective when used in appropriate situations  The good news is the process offers a fresh approach to software development while stepping away from old  outdated workflow methodologies that just leave developers  end users  clients and management exasperated and tired  The Internet age that we live in was partially shaped by Agile s processes that stepped up to the plate when consumers demanded digital downloads instead of physical products purchased at your local computer store   This ability to supply consumer demand by offering instant downloads increased online software sales exponentially  This trend is only going to go up  with buyers hungry for new software and mobile phone apps they can receive as soon as payment is made  As instant as the software downloads are  the fixes to bugs and software issues better be addressed as rapidly or these tech savvy consumers will just go elsewhere for the products they need  With new computing technologies available today  such as operating in the cloud  bug  glitches  and programming errors and other software issues can be fixed daily and in the background  often without the consumer knowing it is taking place  These advances allow Agile to move to the front of the line ahead of other outdated workflow methodologies  When used properly  these new methods allow software development companies to take a quantum leap ahead of their competition while competitors still use out dated  in effective methods to develop software solutions and offer maintenance for their products using linear methods  This is why the  Agile Testing Process  is better   Summary  The new workflow process can be very effective for creating new software due to it cultivating a high level of feedback from all departments and all individuals involved in the process  The level of communication may seem chaotic at first until your organization adapts to the new workflow process  If you are a part of a large organization you may want to talk it over with your management staff and team to make sure that it is a good fit for your company and that it does not actually hinder the workflow and software development process  After all the  Agile Testing Process does not offer a one size fits all glove for every company,"[655 220 168 519 690 1276 408 1133 1061 390 363]"
663,training-dataset/business/1202.txt,business,The most important thing Dropbox did to scale Product ManagementThe most important thing Dropbox did to scale Product Management  These opinions are entirely my own  distilled from my experience at Dropbox in 2012 2015 as well as working with other startups  Since it s been a few years  I m sure Dropbox and their process look quite a bit different now   I spent a lot of time in 2016 doing mentoring  advising  and consulting  Many conversations revolved around building product management teams  and through those conversations  I ve got to reflect on the lessons I ve learned from past PM roles  Some of those lessons are common sense and shared across most tech companies I ve talked with  Others aren t as obvious   For me  one of the most valuable experiences was seeing Dropbox rapidly scale  both in customers and employee size   and witnessing all the issues that arise as those numbers increase  Today  I want to talk through the framework we developed for keeping the growing company on the same page through the product development process   First  some context  For most of my tenure at Dropbox  the product team was led by our cofounder and CTO  He was deeply involved with all aspects of product development  including engineering and design as well as product management  In the early days  he reviewed nearly every product decision  To say he was busy is an understatement  but it worked when our team was relatively small   But the company started growing like crazy and we started working on a lot more projects in parallel  By early 2014  we had a problem   There are only so many hours in a day and all of our CTO s time was booked solid  It was hard for PMs to get time with him for the feedback and approvals they needed  Things started to feel sluggish and then deadlocked  It wasn t clear when he should be involved  what he actually needed to review  and what feedback would be helpful  PMs started trying to work around the process  and leadership got out of sync with what teams were doing  Everyone became frustrated   To address the problem  fellow PM Anand Subramani  proposed a simple framework for labeling the phases of a project s lifecycle  Each of the three phases had a review associated with it  designed to answer a specific question   Phase 0   What is the problem we re solving  Why is it worth solving   Phase 1   How are we going to solve that problem   Phase 2   What does our solution look like   To be clear  I m not advocating that this specific framework is the perfect one for every project or company  and we weren t dogmatic about following it to the letter either  There were times when teams would combine Phase 0 and Phase 1 for smaller project or do multiple reviews in Phase 2 as they approached a launch  There s also value to a post launch iteration to review goals and look for opportunities to improve   The value wasn t in this specific incarnation  Instead  the most valuable part of the framework was three subtle but critical features that you should keep in mind as you define yours   1  Clarified the right questions to ask and feedback to provide to a given project   One of Dropbox s core values is Sweat the Details  In reviewing a product  there s a lot of details to sweat and depending on whether the product is in its development  they may not be the right ones  The framework defined shared expectations of what to focus on  at any given time   For example  before this framework  it was common to ask questions about the phrasing of text in wireframes  Having the framework in place made it obvious when a project was too early for that sort of feedback  but also gave leadership comfort that the project would return for that level of feedback when that phase was reached   Almost immediately after its introduction  reviewers began to self critique saying  Oops  I m giving phase 2 feedback in a phase 0  my bad    2  Separated getting agreement on the problem from getting agreement on the solution   It s hard for me understate the importance of getting agreement on the problem you re trying to solve before beginning work on the solution  particularly once there are many stakeholders from different parts of the business   Without this  it was common to see projects get late into development  only to have the development process slow to a crawl as the stakeholders disagree on whether the product being built was actually the right thing to launch  This was because stakeholders weren t on the same page as to what the real problem was   By defining that and getting agreement before proceeding  teams could move forward with much greater confidence that they were working on the right thing   3  So simple that it could be adopted by the entire company   The core lesson here is how important concise and consistent communication is in getting a large team to work efficiently together   The shared terminology allowed everyone at the company to immediately understand where a project was in its lifecycle  Engineering knew how much and how urgently a team needed staffing  support knew when a project would start impacting customers  and the marketing team knew when it was too early to put together marketing material because there would still be too much change in the project   In fact  we actually attempted to do a redesign of this framework to address some issues  for example  there could be an additional phase for launch or post launch iteration   The first attempt at redesigning introduced a new concepts  which made it harder to understand  The additional complexity prevented the redesign from replacing the first definition,"[663 1385 1019 975 116 513 107 826 1244 1387 363]"
675,training-dataset/product/168.txt,product,Crafting a Creative Culture by Jeff Veen40 Flares 40 Flares    In this thought provoking closing keynote from  mtpcon Jeff Veen  design partner at True Ventures and former VP of Design at Adobe  shared how important a creative culture is  how it allows you to build better products  and what organizations need to do to craft that creative culture   Veen began by asking the audience to picture themselves in a boat on a still lake at sunrise  The boat flips over and then they see some teenagers have knocked them out  Would they feel rage  Embarrassment  maybe  But what if the boat overturns on a piece of driftwood  The emotional response is different   You can decide to feel the same way in both of those circumstances   says Veen   Emotions can be a choice  not an automatic response  This is not repressing our emotions  but understanding and acknowledging them  it s emotional stability  equanimity  grace under pressure   and it s a skill we can cultivate   Veen says that teams can develop this skill  and he believes that it s a skill that people who make products should cultivate   Use structure to manage emotions  Veen told a story from the early days at Typekit  a business he co founded which provides fonts for use on the web and in apps  and which is now owned by Adobe  One morning font kits were moving from the Typekit server and queuing but not being delivered to the content distribution network and on to users  Typekit s systems were unable to cope  Engineers reported that the problems was with one of Typekit s partners  About me  which was bringing 20 to 30 times its usual amount of traffic to the company  The problem was further complicated because the CEO at About me was also an investor in Typekit  and traffic was about to get even busier because About me was about to be acquired  It was also the weekend before the Christmas break   This is when you start to rely on the values that you instill in your team   Veen says   This is where we decided that we would put the start up as our priority  We had three days  and we started to practise equanimity   the idea of taking all this emotional anxiety  and trying to structure it  understand it and channel it into productive output    Teams thrive with equanimity  Veen says they decided they would spend the first day identifying and understanding the problem  the second day building a solution  and the third day integrating and deploying this solution  They identified the teams that would be involved and sequestered them so that everyone could get on with their job without any other worries   The team that s building the technical solution doesn t need to worry about making business decisions   Veen says   We were trying to set up conditions for success by using structure to manage anxiety   By the end of the third day  everything worked  and we had set a new bar for the amount of traffic we were able to support    Veen says that this experience brought the following truths home to him   Everything breaks all the time  That is normal and it s what we have to design for   That is normal and it s what we have to design for  Everything is connected  Nothing can work on the web in isolation   Nothing can work on the web in isolation  Everything is user experience  It s not just the interface we create  it s everything from dev ops  performance  partnerships  contracts  it should all be considered as part of a user experience process   Project Aristotle was Google s study into what made the perfect team  The company studied hundreds of its teams and looked for patterns for success  It s conclusion on what made teams at Google successful was surprising   it found that it wasn t education  experience  personality types  genders or any other expected trait that led to a team s success  but simply a sense of psychological safety that was important   a sense that the team would not embarrass  reject  or punish someone for speaking up   How do we cultivate that in our teams   asked Veen   Crafting a Creative Environment  Veen looks for ways to create a creative environment  one with shared values and camaraderie where team members feel safe to be as creative as they can without fear of rejection  He has some practical suggestions for fostering this environment through the types of meeting that a company holds  He says   I felt that the times we spent together as a team at Typekit were the most valuable we had  We treated them as events where work was going to happen    Morning stand up  A daily meeting at the start of the day  everyone starts the day together  It s 15 minute meeting  Nobody can talk except the people who have information to impart  it s a structured and disciplined approach  There are no laptops  no problem solving   It s a start to the day  says Veen  a connection and imparts sense of momentum and pace to the day   Weekly product review  Attendance is optional but participation is mandatory  It s not a forum for expressing opinions  but one for open ended questions so that the person making the product decisions can explain their work  it s a working session for group problem solving  says Veen  At Typekit  Veen found that many people from different parts of the organization would attend these meetings  even though they were optional  and this was very valuable  He adds that the more exposure to users the team had  the better their design instincts became  A diverse team has broader product insights  he says   Post mortem  These meetings happen when something goes wrong  but as Veen points out  it s important to remember that whatever went wrong  someone thought they were doing the right thing  They were in an environment where the circumstances went wrong   their intention was to do the right thing  But it is human instinct to find the villain   If you can uncover what went wrong with the circumstances rather than find someone to blame then it changes the emotional atmosphere in the team  says Veen  people are no longer afraid of the consequences of an error but focused on the circumstances that lead to success   Anti meeting  Group chat tools like Slack are an example what Veen terms an anti meeting  Group chat delivers a sense of communication compression and momentum  it removes hierarchy  he says  whereas email has a sense of creating documents and space to be filled  The anti meeting builds the team culture and a sense of trust   Vision and purpose  In closing  Veen examined how important it is for companies to lay out their vision  It is  he thinks  because everyone on the team needs to be able to articulate their work in the context of the company vision and make the connection   I think we can go even further and talk about purpose  how are we contributing in a bigger sense   He cites a Japanese study which found that people who were able to articulate how their work connected to a bigger purpose lived longer   We see it in all cultures   he added   He concluded with a call to arms for us all,"[675 1061 190 1411 120 826 17 1195 296 1385 1154]"
679,training-dataset/business/1475.txt,business,Make Operations Your Secret Weapon   Here s HowAt Etsy  COO Linda Kozlowski spearheaded international expansion  unified and started growing its marketing plans  began redefining the company s brand  launched a new communications strategy  and kicked off the integration of user feedback into product development   all in about six months  While others might just credit her capabilities  she s quick to cite the plan that CEO Chad Dickerson laid out  He outlined not only how her specific acts would make a difference for Etsy s customers  but also how her role would link to the rest of the leadership team   especially Dickerson  That exactitude bred effectiveness   Kozlowski is part of a new crop of COOs who are harnessing know how from a range of roles to create systems that elevate the entire company  At places like Evernote and Alibaba  she s held leadership roles in global expansion  marketing  public relations  customer experience and business development  Decades of broad exposure has not only shown her which levers make each functional area work  but also how they can be coordinated for a startup to succeed   At First Round s CEO Summit  Kozlowski puts a spotlight on the most mysterious role in the C suite  She outlines why and how companies should make operations their core and how to determine the COO that s right for you  Kozlowski shares what an operations leader is   and is not   in order to set the position up for success at any startup   What is a COO and why do you need one   It s common for startups to wait too long before bringing on an operational leader due to the lack of clarity around the role  It s more intuitive what other C suite roles do  a CMO leads marketing and a CTO oversees engineering  But it s less apparent with a COO  Even a quick Google search for definitions leaves much to be desired   a senior executive responsible for managing the day to day operations of a company   But don t functions have their own ops team  such as sales and sales ops    We re all familiar with tech operations  but what COO really means  is business operations  how you operate your business  think about strategy  and move the business forward in growth   Kozlowski says   The COO role is custom to every company and requires deep self awareness from the CEO and founder to outline the specific skills and qualities they need in a partner    The COO role is entirely defined by its relationship to the CEO   Self assess to find your counterpart  If your executive team was a film crew  your CEO and COO would be the director and producer   Your COO must be a complement to the CEO and the rest of the executive team if you have a shot at radically transforming your organization   Kozlowski says   The required skills will be different for every company  leadership team  and stage of business  My areas of strength are around scaling companies with significant global presence through strategy  marketing  and a consistent customer experience  I work best with a CEO with a technical background whose strategies I can help make work at scale as we go to market  But it will be different for each company based on stage and the composition of the executive team  and it will evolve as you grow  Be prepared to accept and adapt to your needs    Determining the right candidate requires deep introspection and what Kozlowski calls Self Awareness 301  an advanced course in pinpointing your strengths and weaknesses and thinking very seriously about how those attributes influence the way you manage your business  Ask yourself these questions to unveil the traits you need in a COO   What am I drawn to  You enjoy  default  and excel at these tasks  Write them down  Seriously  Return to them and note how they structure your day and management style   What do I procrastinate on  We all have those lingering items in our inbox or to do list that we push off or tell ourselves  I ll do that tomorrow  but never do  It may be you don t have enough time  but there s likely a skills gap you need to admit  Create a list when they occur to you and make sure they are traits and abilities in your COO   What do I wish I knew and liked  Of the things you delay or just skim the surface on  what do you wish you had a better command of or affinity for  You ll eventually be adept at and attracted to these areas  but in the short term  you need to find ways to develop them  Your COO should act as an instructor to guide you   Answer these aforementioned three questions on your own first  It s unlikely that there s another co founder or colleague has been working with you every step of the way throughout your career  So you re the best judge of what you love to do and where you need to improve  Once you have answers to these questions  Kozlowski recommends enlisting others as a sounding board  These might include your executive team  board and investors  mentors  partner or executive coach   Don t guide their thinking or come with too many prefaces  Whether expressed verbally or in writing  encourage them to weigh in on who you are  the roles you excel in and the areas where you need to grow   says Kozlowski    There is a caveat when you re asking your executive team  board  and investors for critical feedback about where you need to improve  As CEO  especially of a young company  you ve likely been working tirelessly to promote yourself and prove your leadership so people will commit to and invest in you   says Kozlowski   This is not the time to reassure them that you know how to do everything  You re looking for candor  not an echo  Ask for feedback and be silent  Thank them for whatever they play back to you    Think of it like a puzzle where your COO will fill in the missing pieces to round out your leadership team   Customize and choose your counterbalance  Now that you know what you need  you can start to seek the COO who is most capable in helping you scale your company  According to a Harvard Business Review article  there are seven types of operational leaders  Given that the COO must be a complement to the CEO and founder  you ll likely need a combination of the roles to distinguish the right partner for you    I m The Other Half and an Executor  which are a pretty common types  The CEOs I have worked with tend to have complementary skills to mine  In tandem  our abilities are better than on their own   Kozlowski says   For example  with a CEO who brings a grand vision to a company  I can bring a scalable execution of that plan  For another CEO who has mostly done business in the US  I bring significant experience scaling globally    Of course  there are different CEO COO pairings   You may be seeking the Heir apparent  someone you re training to be the next CEO  Or if you re a younger founder  perhaps the best choice is an experienced mentor who can impart wisdom and help shepherd the business   says Kozlowski   There s no perfect formula  and many COOs are a combination of two or three types  The COO who s right for your company depends on the skills the CEO is lacking and need to develop   that s especially true for younger CEOs    Search for candidates in unexpected places  Don t just put feelers out for MBAs or veterans of finance  Kozlowski spent nearly two decades in PR and Communications before she moved into marketing and operations at Alibaba   It was a great fit because the skills I cultivated previously were right for the role  anticipating problems  communicating a clear vision  understanding what s going to be asked next and how to get out of trouble when things go wrong   she says   I rely on these skills every day as COO  Don t limit your search parameters at the onset    The right COO is not about pedigree but precise fit   The Five Traits of an Operations Champion  Regardless of the type of COO you need  there are certain characteristics that non negotiables for an operations leader  Here are five to hone in on when you re vetting candidates for the role   Trust  There s a reason why this word is referenced a lot in business   but it s especially critical between the CEO and COO  given how synchronized they must be while making decisions on the fly   You can t run a business with someone who is supposed to be your other half if you don t have an honest relationship with them  Period  It s not only about trusting their instincts and capabilities  but also about knowing viscerally that they ll step into the chaos with you  tackle their share and watch your back at the same time   says Kozlowski   It s a challenge to see if there s that potential for trust at the onset  A new COO   as with any new employee   will want to show how she s commanding each part of her new job  But don t forget to use the CEO as a sounding board for a particularly challenging choice early on  Come with options  intelligence and an opinion  but also a vulnerability and genuine ask for input  It s not only a chance to come together during a difficult decision  but shows that you trust two heads will be better than one early in the relationship    Proven Execution  The best operators are relentless doers   Ask candidates to provide specific examples that demonstrate an ability to move projects forward  Pay attention to how many instances they cite  how far back they go and at what cadence or interval   says Kozlowski   You re not looking for one hit wonders  but those who reset to jump hurdle after hurdle  Consider asking them what and how they d contribute first at your company  Look for clear answers rooted in proven strategies and tactics    With a COO  you want a person who is poised to lead her position  not leap in position   Ego checked  According to Kozlowski  the best operations leaders are humble  hungry and ready to work   COOs are often thought of as the heir to the CEO  but aren t there yet  It s vital that your candidate has their ego in check and clearly understands their responsibilities supporting the business   says Kozlowski   Ask them about their advancement in past roles and what motivates their growth  It ll help you get an understanding of their career goals and incentives  Ask references for detailed stories about how candidates have handled instances in which they were wrong    Chemistry with the CEO  COOs are true partners  not colleagues  The adage  don t hire who you like  hire the person who can do the job  doesn t entirely apply to the COO role  Kozlowski advises founders and CEOs to be forthcoming about the relationship they envision having with their COO   You re going to be spending a majority of your time together  You need to have a personal connection where you actually enjoy being with them  listening and talking to each other  and working together   she says   Go above and beyond thinking about how you re going to test for personal fit during the interview process  Rather than failures  I like to ask about a time they were embarrassed or uncertain about something  and how they navigated it  That gets to both problem solving and the human side  I also like to touch on other working relationships that were very successful as that really helps cut through small talk and helps better assess if there might be chemistry  What you re seeking is a foundation to build a real relationship    Versatility  Adaptability must be their default mindset   Your COO is second in command and will be your team s go to when you re not in the office  They should exude similar leadership traits to the ones you possess so your team feels confident relying on them   and the business doesn t skip a beat   says Kozlowski   The most successful COOs are jacks  or jills of all trades  One way to identify this trait in the interview process is to press on a wide range of growth challenges   from hiring an executive team to fundraising   to see how candidates shifted their focus during inflection points in a company s development    As you identify these key qualities  also be aware of the following red flags  According to Kozlowski  your operations leader is not   The CEO  This goes back to the ego check  Your COO must accept and internalize that their job is to run the plays  not call them   A babysitter  A COO is not a nanny or handler for a CEO  Sadly  this is a disturbing trend and one that is destined to fail the duo   and the company  Do not hire a babysitter   Someone who needs a  C title  to join  If you need to add Chief to a candidate s title to persuade them to join  don t add them at all   Linda Kozlowski at the First Round CEO Summit  The Right Time to Hire a COO  Given how ambiguous a COO job description is to many startup founders  the timeline can even be more of a mystery to crack  And yet every company needs someone to lead operations  The key is to start thinking about it and preparing before you are ready  To figure out timing  Kozlowski isolates some key variables  such as if you re creating a physical or digital product or how you assess your own personal leadership style  Here are her tips   Hire immediately if you produce a physical product  COOs are the backbone of companies that produce tangible goods   Logistics and operations make or break starting and scaling a CPG or hardware company  You need someone with past experience making a physical product who can contribute to  structure  and oversee the development  manufacturing and shipping from end to end  Enlisting someone in this role from day one is the difference between shipping your product on time and missing your launch    Hire when you hit product market fit if you build digital products  COOs take digital products to the next level   If you re building a digital product  it s time to hire an operations manager when you ve reached product market fit and are ready to scale  COOs are accustomed to building and managing fast scaling operations   says Kozlowski   Hiring someone before you re ready to grow   such as if you re still in beta   will leave the candidate and you frustrated at lack of measurable change and progress  It doesn t mean you can t start your search early  just don t do it until you have engaged  delighted users    Hire immediately if you  founder or CEO  are fully immersed in building the technology  According to Kozlowski  this rule trumps the other two   If you are 100  immersed in building your technology and don t want to run the day to day  don t try to go without a COO  Hire an operations leader who can run the logistics side of the business so you can focus on developing the product   says Kozlowski   I see this a lot at early stage companies  It doesn t mean their CEOs or founders can t or won t develop these operational or management skills  But they simply need someone who thrives on establishing and scaling processes to guide and grow their companies    On Onboarding an Operations Leader Well  If you ve found  attracted and hired a COO  the last critical step is to integrate them  Again  because the COO is so frequently a misunderstood role  it s often one of the fastest to fail  CEOs and founders  be hyper vigilant with how you introduce your COO to the team  Here s how   Be specific with the company on why now  The biggest mistake Kozlowski sees CEOs and founders make is saying   I m hiring a COO because I need help   Instead  ask yourself the following questions to help you prepare and craft a strong narrative to share with your team   What kind of help do I need  Why do I need it  How will it address an obstacle   How strongly is this obstacle influencing the company   What exactly will this person do to alleviate the impact from this obstacle  How will that change over the next quarter and year    We ve been able to implement and scale operational changes at Etsy because Chad made the growth opportunities incredibly clear to me and the rest of the team  We collectively agreed on our goals from the start   Kozlowski says   For example  one opportunity facing Etsy is how to grow and scale marketing both in the US as well as abroad to support buyers and sellers overseas  Given my international scope of my work at Evernote and Alibaba  I joined to complement the existing strengths of the executive team in how we could each leverage areas for growth  Chad defining these roles and giving true autonomy to each role was key to a fast integration and a strong team    A COO helps you cover double the ground  as well as double down  She should be seen as a multiplier   Pass the baton with an Olympian s precision  As CEO and founder  you ve likely built deep relationships with your direct reports  Explaining that they will report to a new executive is among the trickiest   and most telling  parts of the integration of a COO    Team members will want to keep reporting to you as the CEO  despite the updated org chart  The way a CEO handles this transition can either underline or undermine the importance of a COO   says Kozlowski   Most founders keep coaching and doing 1 1 meetings with their people   after all  they were there from the start  But this is one of the most dangerous traps  Instead  have the COO join you and slowly start leading meetings  Help the COO build relationships with the team and make it clear what the new structure looks like  It s takes vigilance as much as time  but it s a critical step    The transition won t happen overnight and team members will still come to you if and when they don t get their way  CEOs must explain why an operations focus is necessary for the company and direct them to the COO  This was especially important during Kozlowski s integration into Etsy  Chad introduced Kozlowski to the company via the all hands meeting before she even started  getting everyone excited about the additive skillset to the leadership team  He was clear about her areas of responsibility right from the start  which meant that her first day  everyone was prepared to jump in and work with her  Ultimately  all of the effort you placed into sourcing and closing the right partner can be lost at this point  Actively manage the process with empathy and resist the urge to micromanage   Tying It All Together  Before a COO can be a possibility for a CEO and startup  it must first be on the radar  Start with a short self assessment of your strengths and weaknesses as a CEO or founder  Complement that with perspectives from your existing executive team and advisors  Define your counterbalance and use the seven types of COOs as a tool  When interviewing look for the five traits needed for any type of COO and beware the three most common red flags  Hire a COO immediately if you are building a physical product  and after product market fit  if you are working with a digital offering  Be as conscientious in integrating the COO as you were in hiring her  Your approach will either propel or dispel her reason for being there    Finally  don t forget to let it go  As a founder and CEO  your company is your baby and you re probably holding on bit too tight  Yes  you should always have a pulse of what s going on  but until you actually hand over the reins  your COO won t have an opportunity to make any real changes   says Kozlowski   Focus on what you need to do  Don t micromanage her  The sooner you give away those responsibilities  the faster she can execute in her role  When you set your COO up for success you don t lose control  but actually have more command over your company s future,"[679 1061 19 1357 962 17 190 1292 1154 1243 826]"
690,training-dataset/business/1385.txt,business,Crisp s Blog  The iZettle Example  Decentralized Tech Development In Practice  Case Study Don t stand in the way of great employees   That s one of the operational mantras that guide the finance technology company iZettle   Two others are  Keep the startup spirit strong  and  Stay adaptable to changing market needs    In this blog post  we share some of the things we are implementing and tweaking at iZettle to keep producing great results and attracting in demand  talented developers  My role has been to assist the tech development organization in making this work    Another blog post coming soon will cover the transformation of making the whole company agile  while this post focus on the practices that are put in place to keep a high performing  decentralized tech development organization at iZettle    Let s begin by facing the reality of fast growing startups   The organizational challenges for most fast growing startups  Most startups want a flat organization to keep their entrepreneurial juices flowing  but when new employees join in a steady stream there eventually comes the point where the founders or upper management feel overwhelmed by chaos   Things get confusing   Employees aren t seen   No one seems to know what s going on   What usually happens for most start ups at this point is that bureaucracy processes start piling up  Layers of management are added  and project managers are introduced to coordinate the chaotic environment  And so are written reports for managers to send to upper management  and silos are building up between different departments  And decisions are taken somewhere else   And then what happens   Usually  entrepreneurial enthusiasm suffers and so does talent motivation and speed of innovation   And that is exactly what iZettle wants to prevent   But that is easier said than done when a company grows like a wildfire   How iZettle has grown  When iZettle launched its first product in 2011  the company was a team was just six people   Today the startup has 450 employees  with 45 nationalities  an annual transactional volume of 3 5 billion euro  and 1 000 new businesses are signing up every day   The business idea has expanded   from  just  making it super easy for small businesses to accept payments anywhere  by just attaching a small device to a smartphone or an iPad  to also taking care of the transactional related needs of small businesses  receipt printing  cash handling  accounting integration and so on   The growth puts some heavy pressure on the organizational design   The call for an updated organizational design at iZettle  Kalle Persson  Development Director at iZettle  joined the company when there were only 20 25 people on the tech and product side of the company    Things like workflow  culture  and expectations had managed itself pretty well in the organization up to that point  as they can do in a small startup if you are lucky  if people know each other pretty well  and if the right people were recruited  But as you grow to more than 60 people  the game is different  When I joined  there was no development process what so ever  Delivery times were getting longer due to too much work in progress at the same time  and we felt a growing need to coordinate different teams and to get an overview to make sure we did the right things    Setting up a traditional management structure was never on the agenda  though  according to Adam von Corswant  CTO at iZettle    We don t want to implement traditional management structures  We never did  and we still don t  Centralizing power would make us slow in adapting to the complex and changing world we are in  And employee engagement wouldn t be the same    Adam is today the only formal manager of the 80 employees in the development part of the company   However  as the company expanded  the company needed to do   something   It was critical not only from a development perspective but also from a people standpoint  Sara Ekstr m  deputy CTO  explains    Adam and I shared a role of making sure everyone was happy by having 1 1 talks with everyone every once in a while  That worked when we were 40 people  but as we grow  there wasn t time for that anymore  It just didn t scale    Other challenges were difficulties in making decisions that affect other teams  for example  the architectural aspects of databases  and the lack of feedback to new developers  what they needed to do to improve their work   What I noticed very soon  Pretty soon after I joined iZettle in summer of 2016 to work on their organizational challenges  I noticed how deep the principle of no bureaucracy was rooted   Sometimes I challenge my clients to  hack their organization  to get rid of waste  such as unnecessary processes or activities  and I thought I would do the same with a group at iZettle    What do you mean   they said when I introduced the idea of getting rid of unnecessary processes and activities    You know  waste like unnecessary time reports and things like that   I clarified    Time reports  What is that    They didn t know   Most organizations suffer from heavy structures  iZettle had the exact the opposite problem   From past experience  I have learned that a growing decentralized organization needs some minimal structures to keep growing in an effective way   And that s what we have been working on in iZettle   The minimal structures we added to keep iZettle development decentralized  Here are some of the practices we have been putting in place   Chapter coaches  At iZettle  some of the team members are also chapter coaches  These chapter coaches are spread out among the teams and are associated with a certain area of specialization  So for example  an Android chapter coach is an Android developer   One of the main focuses of the chapter coach is to be a buddy for other developers with the same expertise  Android  in this case   making sure each developer is seen  heard and enjoys going to work  With the chapter coach  you can discuss how to approach difficult personal situations  among other things  Since the chapter coaches have insights across teams  this is the go to person to make requests to change teams  and to bring up specific issues related to your expertise   Does every developer get the support they need  Is everyone feeling well  These are examples of questions to be highlighted by the chapter coaches   Sara Ekstr m says    The chapter coaches are a really important group for us to make sure we are doing the right things and that people are satisfied here  This group can take decisions to make things better    The twelve chapter coaches  who each have about eight colleagues to connect to in this way  are introduced to a Learning program with bi weekly  Learning Labs   The Learning Lab is a safe place to grow  where I coach them to become more successful in their role   Rather than appointing the chapter coaches  we have been experimenting with a special  role selection process  where the developers themselves select the person they think will do an awesome job as a chapter coach   Agile coaches  In a decentralized organization  leadership is expected from everyone  However  there are some key roles that take on roles that in traditional organizations are done by line or project management  In addition to the chapter coaches iZettle have product owners who lead in the product dimension   and agile coaches who challenge  support and coach the teams to grow into high performance   The agile coaches have learning community just like the chapter coaches to accelerate their learning and performance as coaches  They also drive cross team improvements   Consent decisions  not consensus  To speed up the decision making process  we are implementing the habit of going for consent instead of consensus   So  instead of trying to find solutions that everyone can agree on  which can take forever  the developers now look for solutions that are  good enough for now  and safe enough to try   Before giving a green light  the question is   Is there any reason why we can t go ahead with what is being proposed    One huge benefit is how much we speed up iterations and decisions   says Adam   Explicit expectations  As Sara Ekstr m says    Sometimes it can be tough for new people who are used to have a manager to go to when problems escalate  Here it s up to yourself to initiate solutions and drive other processes  That s the other side of working in an environment like this  where no one tells you what to do    We are still in the process of making everyone understand what personal leadership means  This is also addressed much explicit in the recruitment process    We are not looking for people who wants to manage other people  but who are good to lead themselves  together with others  We want developers who rather take initiatives than complain  and have the drive to make changes   says Sara   Feedback loops for new employees  To avoid the  no one told I did something wrong  syndrome that is common in many companies  a new routine has been setup that each new employee is responsible for asking for feedback every month   The next step is to roll out a similar feedback loop for the all the in house agile and chapter coaches  and after that to everyone in the organization  We are also providing on demand training in more effective communication  feedback and conflict handling  Key skills for everyone in a flat and decentralized organization when you don t have a manager to depend on for feedback and to solve your conflicts   The teams are now responsible for introducing new members to a new onboarding process  The teams are responsible for the welcoming their new team members and for the setup of the Training Deck where each new member quickly pull the knowledge needed from the team to get a flying start as a new team member   A separate blog post on Training Deck is coming soon   But  what about control   If you are in a leadership position in another company  you might have some concerns   How about   controlling the performance of each employee    How do iZettle make sure that no one cheats   The answer is simple   They don t   Instead of controlling  they trust their employees to be accountable for their behaviors as well as holding colleagues accountable for keeping their commitments    With only one formal manager on tech development  the risk of someone looking over your shoulder is very small  Culture is the steering mechanism we have in this regard   says Kalle Persson   Is it worth it   Well  I would say so   Just look at their success so far  with employees as the engine   What s the takeaway   When Adam is being asked what he is most proud about within the iZettle organization  the CTO answers    I m proud of the fact we are autonomous  Every individual is extremely engaged in their work  being part of discussions  and many spend extra evening hours without being asked to do so  Everyone sees what is needed  and keeps going to get it done    Footnote  The practices of Consent Decision Making  Feedback loops and the  Role selection  originate from Sociocracy 3 0  but there the Feedback loop practice is called Role effectiveness review,"[690 1061 17 19 1146 655 190 296 1154 973 826]"
694,training-dataset/business/815.txt,business,5 actionable ways to improve communication between your product and sales teamThrough technology and a desire for transparency  companies are finding it easier to get teams to work together  As the collective knowledge of a company moves from employee s brains to collaboration software  an employee can effectively learn anything they want about the company and people they work with   In addition to access of this information  growing teams are being built horizontally  Instead of building a hierarchy  modern teams are looking to recruit specialists to shore up weaknesses  It s no longer odd for a new employee to work with the CEO just as often as their counterpart in another department   If you have experience working at a growing startup  it s easy to confirm this change in how modern sales  marketing  support  or executive teams work together   Want more advice on how to build great teams  Get our free sales management toolkit   Collaboration isn t hard to solve for most teams  except product and sales  But there are still two teams that rarely work well together  product and sales   As a technical salesperson  I ve spent most of my career playing referee between product and sales teams  I believe it s more of a dark art as opposed to something you easily fix or improve  I ve experienced the challenging aspects of both jobs   so I naturally see both points of view   Since most salespeople are not technical  yet   they don t see the struggle of how the sausage gets made  Same goes for engineers  They only see when the deal gets closed  not the dozens of people that told the salesperson no before getting a yes   We all need to appreciate that salespeople and product people are different creatures  Each of their crafts require a completely different set of skills in order to be successful   For this post  let s assume that the product and engineering team are the same group of people  I ll refer to both as the  product team   Let s face it   it s usually the case for early stage companies anyway   First  let s point out the reasons why this is hard on both sides    Sales  Sales has set working hours  product does not   It happens all the time  The sales team is pushing hard to reach a goal  and they are in the office early to make things happen  Then they see some engineers strolling in around 11AM or Noon and leave the same time they do   This is rarely spoken  because salespeople know this is a petty reason for causing animosity across teams  But it s human nature  Salespeople have a set time to crush it  during business hours   while engineers and product people can work into the night and add value   A lot of salespeople may not appreciate that the engineer was probably up late fixing a problem or working on a feature  A lot of their work doesn t happen in the office    Product  The sales team sells features that don t exist in the product and it leads to churn   How many times have we seen this  The churn rate skyrockets because sales closed deals on features that haven t launched or they misrepresented how the feature works  Engineers will often see this as lazy or sketchy  It s not  These days  a great salesperson has to be able to communicate complex concepts in significantly less time  Sometimes things fall through the cracks    Sales  Every time I suggest a new feature  Product pushes back and makes me feel like I m stupid   Great engineers ask questions to fully understand why someone is requesting a feature  Just like great salespeople ask questions to fully grasp if a prospect is qualified   The difference is that engineers may seem to be combative or pushing back to the salesperson when they suggest a feature  That isn t their intent  but the salesperson takes it as criticism or condescending    Sales     Product  They don t appreciate how hard the other team s job is    Hey Engineer  Have you ever been hung up on or cursed out  Ever had a qualified opportunity disappear on you     Hey Salesperson  Have you ever spent hours scouring through logs to figure out what s causing something in the product to break    Both sides simply don t appreciate the frustrating parts of each other s jobs   5 actionable ways to improve communication between your product and sales team  Here are some actionable steps we ve implemented at past and present companies I ve worked with   Engineers need to feel the pain a salesperson may experience from time to time  Set up a team bonding day where the engineers make calls with the salespeople  The engineers call and qualify for the sales team  Give the engineers a script  The discomfort will give more context to the engineers of how hard their job can be   How many times have you seen a salesperson go into the Product Engineering Slack chat room and say  When or can we get X feature   Then like a bunch of sharks  the engineers scrutinize the idea so much that the salesperson regrets saying something   Set up a Feature Request Trello board or spreadsheet to allow anyone on the team to add cards or rows with product features  Instruct the team to include an example or quote from a customer requesting the feature   People that want to request a feature can look at the existing requests and see if it s already been requested before  People can add comments to existing requests to imply how much a certain feature is requested   Then the Product team can set aside time to go through the requests and ask follow up questions   When things are good  you ll be tricked into thinking that both teams are working smoothly  When features are delayed  sales is going poorly  or the product has downtime   the tension starts to bubble up until there s a melting pot that blows up one day  Be aware of this  and attempt to diffuse the melting pot by communicating with each team lead by letting their teams vent out their frustrations   4  On specific features or disagreements between teams  Hear both sides of the story and defend the side you agree with   Both teams will be territorial and making decisions in the best interest of their own team  You can t always be a neutral 3rd party  The sales team is sometimes right  but they may be feel alienated on a team full of technical people  If they have a point  defend them and attempt to make it a priority to remedy their frustration  The Product team needs cover from sales people bashing them internally and externally  Make it a point to communicate to sales on attempting to understand what s so difficult about what Product is doing   Steli recently shared how to achieve growth through alignment  In this context  any proactive sales and product team are going to push to do things  For sales  it could be offering a discount through a new promotion  For product  it could be spending time on fixing up some underlying backend infrastructure   You should ask both of them the same question  How does this help us achieve our company s  1 priority   At our most recent company retreat  Steli opened the retreat by setting the priority for what we should be collectively thinking about during the retreat and for the next few months    Caption  Steli opens up our Santa Barbara team retreat with a simple question for the entire company   He asked the team to always consider   Will this make our current customers more successful OR bring us more successful customers   ASAFP or  as soon as fucking possible    Since then  it s common for him to chime in when a spirited debate opens up in chat or Asana   As CEO  he s the acting referee between sales and product always seeking alignment as a function of getting the two teams to work together successfully   Look out for the warning signs  The interaction between sales and product isn t always constant  Sales is busy selling  and product may be heads down working on features  Therefore  weeks could go by without you noticing any rift between salespeople and engineers   It s on you to poke the tiger and sniff out the warning signs  or at least work towards preventing a flare up  You should always be asking yourself these questions   Are the salespeople still communicating customer feedback you ve already received   Is product actively asking sales for feedback on new features they are spec ing out   When s the last time I saw a salesperson and engineer have a positive interaction with one another   This is not a situation where  no news is good news   When either side is not talking to each other  that s almost as bad as conflict  The less they communicate  the further they drift apart   Always remember  In addition to resolving conflict  you re also there to encourage healthy debate   Build a better sales team with our  free  management resources,"[694 912 1385 826 115 116 1061 1030 190 39 1241]"
708,training-dataset/business/1064.txt,business,Intro to Startup Metrics If you can t measure it  you can t manage it    Peter Drucker  Throughout the first year after a baby is born  the parents take the baby to the doctor for monthly check ups  The doctor weighs and measures the baby  If the baby is growing and getting bigger  then things are going well   A startup is very much like a baby  as it needs to grow to become a real business   But how do you measure growth   You do that by defining metrics and KPIs  Key performance indicators   That is  you pick one metric  or a small set of metrics  and try to generate growth either weekly or monthly   The difference between focusing on metrics and KPIs is the difference between building the business  and failing to do so  There is no successful company that does not focus on numbers   In this post we dive into the basic framework for Metrics and KPIs   Why are Metrics so important   Setting and achieving goals  CEOs use metrics to set specific goals  Instead of saying to the team  we need to grow  or we need to make progress  the CEO can say  we need to increase the number of new signups by x percent or we need to increase the monthly recurring revenue by y percent  Every week  the company either grows or fails to grow by a specific amount  and which will determine whether or not the goal is reached   Clarity and focus  What is our top priority  What is more important  task A or task B  In the absence of metrics  startups are ruled by vagueness and chaos  By establishing clear metrics  CEOs can help the team focus on what really matters  The team  in turn  has clarity on what is more important  and can plan accordingly   Getting the team aligned  Metrics are also great for settling arguments and getting everyone on the same page  For example  when team members argue about whether to add a specific feature to a product  you can reframe the question  For example  ask  which of the features  if added  is likely to help hit the growth goal  This is a much more efficient way to evaluate features   CEOs can use metrics to get the team on the same page quickly and objectively  A metrics obsessed culture is a winning culture   Raising Capital  Metrics are essential to all fundraising even in the early stages  As an investor  I know that if a startup is not focused on metrics  I won t be able to make a profit  This is because making money in venture is essentially an arbitrage I am investing into something early with the idea that it will grow later  and I will be able to sell it for more money  However if the founders aren t metrics driven  how do they grow the business  How will investors see their investment grow  Without focus on metrics the company can t grow and founders can t create wealth for themselves and their investors   Next  let s look at some of the basic principles for startup metrics   Metrics 101  Tie metrics to milestones  Metrics don t exist in a vacuum numbers shouldn t be measured for the sake of measurement   Metrics are a tool that helps a startup achieve its goals  and hit major milestones   For example  say you are trying to raise seed round or become profitable  Both of these are major milestones  You can use metrics to achieve them  You can decide that to raise a seed round you need to have x users or y customers or z dollars in monthly recurring revenue  Similarly  to become profitable  you know exactly how much monthly revenue you need  given your expenses  so you pick a quantitative goal to achieve a milestone   Figure out your trajectory  and measure progress often  In addition to using metrics to help hit a major milestone  startups use metrics for weekly and monthly goals  The idea is that once you decide on the numbers you want to hit  say a year from now  you can compute the entire path backwards and set monthly goals   Now  every month you can check yourself against the overall goal  If you are on target or above  great  If you are missing the mark  then have a conversation to reevaluate   Understand what you need to adjust  Are there are missteps in your execution  Was the goal you set not realistic  Regardless of what is not working  the key point is that using metrics allows you to detect the problem quickly and hopefully address it quickly too   Decide and focus on 1 main and a few supporting metrics  Sometimes founders go all out and start measuring everything  Too many metrics are likely to derail and defocus your startup   Measuring everything is basically like not measuring anything   useless   Particularly in the early days of your company it pays to pick one main metric  Pick the one that you deem the most important for right now  The pick itself will trigger many debates  and that s good and healthy  Once you decide it will be the number of new beta customers or new recurring revenue or new active users whatever it is set this as your main measure of progress and growth   In addition  pick no more than three other supporting metrics you want to track  Why three  Because one main metric plus three supporting metrics will fit nicely on your weekly slide  It is a trick we use during the Techstars program each company gets one slide to fit its metrics on  It is a little silly of course you can pick more if you want  but the point is not to measure too many things because you will lose focus   Use a simple dashboard  Arrange your metrics on a simple and clear dashboard  Make them easy to read and understand  Many Techstars companies use electronic dashboards that display metrics in real time  These dashboards can be great to motivate the team   People love numbers and love celebrating wins  The metrics dashboard can help align and empower your team to do great work   Question and change your metrics  It is actually okay to change what you measure  Startups pivot  they change direction and focus  As you learn more about your market and business  things will change  It is okay to change your key metric and your supporting metrics  In fact  it is completely fine   For example  in the early days of your startup  you obsess about building a strong  passionate user base  You are racing to acquire your first customers  The key things you are focusing on are customer satisfaction and retention  You focus on repeat use because you want to make sure you have product market fit  In that case you want to make sure the customers sign up and stay  so you focus on retention or non churn   Later  once you are sure the product works  your priorities may shift  You may need to focus on driving more and more customers to your product  and your key metric may change to be new customers   One person owns metrics  but everyone talks about them  Designate one person to be in charge of your metrics  but have everyone talk about them  In the super early days  this is the job of CEO   Metrics aren t separate from the business  they are the business   Because the CEO uses metrics to set goals  manage the team  and raise capital  the CEO is the right person to own the metrics in early days   Use metrics  but make gut decisions  Lastly  use metrics to make decisions  but don t be blinded by numbers  The CEO should use common sense and human judgment to make the final calls around critical directions of the company  Don t get me wrong  metrics are very important  But it is even more important to trust and celebrate the power of the human brain  heart  and gut to make critical  out of the box decisions  despite the numbers   What to Measure   By now  I have hopefully convinced you that metrics are important and you are ready to start measuring  So what do you measure   In a nutshell  avoid measuring totals measure changes   Measure Changes instead of Totals  For a startup to get off the ground it needs to grow at an accelerating pace  When you measure totals  you are creating a false sense of growth  Of course the total number of customers or users is growing  if it is not  your business is definitely not working   but the totals do not tell the growth story  For this reason  totals are called vanity metrics they make you feel great  but they aren t really that great   Measure new weekly and monthly revenue customers and users  When you measure changes  you are focused on growth  If your new monthly revenue is a flat line  you are still growing  If your total revenue is flat  you are stagnating  If your new monthly revenue is a 45 degree line  you are growing at an exponential pace  If your total revenue is a 45 degree line  you may or may not be experiencing linear growth   Measure Active Use and Churn  Aside from measuring growth  it makes sense early on to measure active usage and churn  The reason is that often times  startups get customers  but fail to keep them  This is known as a leaky bucket situation  On one hand  it is great that customers are coming  It is not great  however  that they are leaving  As you will read in the follow up posts  it costs money to acquire customers at scale  A good business must retain its customers to make up for the cost of acquisition and to generate profit   In addition  intuitively  if you get the customers to try your product or service  but they don t stick around  there is something wrong  There is not enough value created for your customers the product is not right  Paying attention to active use  stickiness  and non churn is an important thing   Measure conversion funnels  It turns out that funnels are quite magical things to master for startups  and funnels will be a topic of a separate post in this series  Whether you try to convert site visitors into beta users or try to use your sales funnel to turn leads into paying customers  the setup involves a multistage funnel   In all of these funnels you have a top and a bottom  The top is wide and typically unqualified  and the bottom is narrow and represents the goal stage  In between  there are stages where users and customers fall off  The goal is to fine tune the funnel to move as many users or customers from one stage to another  The trick is to and keep measuring the conversion and improve one stage of the funnel at a time   Let s build your dashboard  Now is the time to put this knowledge to work  If you already have a dashboard for your startup  have it handy and ready to review  If you don t have one  let s start from scratch   Write down   Your next big milestone and the metrics you think you will need to hit it  Metrics you think will be important to your investors  this is a trick question  it should match the metrics from bullet one above   One key metric that will drive your business  Three supporting metrics to help drive your business   Discuss this with your team do they agree   Next  please share your key metric  supporting metrics  and  if you feel comfortable  share your whole dashboard  Tell us why you picked it and how it is helping you drive your business   Reprinted by permission   Image Credit  CC by Dave McClure,"[708 715 220 277 39 1241 1387 19 1093 962 826]"
715,training-dataset/business/1227.txt,business,If You Don t Run Your Company Based on Metrics  Here s How You CanNumbers don t lie  which is why a CEO should always rely on metrics to run and scale a company  While the prospect of looking at numbers on a daily basis may turn off most CEOs  one must never underestimate the value of numbers and what they can tell about your company s chances for success   In this syndicated blog post  David Teten  a Founder Institute Mentor and Partner with ff Venture Capital  extols the virtues of running a company by relentlessly monitoring its metrics  and provides a thorough method for doing so   The blog post   How to Run Your Company Based on Metrics  What  Why  How  Who  and When   originally appeared on David Teten s blog  and has been republished below with permission   I review a lot of board decks with a beautifully hand crafted page with metrics for the company  That makes me nervous   I prefer to see a screenshot of an internal dashboard  not something created for the board  and I prefer to see that same dashboard in the same format at every meeting  The reason is that the real value of the board deck is not  ironically  for the board  it s for management to track their own performance  So I want to see that management is using a dashboard every day  not just for board meetings   Good metrics are comparable across industries  comparative  readily understandable  and help drive decisions  Comparative means that you can compare a metric across time periods  groups of users  or competitors  A good metric answers one question   What will I do differently based on this information    Exclude the metrics that are  vanity metrics   e g   Facebook likes or pageviews  for many companies   Vanity metrics do not inform  guide or improve the business  they are not actionable   Paul Arnold of Arnold Capital observes   For most metrics  I split out absolute values and changes over time  Operations should focus relentlessly on the latter    The best CEOs run their companies by their metrics  But for many CEOs  that is not their natural inclination  It means looking at numbers all day instead of people  And it means holding yourself and others rigorously accountable  which can be painful  So how do you do it   1  Identify the metrics that matter   The most common financial metrics ffVC asks companies to compare vs  budget are   Gross Revenue  COGS  Gross Profit  Payroll Expenses  Net Income  Loss   Cash Burn  Available Cash  Remaining Runway  For early stage companies  the metrics that matter might typically center around activation  engagement and retention  For them  the key thing to measure is if the product is serving users  needs in such a way that they will continue to use it  and ideally  find life without it hard to imagine   Josh Gebhardt  CEO  MetricStory  observes that horizontal spread across and within an organization s functional siloes is a good metric for B2B products   In addition  we typically ask portfolio companies to report on the following non financial metrics   Universal Metrics  Metrics for Certain Categories of Startups  Company Specific KPIs App downloads Unique visitors  SaaS Specific KPIs SaaS Quick Ratio Net MRR Churn   LTV  CAC Ratio Months to Recover CAC Average Revenue Per Account Average Contract Length Months Paid Upfront    Steve Cody  CEO of The Better Software Company  observed   To drive the growth numbers that we need and reinforce our culture  we keep our key sales metrics up on three live monitors in the office  Customers  MRR and key activities are the firewood to keep us going    Lean Analytics recommends this set of metrics for some of the major categories of startups   2  Create a management dashboard   I suggest looking at dashboard tools such as Anaplan  ChartMogul  Domo  Fathom  Geckoboard  GoodData  RJ Metrics  Microsoft Power BI  Mode Analytics  or Tableau  TrustRadius has a helpful high level overview of business intelligence tools  as does G2Crowd   3  Track employee performance particularly rigorously   Useful tools  Betterworks  15Five   4  Benchmark against comparables   A metric is much more valuable once you have established a benchmark  This will let you know what is ideal or normal for the metric that you are tracking  Google Analytics just announced benchmarking capability  Compass co and Payscale offer industry metrics   5  Report your company s performance against your planned financials and pre determined metrics in your board meeting   Even if you don t have a formal board of directors  I d strongly recommend that founders create an informal board of advisors and run it like a formal board of directors  I ve previously posted a template board deck  also see A16Z s preferred startup metrics   ffVC s CFO Group actively helps companies to become more metrics driven  My colleague Cristian Valbuena  Controller of Portfolio Accounting  recently spent 3 days on site at an ffVC company learning about the company  its needs and timeline  Since one of the goals of the CFO Group is to make companies become more metrics driven  Cristian took the opportunity to help the CEO achieve this goal  Cristian provided the company with a list of KPI s that it should track based on its goals and industry   The CEO mentioned that he also wanted to track additional metrics  Some of the metrics that the CEO wanted to track were  Vanity Metrics   data on which you cannot act   So Cristian and the CEO went through the list  and determined which would be the most relevant to track  based on the current stage of the company and the goals for the next year   During this time  Cristian also explained to the CEO why some of the metrics were not appropriate  For example  number of visits to your website doesn t tell  1  how many people are visiting your site   one person visiting the site 100 times  or 100 people visiting once each  or 2  what action did they take  convert or bounce   A better metric is a combination of number of unique visitors and conversion rate  Not only are they better metrics to help you understand your sales funnel  but also can be used as valid assumptions to help you predict future sales   Once they had identified their preferred metrics  Cristian provided the company with industry averages for those metrics that were selected  This will help the CEO determine if the metrics are in the ballpark or whether he has to optimize them  Obviously  some companies can be outliers in comparison to the mean  but it is still important to be aware of where you are positioned  In many businesses  there may also be some metrics unique to your business  which don t have any baseline  but are crucial to your company   Being metrics based is not something that you establish once and you forget about it  My colleague Paul Bianco created ffVC s FP A Team  part of our overall CFO Group  to help our companies dig deeper into the numbers than just GAAP financials  Paul took on this initiative after realizing how alarmingly little a P L and Balance Sheet alone can tell you about what s really happening at a startup   Our FP A group works with our companies to create financial strategies that bridge the gap between what s currently happening with the business and what the company hopes to achieve  In doing this  they dig into the key drivers of the business and seek areas for improvement  These of course vary widely depending on the Company  For example  for a direct sales model  Paul tends to first look at sales efficiency  the cumulative profit loss generated by the sales team  and on a per rep basis   net of salary  commissions  etc  From there  if there are issues  the team digs into the root cause  is the sales team just not booking enough sales  Is it churn  If so  is it a product issue or is the product being oversold   These are the types of questions we strive for our companies to track and continually improve upon   For more advanced entrepreneurial advice and insights  check out David Teten s blog        Image of businesswoman standing on ladder and drawing on wall image by Shutterstock,"[715 708 220 19 277 962 1061 694 1292 1243 63]"
738,training-dataset/product/806.txt,product,Tips and Tools for Building Next Generation Products54 Flares 54 Flares    Espen Sundve  VP of Next Generation Publishing at Schibsted  and Matt Galligan talk about working with Destination Next  their innovation publishing product as they navigate through rapidly changing markets  How do you test and react quickly  What environments do you need  How do you foster those environments   Know your  Why    Get an understanding of what you re trying to achieve and why  For Schibsted  this included asking a basic question   Why does journalism exist   This ranged from anywhere from informing people to entertaining people  Setting a clear understanding across the team  at the very least  means working towards a clear product vision  From there  creating disruptive products involves asking what needs to be changed to achieve your vision   Disrupt yourself to stay relevant  Invest in a testing ground for radical learnings  Working in established industries or as an established player means working in the limelight  Create a safe ground  as a spinoff product or even under a hidden name  to test out new features  new ideas  and maybe even entirely new products  Staying on top isn t easy   Keeping it open  To react to rapidly changing environments  team members must know what is happening as soon as possible  in the least time possible  Ambient awareness means teams are aware of other teams  However  achieving this at scale in a time efficient manner is difficult  Matt Galligan shares with us his favourite tool to keep information sharing open and transparent  using Quip  Having collaborative documentation tools reduces the need for meetings and creates more time to get things done  However  clear guidelines for tool use will help reduce renegade use and too much noise,"[738 854 826 975 1030 955 320 858 116 17 391]"
742,training-dataset/product/1057.txt,product,Applying Leverage as a Product Manager   The Black Box of Product Management   MediumApplying Leverage as a Product Manager  I get every new PM I manage to read  or re read  High Output Management by Andy Grove within the first month of joining my team  It s a timeless  no bullshit overview of what a manager is and how to think about being one  Most PMs do not have people reporting into them  but in all cases they are still managing outcomes that are executed through a team   There are two critical concepts in that book that I aspire for PMs on my team to internalize  the first is how to measure managerial output  and the second is the idea of managerial leverage   Managerial output is what you produce as a manager and is succinctly explained the book   A manager s output   output of their team   output of the surrounding teams that they influence  Managerial leverage is the idea that some things a manager does creates more output than others  and for each possible thing  the amount of output created per unit of time is its leverage  That s the basis of how you should decide whether to do activity A or activity B   When internalized  these concepts impart on PMs a sense of what matters most in their role  They have lots of choices in what they can do everyday   all of which produce some positive output  but developing awareness of where they have leverage is critical to their long term impact   Here s a framework that I share with PMs on thinking about leverage in their roles  which coincidentally turns out to be one of my highest leverage activities as their manager    Some definitions   Vision describes where you re going  the aspiration or goal Strategy defines how you plan to get to your vision in the context of the market company customers product Scope defines what you need to ship to execute your strategy Backlog represents the units of work to achieve a scope  What I hope PMs take away from this framework is simple   Product managers exert the most leverage through vision and strategy   the rest is optimization  Vision and Strategy are foundational  They provide the direction  the inspiration  and enable a group of people to execute as a team   Scope and Backlog are optimizations  They accelerate progress towards a known destination   Both are important  but going faster in the wrong direction is far worse than going slower in the right one  When prioritizing their focus  a PM should first ask themselves if they ve built a solid foundation for their team to operate in  If not  that s where they need to start   First Principles of PM Leverage  This framework was built upon an early aspiration of mine as a PM to create the conditions where   1  Any individual on my team knows how their work directly contributes to achieving the company s vision   Vision   2  Any individual on my team can explain the rationale behind why we re approaching the goal the way we are  Strategy   This aspiration is rooted in leverage  Your team is full of smart engineers and designers who know better than you how to build things  so if you start focusing on the implementation details  not only are you exerting less managerial leverage  you re also diminishing their leverage   You re making 1 1 into 0 5   0 5   In contrast  when a PM drives vision and strategy  their breadth of expertise accross the product makes them the best suited to process all the context  and subsequently make better decisions about the direction of the team   The easiest way to test for good product management on a team is to ask any engineer or designer on that team to describe the vision and strategy for their product  The coherence of their answers will give you all the feedback you need   Building the Foundation  Vision and Strategy are often seen as wishy washy concepts  the domain of MBAs with no hard skills  They are in fact critical  and in my experience  most PMs don t actually know the distinction between the two  nor how to utilize them effectively   Vision  Vision is used to describe the end state of your team s efforts  Its primary importance is to provide the organization a succinct understanding of what a team cares about  It represents the heart  the raison d etre  of that team   A good vision influences the everyday micro decisions being made by a team  It should also be the basis of alignment between a product team and their stakeholders   I won t go too deep in this post about how to establish a good vision  but I will share one thing that I always remind PMs I manage  which is that the vision they create has to fit into the bounds of the company s vision  and in bigger organizations  any parent group vision    Make sure your vision fits into the company s   I ve seen too many PMs come in guns blazing  trying to be the CEO of the product and do epic shit  I love the energy   and their vision should still be ambitious  exciting  and strongly opinionated   but it can t deviate from the bounds of the global vision  or else they run the risk of a blow up down the line   PMs should always be spending considerable time talking to the leadership team in their company to internalize the nuances of the vision  This is true of new PMs and ones that have been there for a while  as the process of vision alignment never really ends  The forces of growth and technology continuously spur up new situations which push a vision   one that was established in much simpler times   into new territory and debate   At Shopify  we call this staying on the green path   Strategy  Strategy describes the chosen approach towards achieving the vision  Its primary importance is to intersect the goals of the vision and the realities of the world into a gameplan for action   Building a strategy is hard because the world isn t like this   Instead  there are tons of things to consider that influence your path forward  Should we do feature A  B  or C first  Who should be the first customers we target  How likely is competitor X to do the same thing  and in what time frame  A good strategy incorporates questions like these into a decision about how to proceed   Again  I won t deviate into the making of a strategy here  but will leave one thought I see PMs often trip up on   A strategy is not a roadmap  Roadmaps should be an output of strategy  and good ones will always clearly tie back to one  Real strategy answers what we re building and why  who we re going to target and why  how we re going to grow and why  and how the end result will put the company into a better competitive position relative to alternatives  And why   Leverage Enables PMs to Scale Efficiently  The final benefit of operating under this framework is that it enables a product manager s impact to scale more efficiently as they grow in a company  By becoming great at setting the foundation for a team  a single PM can have significantly more impact within an organization by doing that work accross a set of teams   Next level pyramid use   Admittedly  there are still times when PMs do need to drive the optimization portions of the pyramid  particularly in high priority or time sensitive projects where there is lots of executional risk  In those cases  refinement of scope and sequencing materially increases the likelihood of success and value to the company and a PM should be capable of doing it   Generally though  when headcount is growing quickly and there are more teams ready to build then there are visions to execute  it makes most sense for PMs to build foundations for as many products as they can and then just trust their teams to execute   At Shopify  we re now seeing the median PM manage 2 3 products  which in most places would be untenable  I believe this is possible in large part because of the appreciation of managerial leverage within our organization  and because of the incredible team we have in engineering and design   Are you doing the highest leverage work you can   If nothing else  I strive for PMs to take this question and make it a mindset   Make your next hour the most impactful it can be  and assume creating output through your team is the best way to do it  Ask yourself if you ve established the right foundations for your team to operate in  and if not  build them,"[742 826 1030 17 1153 906 39 1241 1339 854 116]"
769,training-dataset/product/625.txt,product,6 weeks  why it s the Goldilocks of product timeframesProcess for a product team can be suffocating  or process can be liberating  And no process at all  Well that s fun for maybe a week or two before everything starts to fall apart  Our team has done a lot of work over the last while reflecting and improving on how we build product  Our goal was to arrive at the minimal process that gives teams a framework to plan and structure their time  and most importantly  to prioritise and make the best tradeoffs  Previously  we thought about building product over three timelines   6 weeks  6 months and 6 years  which Paul catchily referred to as the  666 mindset    But now the 6 month roadmap is no more  The one constant  the core of that framework that we re doubling down on  is the 6 week cycle  Here s how we think about it  and what it looks like in practice  Why the 6 month timeframe didn t work The simple truth for any product team is this  the further out you plan  the more suspect the commitments become     Making far out planning commitments with your product team actually has compound negative interest   Your team spends a too much time planning upfront  Planning is necessary  but great teams want to be building  So much time spent planning means the job has become less fun   No matter how hard you try  your plans are still largely fiction  So the team feels either scared  because you were really ambitious  or de motivated  because it s too cautious   and likely de energised   Teams outside R D will soon realise that the plans aren t reliable  so R D loses credibility   Your plans feel like strait jackets that you re constantly having to re adjust  but from which you re never able to actually break free  So instead of using a 6 month cycle  now we keep our roadmaps unbound by time  they re simply the next 5 projects that a team is going to work on  in prioritized order  That s it  It might take the team two months to finish those 5 projects  or it could take two quarters  Doesn t matter  This simple list of 5 projects unlocks the next step   the 6 week cycle  6 week cycles are about execution With a list of projects to work on next  teams can focus exclusively on what they can accomplish in the next 6 weeks  This is actually a big deal  You no longer have to juggle strategy and execution in a single conversation  which is deceptively head wrecking  Your brain will thank you  Here s how the 6 week cycle works in a little more detail  Goals  not plans We don t optimize for detailed planning  Instead we focus on the goals for the cycle  Every 6 weeks  each team proposes a handful of goals for what they want to accomplish that cycle  Because you only have to project 6 weeks out  you don t need a detailed plan to have high confidence in your goals  This keeps it lightweight  Then the team nominates one primary goal  This is the goal for which you ll sacrifice all others to hit when you need to adapt to changing circumstances  Agreeing this upfront makes the typically hard decisions that arise around week 4   Crap  Project A is taking longer than expected  What should we do    refreshingly easy   Actually  it s clear  Let s stop work on Project B and commit everyone to A    Our main goals are usually about releasing an improvement to all customers  And secondary goals often focus on releasing to beta  We optimize for visible progress for all customers  And we include candidate goals as well  These are goals we considered but rejected  This helps us think about what we re choosing not to do this cycle  It s important to be explicit about this  Then we pull all these together in a single spreadsheet  which everyone has access to  Here s the summary tab of our R D goal spreadsheet  showing an overview of each team s main goal,"[769 949 333 128 116 458 1030 1244 1218 503 17]"
826,training-dataset/business/937.txt,business,The Power of the Elastic Product Team   Airbnb s First PM on How to Build Your OwnJonathan Golden  Airbnb s very first product manager and now Director of Product  knows that flexibility can get you far in his line of work  Last year  it even got him to Cuba   While the island nation had always been effectively closed to Airbnb  the reestablishment of diplomatic relations with the U S  in 2015 opened a door   a door the company s leaders wanted to walk through quickly   We thought it was important to incorporate that community into the world and into the Airbnb ecosystem   says Golden   Any number of Airbnb teams could have added the Cuba project to their existing workload  but given the unique challenges of entering the highly restricted market and managing money transfers  that would have taken too long  So the decision was made to build a new  dedicated team  which landed in the Payments organization that Golden helms   In 10 weeks  a cross functional team   product managers  designers  engineers  and data scientists reallocated from elsewhere in the org   was assembled  There was extensive support from other areas of the company including legal  operations and comms  It was a herculean task for everyone who worked cross functionally  But two months later  the initial infrastructure was up and running in Cuba  And almost as quickly as it formed  the team was disbanded  with the ongoing work of maintaining Cuban business doled out to existing product areas   An unusual case  Maybe  But it s emblematic of the elastic  vision driven product management approach that has allowed Airbnb to reimagine travel  In this exclusive interview  Golden describes how to build high impact  modular teams driven by actual needs  He walks through the decision making framework that he uses to allocate the hottest of commodities  engineers  And he explains why   when everyone is working toward a clear company objective   having teams that expand and contract actually keeps you aligned   STEP 1  Make sure your vision is fully articulated  If Golden could share just one organizing principle  it would be this  Design your product teams around outcomes  not features   This is where defining a clear vision comes in  Too many teams skip this step because they want to get to the concrete work and not waste their time with touchy feely goal setting  When you do this  you end up wasting a lot more time    A lot of people call me and ask how they should structure their product organizations  I always tell them to do it based on outcome  If you do it based on features  then you re going to be perpetuating those features whether they re useful or not   Your company vision is what you want the world to look like in five plus years   outcomes are the team mandates that will help you get there   Outcomes define what we want to achieve for people in our community   says Golden   More context on this later    Your product vision and the team outcomes it spins out aren t pie in the sky talk reserved for board meetings and investor pitches  It s as important to your company s day to day functioning as your site metrics or revenue   and like those numbers  you should communicate it clearly and often   For example  Airbnb s vision for the Payments team is to  create a world where connections between people become less transactional and more human   By bringing the transactional element of payment between guests and hosts online  the team makes the process as seamless as possible and allows the community to engage in more meaningful ways  But this is a challenge that s ongoing   Golden knows there s more to do to achieve this greater objective  In the meantime  the more immediate mission is a helpful tool   To build an accurate and extensible global payments platform that provides a frictionless experience for guests  hosts and partners    That s not to say that you need to identify a vision that will take your company all the way from series A to IPO  Frankly  you probably couldn t if you wanted to  Your product vision will evolve for any number of reasons   changes in your business needs or the community you serve  for example  or simply because you ve refined what you set out to build   The excitement of a consumer technology startup is that the business and environment around you is changing so fast  you must respond in kind   Keep your product vision dynamic  and re articulate where you re going on a regular basis    I m sure Mark Zuckerberg  in the early days  didn t think Facebook was going to be as big as it is today   Golden says   Now they re able to think so much more expansively about connecting the world in a very meaningful way  But they ve only achieved that because they were able to slowly expand that vision as they moved forward through a number of outcomes    Golden advises founders to focus initially on the things that are working and grow into their product vision organically   I ve seen company scope expand too quickly   he says   Normally if something is working and you double down on that  then whatever you are measuring will dramatically accelerate  If something is only half working and you need to go do something else to achieve your goal  then maybe it really wasn t working as well as you had thought    STEP 2  Build modular teams for maximum flexibility  Airbnb optimizes for agility first and foremost by assembling interdisciplinary product teams  The notion of a group of product managers sitting together in a bullpen apart from the rest of the organization is anathema  Instead  product managers are matched with engineers  designers  and data scientists to attack business problems from all sides   If people collaborating on the same project are disjointed or they re not always interacting  then a lot of the magic of creativity is going to get lost   This modular team structure is how Airbnb has managed to keep the spirit of an early stage startup as it s grown into a tech giant   In the early days  we used to have one big meeting  with all of engineering  all of design  all of data science  and all of product management in one room  Of course  at the time that was maybe 20 people   says Golden   We ve evolved from there  but we kept the core of how the team operated    There s no feeling of rank within each team and no room for prima donnas   Everybody has the same ownership of impact across data  design  engineering  and product    If a team needs to communicate something to the rest of the company  it selects the appropriate lead   a data scientist  for example  would communicate the results of a major A B experiment   It s a team that operates cohesively  versus one person who s potentially more of a totalitarian leader    STEP 3  Hire These 3 Types of PMs   You ll Need Them All  While building modular product teams  startups also need to staff for their stage  When you re pushing toward product market fit  you ll need a very different  type  of PM than when you re scaling or  later  when you achieve scale and move on to platform initiatives  Each of those key stages is best tackled by one of three archetypal product managers  a perennially useful framework  Golden notes  first developed by Simon Wardley  adapted it from concepts in Robert X  Cringely s 1992 book Accidental Empires    Pioneers  These are people who are excited by building prototypes  who are pumped about the riskiness of the endeavor and when creating something brand new in the world   says Golden  Sound a lot like a founder  That s not a coincidence  founders are typically their companies  first product person   the ultimate pioneer  But whether you bring it to the table yourself or hire for it  this is the type of PM energy a company needs at the start   How to spot them  These risk taking front liners need to be scrappy  so look for someone who has entrepreneurial experience already  That might be someone who was CEO of his or her own company  or even a PM who led an exploratory team for a large company  the lead for a new product area at Google  for example   Don t  however  assume that any startup experience equals pioneer experience   There is a huge difference between somebody who has built something and somebody who has maintained something   says Golden   Here are the questions he recommends asking to determine if a product manager has pioneer potential   What is your process for uncovering user needs   How do you know if you ve achieved product market fit   Tell me a time when you did something non scalable to jumpstart a product   I m thinking about building  X    what do you do to get it built in 10 days   For each of these questions  you re looking for responses that are both thoughtful and concise  Beware candidates who talk in circles or provide a lot of unnecessary context  They should have a clear sense of what they d say in each situation and be able to communicate it clearly  And their explanations should dovetail with the cadence  speed and culture of your company   Settlers  Once you achieve product market fit  your focus needs to shift from starting a company to building one  And to scale  you need settlers   These product managers are much more focused on impact  They really care about reaching a lot of people  That s a slightly different makeup  they re obsessed with growth  they re obsessed with optimizing    Settlers can come from a variety of backgrounds  Most times they are highly analytical and have an uncanny ability to work hand in hand with data science  Large consumer internet companies have many settlers who work on refining and optimizing product experiences   How to spot them  Look for someone who finds the creativity in A B testing  someone who s driven by metrics and can tell you exactly how they d measure the impact of a new feature   Here are the other questions Golden recommends asking to determine if a product manager is a natural settler   How would you break down our conversion funnel   How do you like to set up an A B test   We have a feature  X    what is the use case for the feature and how would you measure it   Tell me about a time you influenced user behavior through product   Town Planners  These are your platform managers  who take over when it s time to build the infrastructure and systems necessary to handle scale and accommodate your product s use cases  current and future   Good town planners are also entrepreneurs  Many town planners have technical backgrounds but that is not a hard requirement  They can also work with technical visionaries where the product manager can steer the vision to realize its practicality for the broader product team  At Airbnb  they added product management support to the core infrastructure teams to help them build technical tools to set the business up for scale through the next few years   How to spot them   Town planners must be able to synthesize large amounts of disparate information to build technology that will service existing and unanticipated use cases   says Golden  Don t just look for workhorses who can lay down a solid backend foundation these PMs also need a vision for the future product initiatives that foundation could support   Here s what to ask to figure out if someone has the capacity to be a town planner   What metric would you measure to determine success for a platform product   Tell me about a time when you built a system that supported a variety of use cases   How do you balance building toward known cases versus unknown future use cases   How do you know i the platform is too rigid or too flexible   A brand new enterprise needs to know when to bring on the next wave of product management  But even in an established company  all three types of product managers are critical   The product team needs each of these PMs to be nimble and responsive  Otherwise the business won t endure for the long term   says Golden   We allocate product resources across three main categories  core initiatives that focus on the existing product  new initiatives that explore possible areas of growth for the business  and platform initiatives that focus on building fundamental technological infrastructure   Pioneers and settlers don t become obsolete just because you re at scale   And town building isn t the end of the road   it s just the groundwork for a new round of pioneering  Golden s Payments team  for example  is primarily tasked with building a platform  But since the exchange of funds touches everything the company does  his team also contributes to many of Airbnb s new guest and host conversations   We re always thinking   Okay  how do we take the system that we ve built  which is moving a lot of money around the world right now  to think about where the business is going     Done right  the work of these three types of PMs forms a loop that makes the difference between a billion dollar company and a one hit wonder   STEP 4  Demystify resourcing projects with clear process   A product team needs to evolve with the product  how people use the product  and environment around the business   says Golden   It needs to have a culture of constant change   But how do you know when it s time to effect that change  For that  you ll need one more building block  A consistent framework for setting and measuring goals  Because without a process for testing hypotheses  you may quickly find that you re not so much iterating as spinning your wheels   For Golden and product leadership at Airbnb  that process looks something like this   By the time you reach the bottom of this flowchart  resourcing decisions may not be easy  but they ll be clearer    Everybody always wants more resources   says Golden   For the most part  nobody is saying  I m fine  I don t need to grow   People feel like their work can be contributing to the product  to the community  and in a high growth company that s usually true   Product managers  then  need to work with founders and other company leaders to establish priorities   It s very much a PM s role to decide which bets to place   Working through this process chart  though  is not a one and done proposition   You need to constantly revisit and challenge core fundamental assumptions to make sure that you re making the right decisions based on what we know as factual today   says Golden   Every quarter  he conducts a review of each of his teams to determine the impact they re having on the business and whether they re hitting their goals   We say   Okay  if this team is established and we ve articulated all our goals and we didn t hit one   or for some reason something is off   why are we off  What happened    Once again  he starts at the top of the chart   The first question is  Did this product or project actually fit into the product vision   Usually it does  but other times we ve had to be uncomfortably honest    Take Airbnb s Wish List feature  for example  which was originally conceived as a single user  favorites  tool   But most trips on Airbnb have more than one person and once it was in use  we saw that we weren t actually addressing the real need  which was for sharing favorites and choosing the best place to stay as a group   says Golden   By the time the tool was relaunched this year  the product vision had been torn down and rebuilt   We had to take a step back to say   Okay  is this actually what we want the product to be  Does it change our people s behavior in a positive way    Armed with a new product vision  one informed by data  the team reinvented Wish List as a collaborative tool for planning trips  and saw a significant jump in usage    If your product or project still does address the vision  though  keep moving down the planning framework   At the end of the day  if you realize that a project isn t succeeding purely because your metric isn t hitting the goal  normally the culprit is resourcing   says Golden  And that s a clear cue to look at re aligning the team s resources   STEP 5  Rally teams quickly and scrap them when necessary   If you have a culture of iteration  and a team that is flexible and includes a balance of the three types of product managers  then realignment is expected every so often  It s not controversial   says Golden   Whether you ve identified a team that s understaffed  have surfaced new problems that can t be addressed by existing teams  or want to double down on a nascent opportunity  don t shy away from moving people where they ll be most valuable   Take internationalization  for example  Cuba was not the first time Airbnb s goals have required that kind of elastic team building  When the company did its first big push into international markets in 2012  a team was spun up to manage a new set of challenges  translation  new payment systems  and UI changes among them  And as with Cuba  once those systems and platforms were in place  the tasks of maintaining them were once again distributed across the rest of the organization   Today  the company is reassembling an internationalization team to tackle its latest new markets   The team has moved from 2012 s translation and content localization to developing deeper more culturally localized product experiences in these markets  We need a dedicated team to think through those issues    It s clear why a company might want to whip up a product team from scratch  but what about the how   When a product manager is engaged with a given team  how do you sell her on dropping everything to tackle a new challenge  If you ve established a vision based company culture  this is where you ll really reap the rewards  Teams will be bought in to accomplishing a goal  not bringing a particular feature or product to market   If you ve done it right from the get go articulated your vision  outcome and goals right   it should be much easier to have a conversation about reallocating human resources   says Golden   Decommissioning a team is often the harder side of this equation  but there too  let your product vision serve as a touchstone  Take the team through your goal setting framework and identify where things went wrong or changed  Was it a flaw in the product vision  strategy  goal  metrics  or resourcing   If you go through that process  then the team gets much more comfortable with the reason things didn t work out as well as they thought   says Golden  Moreover  in an iterative product management culture  individuals have less to fear   You can t achieve a real culture of iteration without accepting failure   The key to postmortems is obviously to not point fingers  It s all about lessons learned and identifying why things happened the way they did    From 2012 to 2013  Golden managed a team that focused on user tools  They handled all guest and host interactions after the booking and tackled many issues around reservation alterations  refunds  and cancellations  But they didn t have a clear mission that related to an outcome    We realized that it would be best to disperse the team into two outcome oriented teams   the booking flow team and the host team   he says   This enabled these two teams to realize their mandate through a wider but yet overall more simplistic scope    IMPORTANT REMINDER  You must repeat yourself to make any of this work  Sure  Airbnb has reached a scale that few startups do   but Golden is not as far removed from the early stage days as you might think   As Airbnb s product organization expands  each team is actually starting to look like Airbnb did a couple of years ago  Those teams are getting to a size where they re almost early stage startup companies on their own   he says  And like any good startup leader  Golden knows that the key to keeping his teams humming is constant communication   To that end  he hews closely to three simple pillars  process  context  and listening   Process   Having a clear framework for making company decisions  as we ve seen  is key  Transparently discussing the results of that process is  too   Context   A clear vision isn t enough  though  You need to make sure everyone on the team sees that vision too  Don t be afraid to repeat yourself  In fact  be sure to repeat yourself   You have to communicate it all the time   says Golden   And as new people join the team  tell them the history of how things evolved  That context is usually really helpful    Listening  As a team leader  Golden is also acutely aware that his communication responsibilities go both ways  just as he repeatedly shares the company s vision with his team  he also contributes his teams  feedback to leadership s ongoing vision making   You re not going to be able to make the best decisions without actually talking to individual people and making sure that you re addressing their concerns     It s the job of a team lead   whether in product  engineering  design  or data   to communicate the what and the why  But if people don t agree  then you have to revisit them  Anybody can push back  Challenging core fundamental assumptions is really healthy    Beyond these three tenets of communication  Golden is not one to dictate how often teams should meet with each other  or how they manage their internal messaging   We allow each team to figure out their own cadence  their own process and structure  We like to see each team have it s own character a little bit of identity    When you do the work of establishing a mission driven culture  you can afford to be flexible on the details    Again  much of the work of product management is making sure everybody understands the what and the why   he says   Leaving it up to teams to figure out how to actually make that happen empowers them to do better and find more meaning in their work  I think everyone wants a say in their daily work   that s not just in tech land  that s in life,"[826 1061 190 1030 17 975 1241 39 742 116 115]"
829,training-dataset/business/346.txt,business,The Recursive Product Strategy That Musk Used To Build An EmpireThis article is by Vinny Lingham  co founder and CEO of personal identity protection startup Civic  He s founded and led three other companies  including mobile gift card company Gyft  which was acquired by First Data Corporation   Ten years ago  Elon Musk signed off on a blog post by summing up Tesla s company strategy   Build sports car  Use that money to build an affordable car  Use that money to build an even more affordable car  While doing above  also provide zero emission electric power generation options  Don t tell anyone   In the decade since  Musk has methodically checked each box  save his cheeky  promise  not to tell anyone  He built the Tesla Roadster  which made way for the Model S  and slightly more expensive Model X  and now the Model 3  Over that stretch  the company developed electric power generation technology not only for vehicles  but also homes  businesses and utilities   Of course  these are guideposts  not the full odyssey  as the rundown becomes a simpler story with the sweat  sacrifice and serendipity removed  Being always told to think big  the temptation for a founder   especially this fellow South African entrepreneur   is to immediately aim for the level of ambition of Musk s end goal rather than draw guidance from his process for realizing it   It s not an easy system to execute  let alone internalize  I started my first company the year Musk founded Tesla  and it s taken me until my fourth company to feel as if I ve got a clear vision from the start  Musk likely isn t the first founder to apply this methodology  though likely among the most famous   nor will he be the last  To reference the approach  I ll offer it a name  recursive product strategy  Here s what I understand it to mean  to work back from an end goal   five  10 or 50 years ahead   until you can hit inflection points that propel your company and its customers to the next stage  while ushering both toward the end goal   We push hard through companies   and life   from start to finish  so too few pause to design either in reverse   Present Chronologically  Design Recursively  In the Tesla example  Musk begins with the first step  building a sports car  versus his listed end goal  building an affordable  zero emissions  electric car   When presenting a vision  it s easier for people to digest a plan when starting with its first step or incarnation  At the time of his blog post  most of us could better envision a premium sports car  than wrap our heads around an affordable  luxury  electric vehicle   However  I m willing to bet that he constructed his master plan in the opposite order  In other words  he came up with the grand vision and backed into an opening gambit he would need to reach it  In essence  he extracted the first step from the larger vision   Following Musk s approach in his post  I d present the plan for my company Civic as follows   Create an easy to use  free identity management service for consumers  Invest in building an identity network to eliminate fraud and identity theft  Validate the use of mobile devices as a standard for remote mobile identification  Improve the democratic process by giving everyone   anywhere   the ability to exercise their democratic rights  Create a more engaged and informed civil society that makes better decisions for mankind and the planet  However  here s how my co founder  Jonathan Smith  and I first designed Civic recursively   essentially in the opposite order   OUR CONTEXT  Like Musk  my co founder and I grew up during apartheid  albeit on opposite sides of the oppressive system  I was born without the right to vote  but  thanks to Nelson Mandela  that changed  The political transition was anything but smooth  and I realize how powerful  but delicate a democracy can be   not only in South Africa  but around the world   BIG ISSUE  There s abysmal civic participation  especially around elections  Worldwide  voter turnout has been on a continuous decline   and about 20  in the United States  Increased spending helps voter turnout  but with strong diminishing returns  The cost to run an election   even at a local level   can be prohibitive   OUR GOAL  To enable a delegated democracy at scale  To engage voters by empowering them to entrust their vote to a registered delegation of relevant domain experts versus an individual politician who may or may not have specific expertise in the issue   What s needed   Receptive stakeholders   government  citizens  constituents   to participate in a delegated democracy  An accessible online platform to connect and allow citizens to safely  accurately and reliably allocate their vote on demand and at scale   Why not now  There is no legal ability  cultural familiarity or technological platform for citizens to vote online  Citizens are tied to their polling places or registered addresses   STAGE 4  To fix the  person not present  challenge of those not voting in person   What s needed   Endorsement and adoption of mobile voting platforms by governments   Why not now  Agencies can t verify identities of people on the other end of devices   STAGE 3  To build a product that securely verifies the identities of millions of people   What s needed   A platform that can bind people to their electronic devices to a nearly perfect degree of accuracy   Why not now  No government or company has been able to successfully build it yet  For example  the US government is under fire for its massive biometric database  known as Next Generation Identification  Facebook doesn t collect Social Security numbers nor does it verify identification information  It mainly constructs identity through social consensus  which isn t sufficient  Even for issues as basic as name  it can falter for this purpose  for instance  I go by Vinny on Facebook  but my legal name is Vinodan  In a recent survey we conducted  we found that less than 10  of respondents would consider giving their social security numbers to any social network   STAGE 2  To create the largest network of personal identification data   What s needed   Trust from the consumer  which means protecting data first and foremost  A network where user data and authorization is decentralized   and not stored on company servers   so both the customer and company are less likely to be targeted or hacked  Ability to provide their personal information and a brand that s recognized and accepted worldwide as a reliable form of digital identification   Why not now  The time is now  Consumers are worried about data breaches  The paid ID protection industry has millions of people paying a fixed monthly fee for protection  If offering the same or better protection for free  wouldn t you get more people signed up   and create a powerful network of consumers   STAGE 1  To offer a free product to protect personal identification information   What s needed   A mass market consumer product that solves the pain point of identity theft and abuse  elegantly  simply and always free   for life   Why not now  The time is right  Enter Civic   Vinny Lingham  Backing Into A Blueprint For Empire Building Using A Recursive Product Strategy  It took me a career of founding startups to truly internalize this company building blueprint and many months of iteration to apply the process to Civic  Here s the four step framework to apply  with examples from Gyft to illustrate how the methodology has worked in hindsight   Pick a universe to dent  Universes are all different  but dents should always be noteworthy  When I started Yola in 2007  we wanted anyone to be able to build a website without needing the technical skills to do so  Looking back  it was an admirable vision  but not a big enough of a universe  We didn t think carefully enough about margin pressure and multiple inbound competitors   such as Wix  Weebly  Shopify  GoDaddy and Squarespace   crowding the market  which is still barely more than the  1 billion in revenues across the entire industry  even after nearly a decade  It also wasn t an industry where anyone could build a moat to protect themselves and even if they could  the market was too small and overtraded   I took a different tack with Gyft  At the time  gift cards were a  125 billion industry  of which only 0 1  was digital  We wanted that ding to become a dent  If we could grow that digital percentage to 10  over five years  we d have a crack at making a visible mark on a huge market  The questions were  how can we get consumers to ditch plastic in a digital age  Could we build a moat to protect ourselves from competitors   Swing a wedge to make a ding  Before there s a dent  there s a ding  It takes some heavy  persistent swinging to make a dent   and  for that  you need a wedge  It might be an unfair advantage  niche market or economy of scale  but the purpose is the same  to break in and maintain that edge   For Gyft  that wedge was a digital wallet  It was a way to upload physical cards to store currency digitally so that it d remain accessible  Physical gift cards are often misplaced or lost  at least  20 billion in gift cards go unused every year  Of course  we couldn t rely on just one wedge  so we banged away with many  this time in the form of product features  balance inquiries  loyalty points for retention  additional payment options like Bitcoin and more  Through the wallet  we discovered one of the most valuable   and unexpected   use cases  buying digital cards for oneself for budgeting and other purposes   Look to adjacent markets to place your first swing  I ve learned that one person   and in most cases  one company   can t swing hard or fast enough to create a big enough dent in the universe  Before we started swinging  we mapped out the markets where others might swing a wedge with us  For Gyft that meant  designing the digital wallet to be integrated online or at the POS for every store  SME or corporation  A digital wallet is as powerful as where it can be used to spend its balance  The more adjacent markets we could serve  the more our customers would swing the wedge on our behalf  However  that didn t entail developing different wallets for different markets  we stayed focused  Where other digital wallets like Google Wallet failed  we won because we only focused on gift cards  despite inbound asks for credit and loyalty cards   Each swing has to be valuable in and of itself  Your company can achieve incrementally and postpone end goal gratification  but customers and partners must be rewarded with each swing  With Gyft  not losing money by being able to store physical gift cards digitally was an immediate benefit  Businesses that partnered with Gyft could ship products to customers instantly  All other features   from loyalty points to payment options   were enhancements   The same goes with Civic  Entrusting us with personal identification information will only happen as part of an equal exchange  So from the beginning  we re offering free identity theft protection for life  Then the ability for third parties to safely verify identities  Once able to do that  customers will be able to transact securely and remotely  The final  swing  should allow people to engage and flex their civic rights   Be Honest With Maslow  For founders  there s a step that must be precede all applications of recursive product strategy  a sincere self assessment of their motivations  As the initial muses and muscle behind a venture  founders must   if only to themselves at first   articulate what truly drives them  Survival  security  belonging  respect  self fulfillment are all very valid reasons to build companies  These motivations are captured in more current modern theories  but perhaps most famously articulated in developmental psychology framework Maslow s Hierarchy of Needs   Maslow s Hierarchy of Needs  To that end  there have been both serious and satirical applications of Maslow s Hierarchy to the startup world  They intend to list the stages of growth for founders by motivation  ranging from the most basic to advanced motives  Reflecting on the companies I ve founded  I ve been on most tiers of the pyramid   sometimes a few over the span of a startup  Most serial entrepreneurs will be driven by most of the reasons on Maslow s pyramid over their career   I ve known first time founders in pursuit of self actualization and seasoned entrepreneurs building to get respect from peers  It s not a ladder to climb  but a choice each time  It s well known that  of the  180 million that Musk got from the Paypal acquisition  he put  100 million into SpaceX   70 million in Tesla  and  10 million in Solar City  He had to borrow money for rent  Here s a millionaire who chose self actualization over meeting basic  physiological needs   Early on in my career  I was living in a hotel via a maxed out credit card because I had nowhere to live  When I started my first business  my goal was to survive in the world  not change it  So while Musk and I both borrowed to live at one point  we were doing it for very different reasons  The reason for founding a company is important   but what s most critical is that entrepreneurs actively align to and abide by their actual motivation for the venture they re currently leading   When building your company  think visibility  not just vision  How far ahead can you practically see   When I was a first time founder bootstrapping a business  there were many times when I could only see weeks ahead  I aimed to think further out  but when you re trying to make payroll  you have to make or save capital to survive  so you live in the short term  This applies even more so to entrepreneurs in markets outside of Silicon Valley  where capital is a luxury   In my next business  I raised capital  could see about a year ahead and was thinking in months  More than a company  it was like a big project that had milestones because investors insisted on incremental improvements in order to get to the next tranche of capital  Essentially  the product was the company   they both shared the same lifespan   In my last company  we thought in years  It allowed us to focus not on revenues  but on user experience and retention  Our goal was to convene and serve a strong customer base  For that  we had to focus on building a great company   not just a great product   to develop a relationship with customers and evolve with them  We kept our burn low to extend our runway as far as possible  to ensure the flexibility and freedom we needed to focus on our users   The frame of reference for my current company is a decade  The horizon is that far out not only because we re trying to create an industry   a new corner of a marketplace where people relate and transact differently  It s no longer just the product  company or customers individually  but collectively   and we have designed our plan to be the unifying agent   It is the rare company that impacts generations that follow  They influence the way people not yet born use products not yet made in a future not yet realized  It may seem more like science fiction in this realm  but there are founders that aspire to that type of of runway and horizon  They seek to influence a time that they may not be around to experience   In short  it s less a hierarchy of needs  and more a horizon of needs  A founder s early task is to not only define a vision  but also determine the visibility with which she can comfortably operate   Horizon of Needs  A recursive product strategy involves backing into the first step needed to build a long term company  That is why a founder must identify her motivation from the start in order to determine if long term entails ten months or ten years  What drives a founder and the corresponding timeframe is important  but accurate self assessment is paramount  Not every company or founder will choose to build for the next generation  nor are they guaranteed to do so even if they try  The more distant the horizon  the more there s variability  such as market dynamics  competitors  new technology  fundraising cycles   the list goes on  There s a rich canon of startup advice out there to navigate those factors  The offer of recursive product strategy is a way to build a company for the long term  The trick to getting there is first to pave the right length of runway and back down it in reverse  And of course  as Musk said  don t tell anyone,"[1097 829 1061 19 826 975 190 430 1339 17 408]"
839,training-dataset/product/1314.txt,product,3 Steps to Superior Product DecisionsProduct Managers are the mothers of invention  You need to decide on the features that will go into your product  What message will you be using to communicate the value that people will get out of your product  Who is your target market  Here are 3 steps to making Superior Product Decisions   Voting by the Dot  This strategy works great when you have a bunch of well defined ideas and must decide which set of ideas to move forward with  Say  for example that your team are working on the design of a new product  It s a mobile app that allows shoppers to find the best deals on groceries based on their diet and past purchasing history  Each team member has sketched out on paper what the app s User interface and user experience would look like  With a lot of options  how do you decide   You grant each member a few votes  Start with between three and five  You use dots to symbolize the votes  The next step in the process is deciding what to vote on  Any member can decide how many of their votes they want to put on any specific sketch or a segment t of the sketch  E G  Tom s sign up screen or Mike s sliding menu   This is a great way to weed out ideas you d like to move forward with  Now  ask the members of your team to cast their votes on the sketches  If a member really likes something  they may want to give it all their votes   Voting by the Dot is a great strategy for when you have a bunch of well defined ideas and must decide which set of ideas to move forward with  Click here to Tweet  Realistic Roadmapping   Quick Decisions  You need to make your roadmap visible to key execs and realistic  This is your bread and butter document  your most effective way of communicating strategy for your product  Do not set dates that can t be achieved  Don t get bogged down in the details  Make it equally understandable to all   Using Rapid Feedback  This decision making technique works best when your goal is to process many ideas with people who are not familiar with them   For example  your team could be working on a mobile app that tracks walking distance and have recently launched the MVP version  You want to collect input from the stakeholders and Subject Matter Experts as to the direction you are proposing for the product  including data centric and technical aspects of the product   The first step using this technique is to name a facilitator  someone who will lead and make sure everyone stays on track   Next  jot down a description of every idea that you d like to gather feedback on  The idea here is to describe the idea in less than a minute  Using a format that answers some key questions is a good way to do this   What is the product   Who is the target market   What problem does it solve   When you are sitting with your stakeholders  let them know how the technique works  Then  start describing your ideas  Set a time so those around you know when the time has expired   Next  set the time for 2 minutes and have your stakeholders ask any questions to clarify your idea   Now  spend 3 minutes listening to the participants chime in with their amendments to the idea  The key here is to encourage positive feedback that only builds on the idea and make it more solid  The key in this exercise is to take the ideas and make them better  Within 60 minutes you will have a bunch of ideas that started out scaled down and are now better  Now  go out and develop them with your user base   Rapid Feedback is a decision making technique that works best when your goal is to process many ideas with people who are not familiar with them  Click here to Tweet,"[839 77 180 1376 1093 1030 190 17 116 1387 1339]"
854,training-dataset/product/823.txt,product,Three commandments for product managersIt almost looked like a mistake  but it changed the course of his career     Matt Krueger s work on the Windows team had always erred toward the marketing side of things  But he d just been assigned a project that would give him the chance to actually build a product  Long wanting to reside in product  Matt had been locked out by Microsoft s insistence that PMs know how to code      Early on it was implanted in me that if you wanted to really have an impact on the product  you had to be more on the engineering side   he said   I was always personally interested in building and solving problems on the product side  but without the ability to code  it was really difficult to go toe to toe with engineers    At the time  Matt couldn t code  but he was a process phenom  Because of his ability to coordinate people and drive them toward a cause  Matt eventually ascended the product ranks at Microsoft and eventually Lumosity  where he became VP of Product  Now he s co founded Savvy  but even as his responsibilities multiply  his heart remains in product     Matt ultimately did learn to code  but that s not what made him a great product leader  He believes great PMs do 3 important things so ask yourself   Can you listen     Can you make tough decisions and live with them   Can you tell compelling stories to different audiences   These are the traits that make exceptional PMs   Listening deeply  The first thing a good product manager must do is listen more  Also  listen better   Matt s very easy to talk to  but the kind of listening he advocates isn t just smiles and nods  It s proactive in nature  and sometimes even aggressive    I use  listen  very broadly   he said   Whether it s through an interview  a focus group  or a survey  you have to listen to what the customer is trying to do and what their pain points are  especially the ones they can t express      The PM role originated because understanding problems is hard  True understanding requires not only listening to what s said  but also what isn t  When Matt sits down with a customer or an engineer  he makes sure to hear what s in between the lines   If you accept that coding is a skill that should be on every PM s utility belt  listening is why  It s hard to move beyond the literal words and hear an engineer s actual problem when you re not fluent in their language  And you probably wouldn t be asking that much follow up      You have to listen to the engineers actually building the product   Matt said   That s not just firing Slack messages back and forth  but deeply understanding what s possible  why something may not be possible  whether you could tweak something that makes it more ideal    One of Matt s techniques for listening is the famous Five Whys  Another is to ask questions until you ve reduced the problem to its barest state  Is it A  Or B  If we were to build this feature  hypothetically  what would be the first thing that we need to do  Why s that  Say  we want to rebuild the payment system what s the hardest part   These shouldn t be Yes No questions  Ideally  these conversations are best in person      These can sometimes be stupid  broad questions   Matt admitted   But it starts a dialogue  It gets them talking  and you have to pay attention to what s negotiable and what s not    Along with listening to customers and colleagues  you have to listen to data  In that case  aggression still applies  PMs can t passively watch numbers roll in  they need to sift through it and discover patterns   So  what is all this listening for   Make decisions that upset people  You re unlikely to find anyone in the technology sector more friendly and good natured than Matt Krueger  so try not to take this next commandment personally   The fact is if everyone s happy  not enough is at stake    Great product managers make tough decisions  knowing that it s going to piss someone off or make someone upset   he said   If you try to please everyone as a product manager  you will crash and burn    From where Matt stood  Windows had grown stagnant because the company was happy to rest on its laurels and avoid tough decisions    It was eminently clear to me that we were living through the innovator s dilemma   he said   We had a cash cow  and couldn t bring ourselves to make the changes necessary to innovate if it meant foregoing income in the short term    Instead of innovative changes  the Windows team settled for optimizations that felt agreeable  if useless  The product folks wanted their operating system to be lovable    For example  we wanted people to love the operating system the way we did it was our baby   Matt said   But no one loves an operating system    Barring a miracle  consumers weren t going to fall hard for an operating system  and product managers hold themselves to roadmaps  not miracles  The most Windows could ultimately accomplish was providing a powerful base for the types of applications that consumers did love    If you re a utility  then by God be the best utility you can be   Matt said   We should ve gotten out of our own way and enabled developers to innovate instead of  for example  trying to make the start menu sexy    Innovating gets harder as you become more successful  not less  From the second Matt joined Lumosity as a product manager  he made tough decisions  but those choices didn t affect nearly as many people as the ones he made as VP  As it becomes more difficult to make tough decisions  so too does it become more important    Someone has to make that call   he said   If I do it  I might be wrong we ll see  There s some bravery in it    The bravery  of course  lies in the blowback  And that s where Matt s third commandment comes in  Good products managers are ready to explain themselves   Multifaceted storytelling  At every turn  you need to be able to effectively communicate your decisions and mobilize others to your cause  You ve listened  you ve acted  now you need to explain  One of the best ways to explain something is through narrative   Anyone can tell a single story  though  PMs need to tell multiple  and perhaps more strategically  different versions of the same story to several audiences    You need to communicate and explain your tough decisions to the team so that they are bought in   Matt said   Another thing I saw at Microsoft which is what bad PMs do is spit out decisions and expect the team not to question it    As the VP of Product at Lumosity  Matt had a few different audiences  his own team  the board of directors  and the company at large  Each group essentially wanted a product vision and plan that would give them faith in the future   But facing three different audiences  Matt s product vision had to be prismic  At this angle  certain qualities were emphasized  At another  others were    When you re talking to the board  it might be very strategy focused  very analytical  and very dry  but it s still a story you want them to buy into   he said   For the entire company  it s about tying product vision to the overall mission  People didn t join Lumosity because it was growing or because it had a great office  but because they believed in the mission    And then there s Matt s PM team    When you re talking to the PM team  you give some amount of the larger picture  but it s also important to articulate the short term goals we re building toward    Matt said   The whole team needs to be on the same page with where we re trying to go   how we can get there  and how we ll know when we ve arrived    The more Matt has listened to problems and been forced to make tough decisions  the more he s had to effectively communicate his actions  But continually running through this cycle has helped him carry the weight of a product vision  He ll have to carry these lessons forward as he leads not only a product team but a company  It turns out these 3 traits are critical at every size of company  from large enterprises to nascent startups   PMs as CEO  Matt s newest endeavor is Savvy  a service that lowers your bills and invests the rest  Right now  they negotiate a lower rate on your cable bill on your behalf and save people an average of  300 per year    My co founder Sushmita Subramanian and I wanted to help people become more financially healthy   he said   We re still in beta  but we ve been able to save people thousands of dollars on their bills  Whether it s  300 on cable   1000 on my sister s insurance  or  12 000 on my dad s mortgage   it all adds up  When you take those savings each year and invest them it becomes life changing    With just the two founders doing everything right now  there s no need for roles or titles  But the job of founder or CEO is something he was prepared for by the product manager role  It s a cliche that PMs are the  CEO of a product  but there s some truth to it when you look at the responsibilities and skills required    You ll always have successful CEOs with lots of different backgrounds  but I do think that the product skillset is a good fit   he said   The practice of having to take in a variety of inputs and then solving big problems lends itself to what a CEO ultimately ends up doing day to day    The three characteristics are every bit as important to him in his new role as they were when he was a PM   If Savvy is successful  Matt and Sushmita will have to build a strong team and empower them to make decisions  It won t be an easy journey and  as every founder knows  there will be as many lows as there are highs     But at least when it comes to hiring PMs he ll know what to look for  people who listen  make decisions  and communicate through great stories,"[854 975 738 742 826 1061 17 190 1384 19 63]"
858,training-dataset/business/507.txt,business,Quip,"[858 738 1061 407 1273 513 107 973 74 120 1097]"
861,training-dataset/business/481.txt,business,What You Need for the Perfect Startup TeamThere is no universal plan for assembling the perfect team for launching a startup  Conventional entrepreneurial wisdom dictates that all you need for your company s starting lineup are a designer  a hacker  and a business person  or anyone who calls themselves a ninja at something  And while there is nothing wrong with having these types of people help you get your company off the ground  putting together a winning combination should not be taken lightly  After all  who you employ early on has a considerable influence on your startup s prospects   In this syndicated blog post  lean startup coach and advisor Tristan Kromer shares his insights on what comprises the complete startup team and what startups should look for in team members   Tristan is also a Mentor for the Istanbul Founder Institute   The article   The Complete Team   originally appeared on Grasshopperherder and has been republished below with permission   The Balanced Team  Some of this perfect team concept comes from the Balanced Team paradigm and perhaps Ideo  who even gives a nice venn diagram showing the origin of it on their about page   I don t know who came up with it    The Balanced Team works great in many situations  I love how Janice Fraser explained it to me   The designer is responsible fordesirability of the product  Talking with customers  understanding their needs  making sure the experience doesn t suck   The engineer is responsible for thefeasibility  S he must determine if the product can actually be built  how  and for how much   The business person is responsible for the viability of the business model  S he acts as the scales of justice when feasibility conflicts with desirability  The business person also takes care of the profit   loss statement and often manages the personalities involved   Incomplete Teams  The thing about abstract concepts is that they re abstract  Reality often disagrees   The balanced team paradigm falls short when it is directly translated from concept to person  The important thing is the role   Tech folks assume that feasibility belongs to the engineer  Not always   Remember  there are four parts to any MVP  Customer  Value Proposition  Channel  and Relationship  If this sounds weird  read my post of the Four Parts of a Minimum Viable Product   The MVP is not just about building the product  What about thefeasibility of the channel   If we re selling an enterprise CRM  the feasibility of building that channel belongs to our enterprise B2B sales person  The person with the big rolodex and crazy hustling skills   Don t have one  Then we have an incomplete team   Tristan s Incompleteness Theorem  An incomplete team s iteration velocity is limited by its missing pieces and its budget   That is to say  if we re missing a key skill or role  we re stuck  We will be unable to learn or make any progress in experimenting until members of our team are able to acquire that skill   OR  you can hire someone to fill in a gap  That gap might be a team that is   Selling an enterprise CRM with no sales person   In Ukraine selling to the German market with no one who speaks fluent German   From Vietnam creating an eCommerce site for American consumers where the designers has no experience with U S    Note  Really  this happens  I ve changed the countries to protect the innocent guilty    The Complete Team  The complete team is able to complete the Build Measure Learn loop  including all Four Parts of the Minimum Viable Product 1 They will have to build the sales channel and measure product progress via the customer relationship   Often the Hustler  a k a   Guy Who Can t Code  takes on these other responsibilities and wears many hats  Sometimes  others can perform more than one role  playing designer half the time and managing to get some sales calls in on the side   It s not about the number of people  but if there is a skills gap   No Constant  One of the most infuriating things about a Complete Team is that the definition changes over time   At the beginning of a project  we might not need an engineer  We just need to go talk to customers   We might not need a designer for a backend B2B application   We may need an outbound marketer to run a Google AdWords campaign  but we only need a few hundred visits to run our landing page test  so it s hardly a full time job   Temporary Completeness  Often the solution to these gaps is part time staff  It s often a dissatisfying level of quality  but better than nothing   Mediocre part time help is often better than trying to multitask   One of the great advantages that large corporations have over startups is a vast reserve of human capital  Which is what makes it even funnier when they fail to utilize it   Many corporations are underfunding their startups by insisting they  be scrappy  instead of just giving them the budget to hire someone to run a Google AdWords campaign   There are certain skills that every team member in every startup shouldlearn  Everyone should be able to talk to customers and have an insightful customer discovery conversation   But does every startup need to learn AdWords from scratch  Is that a critical skill   No   This is where more advanced accelerator programs like 500 Startups  who  unlike most accelerators  have an actual business model  have a massive advantage  With a specialized  Distribution  growth hacking team available to help their portfolio companies  they are able to complete teams with notable skill gaps in marketing  user acquisition  and channel strategy   In addition  their  Distro  growth hacking team gets to hone their craft at a radically accelerated rate with the experience of working with literally hundreds of startups  So  sorry Y Combinator  you re awesome in many ways  but I know where I d put my money   Key Takeaways  The team needs complete skill sets to go around the Build Measure Learn loop quickly  A complete team composition will change over time  Geographic boundaries affect team needs in terms of sales  marketing  design  and language ability  Startups  Consider outsourcing for completeness  Corporations   Accelerators  Consider shared services for completeness  If you could benefit from Tristan Kromer s expertise then apply to the Istanbul Founder Institute today    Team Corporate Teamwork Collaboration Assistance Concept image by Shutterstock,"[861 17 901 1241 39 1030 1061 694 938 973 19]"
866,training-dataset/business/1496.txt,business,How Does Your Startup s Management Spend its Time How Does Your Startup s Management Spend its Time   Calendars contain one of the under studied data sets within companies  How we spend our days  is of course  how we spend our lives  wrote Anne Dillard  How we spend our days at work determines what we and the company ultimately achieve   I remember meeting Ryan Fuller of Volometrix several years ago  He shared the story of the business he and his colleagues had built analyzing the way companies spend their days  For one company  they tallied the annual hourly contribution of employees to support the three hour weekly executive team meeting  it was something on the order 300 000 hours or about 150 person years  Quite an investment   In December  the Volometrix team published a report on What Great Managers Do Daily in HBR  This analysis substantiates the team dynamics that most people intuit already   First  great managers set the expectations of how much time the team should work  Second  great managers balance the workload across the team  Third  great managers maintain broad networks within their companies  Fourth  great managers spend more than 30 minutes every three weeks with their reports  More time is always better   The Volometrix insights originate from large companies  So do they apply to startups  The third point likely has a parallel in startups  great managers maintain broad networks within and across companies  I suspect the great benefit of a strong network is finding new opportunities to inspire and enthuse a team   All of the other points are immediately applicable to any business with managers  In fact  they extend to almost any team   Great teams share their workloads  spend time with each other  challenge each other to do better  and look for inspiration and opportunity from the outside   Is this how your startup s management is spending its time   Published 2017 01 09 in Management Startups,"[866 1146 315 17 391 973 1061 19 1030 1093 962]"
898,training-dataset/business/1511.txt,business,There are 5 Points on the Scale of Remote Working  Here s Where We Fall at Buffer I ve recently found myself reflecting a lot on being a distributed team and the nature of a company where the team works from remote locations to accomplish our work   Scaling remote working has been a challenge as the team has grown  Remote companies are still relatively rare  and therefore all of us who are choosing to have a remote friendly culture need to do two things   Work through the normal challenges of growing as a company and as a team Put time into figuring out how remote can scale  where there is no real pre existing playbook  One of the significant commitments we ve recently made at Buffer is to approach our company growth goals in a long term fashion  staying true to our culture of remote working  This means we are deliberately making time to try to scale remote working  even if this may at times feel like it comes at the expense of short term financial growth   It is my belief that working to develop a great remote working culture is an investment that will pay dividends for decades to come  If we can make this work over the long term  we set the company up for many significant advantages and great freedom for us as a team   The 5 Points on the Scale of Remote Working  In my reflections  I realized that I see remote working as a scale  with five points along the spectrum from  not remote  to  fully distributed    1  Office based culture  not remote   At the far end of the spectrum  we have what is today perhaps the most typical working environment for companies  In this model  you have your whole team in one or more offices   These companies have set working hours that are strict or loosely enforced  Employees work from the office all day and don t have much flexibility in their day  They also wouldn t be able to choose their work environment and to focus on the space they find themselves the most productive in   Of course  office based environments are also awesome for a whole bunch of reasons  People more naturally have close bonds and friendships forming  They can whiteboard and brainstorm  which is often very productive  If there are people who are junior in their role at the company  they can very readily and easily get help so they don t get stuck   2  Office based with a work from home option  Next on the scale are companies which operate from a single office and have started to give team members the option to work from home one or more days per week  This is a great start and perhaps a perfect way to start to experiment with a remote working culture   This small degree of remote friendliness will already test the culture and require a few key changes to how work happens within a team  For example  on those days that team members are working from home  the team will need to mostly communicate through email  chat tools  or some other means than the more traditional face to face methods  which are sometimes more relied on in an office environment   One key challenge when starting to experiment with this setup is avoiding the people who work from home feeling left out of discussions that lead to key decisions  With most of the team in one place and a few people not in the office  it s easy for the people at home to feel like second class citizens   3  A remote team  in a single time zone  This is where things start to get more truly remote   although some remote companies do still choose to have the team mostly in one time zone or very few largely overlapping time zones   This is a truly remote setup  so the way work happens is different than a team based in an office  Text based communication and collaboration tools will come in here   At the same time in this setup  there are still a lot of hours of overlap  if not full overlap  with everyone on the team  So at least the team can rely on someone being available when a teammate needs to get work done  This means a lot of the day to day work can still be done in a synchronous fashion and work well   4  A worldwide remote team spread across numerous time zones  A step further is to have a team spread across different time zones   a setup where asynchronous collaboration becomes even more vital  They are likely just to have a few hours of overlap with other people on the team  This setup requires a little more structure to make communication and collaboration efficient   Sometimes companies set up this way will choose to concentrate certain roles in the same time zone  Other times  it will be a completely location independent setup  In either case  there are generally team members staying permanently in their location  for a long duration of time  So the company can create some consistency surrounding the setup of each team and can set up some forms of synchronous communication at the times of overlap   The challenges with a fully remote setup like this are numerous  however  there are also many benefits  One key benefit is around the clock coverage of customer support or engineering   5  A fully distributed team with nomadic team members  In my mind  this is the most extreme case of remote working  It s a fully remote team where some of the members of the team are nomadic and traveling   Our distributed team setup at Buffer is a result of our vision to create a workplace of the future and around our value to live and work smarter  This final point on the scale is the ultimate level I am currently striving for us to reach   Currently  we see some challenges in reaching this level of freedom for team members  especially while also having a collaboration system that can be efficient for this setup  A key milestone in my mind is that work continues regardless of people moving locations  Of course  it should be kept in mind that moving to a new place can affect productivity  I do  however  believe that there is a way team collaboration can happen  where regardless of the productivity challenges a team faces  work can happen the exact same way  no matter a teammate s location  This is what is truly needed to be able to work efficiently with nomadic people in the team   I believe open source can be a great inspiration for the kind of asynchronous collaboration that is core to this setup  Synchronous chat tools are problematic  At the same time  to cultivate culture and create bonds  synchronous chat tools and video calls are effective here  too  The key  it seems  is to separate  how work happens  from those synchronous communications   Over to You  I d love to hear about your perspectives on remote work in the comments   Do you do remote working at your company   Which level are you at  or do you see yourself a different level I ve not covered here   What do you think is worth striving for   This article originally appeared on Joel is   Icons made by Freepik  Flat Icons  VectorsMarket  Maxim Baskinski and Popcorn Arts,"[898 17 973 296 981 497 1385 955 499 1030 315]"
901,training-dataset/product/449.txt,product,Lean experiments  Tristan Kromer on better product process274 Flares 274 Flares    I spoke to Lean Startup coach Tristan Kromer at Lean Startup Week earlier this month  where he presented a workshop about a  lean experiments toolbox   Lean Startup Week is a conference for teams and leaders interested in applying a Lean Startup methodology to their product and Tristan helped to organise the Lean Unconference that kicked off the week s activities  He is also editor and primary author of the Real Startup Book and runs lean consulting firm TriKro LLC   The product I work on  Notion  is designed to help teams communicate and collaborate on their data so they can align everyone around their goals and experiments  I wanted to find out how Tristan approaches the use of data to guide product process   Designing your hypothesis  Tristan recently published a blog which discusses the idea of  assumptions vs  hypotheses   He believes that when just starting  our biggest challenge is identify our own assumptions rather than to build an MVP  I m interested in how cognitive bias can interfere with product decisions  so I asked Tristan how teams can determine if their ideas are being posed as real foundations for experimentation   An assumption is something accepted as true without question  A hypothesis is a proposed explanation or prediction that is a starting point for experimentation   he says   Assumptions are fine if they are made consciously  For example  I have an assumption that Javascript is a thriving programming language  I don t really feel like testing that assumption and it s very low risk  so I ll leave it as an assumption I take for granted    However   If we have an assumption such as  Everyone will buy our product   that s obviously very dangerous and probably not true  You can tell the difference because an assumption is usually quite vague and goes unchallenged as the truth  A hypothesis must be very specific  should make a falsifiable prediction  and should be discussed in the context of an experiment    The metrics that matter  Experiments generate data for a team to decide whether to move forward or to change direction  What does he feel are the most important metrics to inform these decisions  Below are four of the most important metrics in his practice    Iteration Velocity   How quickly is the team running experiments   see more here     How quickly is the team running experiments   see more here  Knowledge   Experiment Ratio   What   of those experiments are resulting in knowledge     What   of those experiments are resulting in knowledge  Team Morale   How does the team get along and work together from a qualitative standpoint     How does the team get along and work together from a qualitative standpoint  Compass   Does the team have a product dashboard with actionable metrics   The Lean mantra is  fail fast   but this can feel uncomfortable to many product people  The principle is rooted in the assertion that it is better to know if a product hypothesis fails to meet customer needs  so you avoid making things that don t add value  Tristan comments   The best way to avoid failure is to stop defining an invalid hypothesis as failure  It s not failure  it s learning  The only way we truly fail as a startup is if we re not learning    Does Lean really work   Tristan cites AirBnB as a true lean success story  As detailed in this GrowthHackers case study  AirBnB endured two years of early stage development without seeing much traction  Like many startup founders  Brian Chesky and Joe Gebbia set out to solve a problem for themselves  they were struggling to pay the rent on their San Francisco apartment  and decided to engineer a better solution   But early on  customers were reluctant  as were some high profile investors   By using lean principles and relentless hustle  the company began to run experiments to increase confidence for reluctant guests and hosts  In one of their most famous experiments  AirBnB paid professional photographers to visit hosts and make listings more enticing  Customers responded and listings with the professional photos performed 2 5 times better  Says Tristan   AirBnB is one of the most impressive success stories I ve seen and the way they implement lean thinking consistently and even at scale is truly impressive    What then are some of the most successful lean experiments Tristan has seen  While many of the best results are protected by NDAs  one great example he has worked with is the now shuttered music startup tentune me  He says   They invalidated their business model and iterated incredibly quickly with paper prototypes in a coffee shop  but it doesn t make for a sexy lean startup story because they ultimately decided the business was a bad idea and shut it down  I m more impressed with people who have the courage to shut down bad ideas than people who were lucky enough to succeed with their first experiment    Start at Learn   Build Measure Learn  may be the most famous of the Lean Startup mottos  but many teams struggle with how to implement experiments and data tracking in their organisation  What is Tristan s advice is for teams who want to start using lean principles   Start at Learn  we shouldn t start at Build   he says   We should start by asking   What do we need to learn  What s the riskiest thing about this business    Once we have that learning goal  we can go backwards to measure and figure out exactly what data would help us learn or answer a specific question  They we go to Build and build an experiment to help us acquire that data  So we go through the loop backwards before we go forward    Experiments can sometimes be subject to confirmation bias by the sponsor or proposer of the project or feature  or if the proposer has already decided they ve come up with the right solution  it can be hard to invalidate  Tristan has this advice on combatting this issue   The most important thing with buy in on experiments is to get agreement on the fail conditions before running the experiment    He adds that a good lean team will run an experiment to try and  in validate the idea  But if the sponsor hasn t agreed to the fail condition  their ego and reality distortion field will likely get in the way of accepting any negative results   If we work with the sponsor as part of the team to agree on the criteria that would invalidate the hypothesis before the experiment  it s very  very hard to ignore the data  It forces the sponsor into a position where they have to disagree with themselves in order to disagree with the results  That s a cognitive dissonance that most people will try to avoid    I m looking forward to sharing more takeaways from Lean Startup Week  For more insights into running lean experiments  Tristan s recent article   What type of Lean Startup Experiment Should I Run   is worth a look,"[901 1371 861 1384 906 1061 826 190 1387 708 1241]"
904,training-dataset/product/936.txt,product,Shipping code isn t just for engineers  It s for designers too Great product teams are based around designers and engineers working closely together   We ve discussed before why this side by side partnership is important  but so is avoiding the curse of over communication  There are many situations where designers can refine the product details themselves  without having to go to engineering for help   Let s imagine a scenario where a designer is doing a round of QA and notices that a button isn t positioned correctly on a page  This could play out something like this   the designer spots the issue  and provides some improved CSS  the designer opens an issue and assigns it to the engineering team  the task is undertaken by an engineer  perhaps days or weeks later   there is a short conversation to clarify the work  the change is made  a quick desk QA happens before the code is okayed  the change is shipped to production  If you work on a product team  you ll agree this workflow makes no sense  Simple changes are dragged out across several days or weeks  pulling in multiple people at the expense of other work   Brooks s Law specifically calls out the explosion in communication overhead as more people are added to a project as a reason for delay   Surely there s a more efficient way to iterate on small changes  Thankfully  there is  Why shouldn t designers ship code to production themselves   This has two main benefits   1  Designers feel like they re empowered to take ownership over their own work  In many product teams  designers have to rely on engineering to make progress  This keeps designers in a subservient role  and makes engineering a bottleneck that can limit the entire team s progress  It also means designers are never in full control of the final polish of their product   a less than ideal situation   2  Engineers retain focus  which makes them more productive  Most engineers know that there are no small changes  Even something as trivial as changing a button color requires a number of small interactions and context shifts that add up to much more work than it looks on paper,"[904 363 1241 39 320 1385 973 77 955 1276 694]"
906,training-dataset/business/1261.txt,business,A 3x3x3 Perspective for getting your Vision  Strategy  and Product alignedA 3x3x3 Perspective for getting your Vision  Strategy  and Product aligned  I m sure you ve run into Simon Sinek s TED talk on the Golden Circle where he made the case for how great leaders communicate differently   leading first with their why  or purpose   then describing their how  or unique value proposition   and finally describing what they do   I find the Golden Circle is just as applicable when deconstructing or charting a new idea or venture   mapping quite nicely to the vision  strategy  and product pyramid that you ve probably also run into   The Vision Strategy and Product Pyramid  The mistake too many entrepreneurs make is rushing up this pyramid and prematurely falling in love with their product  This is the classic build first or solution first approach where the tendency is to lead with what you are building  product  instead of taking the requisite time needed to first get your vision  why  and strategy  how  in order   Vision and strategy are foundational pieces without which even a good product cannot withstand the weight of its market   The challenge  of course  is that vision  strategy  and product all have varying  and often fuzzy  time horizons   making it challenging to keep them aligned and actionable simultaneously   In this post  I ll outline a 3x3x3 perspective that we use at LEANSTACK to connect our vision  strategy and product decisions   First  get your why in order   If you don t know where you are going  any road will get you there      Lewis Carroll  Adapted from Alice in Wonderland  A few years ago I met a young startup team at an accelerator in Chile  A few months later they were in a different accelerator in Denmark  And then I met them again  in yet another accelerator  in the U S  That s when I sat them down and advised them to seriously reconsider their approach  They clearly had no problem getting into accelerators  it was getting out that was the problem  They failed to raise any investment at any of the accelerators  and weren t pushing their idea forward  Accelerator surfing as a strategy clearly wasn t working and the founders would be better served bootstrapping or pivoting reseting their idea   Most people don t think hard enough about their  why  because it can be a deep and often uncomfortable exercise  But starting without a  why  is akin to taking a road trip without a ballpark destination in mind  While it can be exciting and adventurous at the outset  it can quickly devolve into aimless and painful wandering   especially if each founder has a different destination in mind   When thinking about your why  it helps to deconstruct your goal into 2 parts  your purpose and your minimum success criteria  If you re familiar with OKRs  you ll see a nice parallel here  OKR stands for objectives and key results and it s a goal setting framework  first developed at Intel  and now used at many companies including Google  LinkedIn  and Uber   It works by having you first outline your ambitious qualitative goal  objective   and then defining your more specific quantitive metrics for measuring that goal  using key results    Let s see how you could apply this to your  why    Qualitative  Why do you exist   In order to get at your purpose  first consider the following question    What other than money do you want to achieve with your project    Think about the customer segments you want to serve and why  What problem or jobs do you want to solve for them  Will solving these problems make a significant enough impact on their lives  What s in it for you   Quantitative  How will you measure this impact   This is where things can quickly get fuzzy  Instead of trying to estimate the maximum upside potential of your idea  which is near impossible to accurately do   focus instead on your minimum success criteria   Your minimum success criteria is the smallest outcome that would deem your project a success 3 years from now   Some examples     Sell 100 000 copies of a book in 3 years    Achieve  10M revenue year in 3 years    Help start 1M startups in 3 years  If you have a vision past 3 years  which you should   focus on just the first 3 years  No one ever penalizes you for revising your goal upwards  It s not having a goal that gets us into trouble   I find 3 years to be the right length of time to get most ideas past product market fit and into early scaling which is about as far as we can meaningfully attempt to forecast  This is the first  3  in the 3x3x3 perspective   Minimum Success Criteria  I cover detailed steps for determining your minimum success criteria in my book  Scaling Lean  I ve also written about it here   Next  formulate possible hows for achieving your why   The essence of strategy is choosing what not to do      Michael Porter  With your ballpark destination defined  the next step is outlining a potentially viable roadmap for getting there  Too many entrepreneurs obsess over scaling risks from day one which is misplaced prioritization and a top killer of startups  and innovation projects   While you should certainly sketch out an over arching strategy for reaching your destination  you can t afford to implement it all from day one   A more effective approach is giving yourself permission to scale in stages   specifically 10X stages which is something I ve also written about previously here   A good roadmap should call out your significant milestone markers along the way  These not only help you chart your journey  but also inform the strategies  hows  you might employ to get there   Using a 10X Traction Model as a roadmap  Like your why  your hows also have qualitative  quantitative  and timeboxing components  I recommend timeboxing all your strategies to 90 days or 3 months which is the maximum amount of time you give to drive a pivot  change course   persevere  double down   or reset  kill the strategy  decision  This is the second  3  in the 3x3x3 perspective   Example   Qualitative  Achieve Problem Solution Fit  How  Use a mafia offer  problem solution interviews   Quantitative  Start 30 trials a month  Timebox  3 months  Finally  test your hows iteratively   If it disagrees with experiment  it s wrong      Richard Feynman  The Lean Startup really shines at testing big ideas using small and fast additive experiments using the build measure learn loop  But simply running experiments is not enough   You need to prioritize your experiments based on where you are with respect to your roadmap  and continuously adjust your experiments based on the learning feedback loop from your experiments and metrics   For this reason  we only sketch high level validation plan briefs at the outset for our 3 month strategies and leave the actual details to reveal themselves during our 3 week lean sprint iterations  Yes  this is the final  3  in the 3x3x3 perspective   Why 3 weeks  Coming from an agile scrum background  we were already running 2 week build sprints  We simply added an extra week for measure and learn which we found fairly easy to incorporate without too much additional overhead   If you d like to learn more about the mechanics of running LEAN Sprints  check out this post   The 3x3x3 perspective  The visual below summarizes the 3x3x3 perspective along with some of the the tools and artifacts we use   3x3x3 Vision Strategy and Product timeboxing  It s important to highlight that the journey up the pyramid is never a straight shot but one that is riddled with several scouting probes up and down the pyramid that inform your vision  strategy  and product that are tightly intertwined   The reason I emphasize timeboxing so much is that time is our scarcest resource  Unlike other types of resources  time only moves in one direction   So when baselining your own progress story  consider these 3 perspectives   What is your 3 year ballpark goal   purpose and minimum success criteria  What is your 3 month goal and how do you envision getting there   validation plan and strategy  What are you going to do in the next 3 weeks to test your strategies   experiment and lean sprints   Now for the scary visual  Visualizing this journey in units of sprints  we get this   You only have  48 sprints to go from idea to early scale which goes by a lot quicker than you expect  So make sure you make each one count,"[906 742 826 901 1387 116 1133 1153 1030 190 1339]"
912,training-dataset/business/1271.txt,business,The Most Surefire Way I ve Found to Win Enterprise DealsAt barely a year old  General Assembly  GA  had already come to a crossroads  The company had just pivoted from providing workspaces to companies to focusing solely on educational offerings for individuals  In that transition  its founders spotted a new and somewhat daunting opportunity  Could such a young company put together a week long Digital Bootcamp for leaders for one of the world s largest industrial conglomerates   As often happens in the startup world  GA said  yes  first  planning to figure out the  how  later  Fast forward to today  and GA is working with thousands of employers  including 20  of the Fortune 500  Not only does GA offer courses directly to individuals around the world but companies come to GA to help train and uplevel their talent   in everything from data science to UX to digital marketing and more   Luckily  they had a few secret weapons to help propel the business   including Anand Chopra McGowan  Core to the establishment and growth of GA s enterprise business  his team and he have been responsible for millions in revenue from deals with some of the largest companies in the world like GE  Visa  Walmart  L Oreal and more   He s the first to admit that success didn t happen overnight   not by a long shot  It took many conversations  post mortems and iteration cycles to get to a formula that worked in conference rooms packed with corporate stakeholders  Today  Chopra McGowan leads GA s European expansion   and his most impactful discovery over the last few years is this  The shorter the sales cycle  the likelier the win  As a result  most of the tweaks that were  and are still  made to GA s sales strategy drove toward tighter timeframes  And they learned a lot along the way   In this exclusive interview  he shares the exact tactics that helped GA achieve the shorter sales cycle that helped them nail deals with huge companies   and how other enterprise sales teams can do the same   THE THREE KEYS TO ACCELERATING SALES  Lead with insight and direction   Too many tech startups kick off conversations by talking about their novel products  services and underlying technology  Sounds good  but it obscures the benefits to the customer  i e  why they should be listening to you    and ends up extending the conversation  Instead  companies should lead with a clear vision of how the relationship between your companies will work and what they stand to gain by having it  tailored tightly to the customer    Develop an objective  data driven qualification model and apply it ruthlessly   When you re just starting out and have few customers  it s hard to say no to any meeting  But it s at precisely this stage of company growth when you need to be judicious about where to spend your time  This is why effective sales teams tend to have very clear qualification models that they apply throughout their sales cycle  This model should be refined over time  and use past experience to build an objective checklist at each step of the process so that sales execs know with confidence whether a sale is progressing   Add boosters to each buyer interaction   Most buyers at large companies have expectations around how long each phase of a sale process should take   and they tend to be longer than most young companies can tolerate  To survive  you must challenge these expectations wherever possible   how you prep for meetings  how you use time in meetings  in producing a proposal  in incorporating client feedback  A few cuts to each of these can substantially reduce your total cycle   DIGGING DEEPER INTO THE TACTICS  Okay  so those three themes might make sense  but how do you actually execute on them  Let s take a closer look at each and unpack the actions you can take to put them into practice   Bring insight and direction   First sales meetings tend to be all blue sky  This isn t great  People like structure  and they ll have more confidence in your ability to deliver if you strongly frame your thoughts and your process  Ideally  the structure you give them focuses on what you plan to deliver  says Chopra McGowan   For example  General Assembly s sales team says its core offering is helping companies and their people build new capabilities   We keep it short  We ll help you source  assess and train your talent   he says   Sure  we could go into all the hackathons  events  social impact initiatives and sponsored courses we offer too  but that would have dulled focus on what we can do for them  It s all about the rule of three   a three part framework is easy to wrap your mind around    The  source  assess and train  model gives the customer something concrete to envision  If your first conversation is too broad  you risk getting pulled far off topic  promising features you can t deliver  and requiring another meeting just to cover the basics  Start with a clear  simple model for purchase  and trust you ll have the chance to go into detail later   As you get more experience  you can offer several different models for purchase and lead with the one most relevant to the client in question  This demonstrates insight into what they really need and establishes credibility   For example  one of GA s first corporate customers wanted it to customize a portion of the curriculum for a leadership offsite  GA was able to develop an offering to fit the need  And once they had it  they could go into other conversations immediately offering this type of programming for retreats and offsites   That one suggestion crystallized a whole new way we could initiate relationships and cut down on time we would have been going through the whole menu of options   says Chopra McGowan   The other strategy for setting strong direction  Prescribe a timeline   If you re at a startup  most people will not have bought what you re selling before  They won t know how you plan to go from pitch to launch  unintentionally giving them permission to delay and dawdle   Chopra McGowan lays out a detailed timeline outlining each step with customers   typically on a single slide with color coded line items showing who is responsible for what  His team tries to get clients to explicitly confirm their acceptance of that plan  Even if they don t end up sticking to it exactly  it still establishes a shared understanding of what s about to happen  and the clearer it is the faster things go   Qualify ruthlessly   To make sure GA is investing its time wisely with the right customers  Chopra McGowan and his team apply the relatively common BANT system  which stands for Budget  Authority  Needs and Timing  New founders may not be familiar  If you ve been selling at IBM for 30 years  it s old news    Like many frameworks  it has its supporters and its detractors  but honestly if all four of those factors are a fit  the deal probably has a great chance   he says   What s new is that we ve focused less on the framework itself and more on developing an objective way to determine if a new opportunity actually meets what the framework is trying to prove   The following is an insights driven way to frame qualification questions that the GA team routinely uses in sales meetings   The questions on the right tend to yield answers that are more objectively reliable qualifiers for a new opportunity   You want to present proper context and then ask the question   says Chopra McGowan   When you ask people a completely open ended question like   How much money do you have   it s tough for them to answer  and you come off as unprofessional  Instead say   An engagement with us costs this much   is that in line with your expectations   If they seem surprised by how direct you re being  it s powerful to acknowledge that you re busy  you know they re busy and you just don t want to beat around the bush  Generally  there s appreciation for that    A lot of startups end up skipping over basic qualifiers  They d prefer to spend time on a sales call listing all the various things they can do  as opposed to addressing the potentially awkward and difficult questions   My colleague Nate Castro  who spent years as one of Apple s most successful sales leaders says all the time    we ll succeed in this role based on where we spend our time  and where we don t   In other words  it s as important for us to qualify out of a sales conversation as it is to qualify into one   says Chopra McGowan   The more conversations you have  the more qualifiers will emerge specific to your product or service  You ll hear new objections and questions you should absolutely bake into a matrix like the one above  In prepping for this article  Chopra McGowan spoke to Paul Hlatky  who runs west coast sales for email sales startup Yesware    Based on prior experience  Yesware s sales team has created this rigorous internal qualification framework that has helped them dramatically improve the productivity of their sales team   he says   If a prospect says they don t have an inside sales team or dedicated resources for lead generation  they re less likely to buy Yesware  Sales reps also ask what other sales tools they use to see if they ve made any similar investments   It pays off to add 2 3 qualifiers like this to your own BANT system to make sure you won t hit surprise roadblocks later   Regardless of the qualifying questions you choose  be prepared for buyers at these companies to hedge and dodge  Very rarely will they give you an iron clad answer  That doesn t mean they aren t giving you valuable information though  Listen and put in context   For instance  if they say they re  just shopping around  or can t provide even a ballpark answer to  do you have a learning and development budget   we know we should move on and we ve only wasted half an hour   not two weeks   of both parties  time   Talking about money can be very hard for salespeople and buyers alike  It feels awkward to ask questions about it if they re nervous to offend  If you re on the sales side  you have to get over it   Think about it as having confidence in your product   says Chopra McGowan   The more directly and clearly you re able to talk about money  the more confident you appear in your product    Behave like you re not selling  but simply facilitating the buying process  Have trust in the level of value you re offering   Turbo boost your process   If you take a hard look at your current sales cycle and list all the way you could save time  you re sure to spot opportunities  But there s a difference between shortcuts and boosters  If you cut steps for the sake of cutting  you could end up pushing your customer too much  failing to share crucial information  or missing out on even greater possibilities  Below are the five booster techniques that tend to pay off the most   Double Meetings   When traveling to meet a client  we ve found it works great to request a follow up meeting within 24 hours of the first one  schedule both at the same time upfront    sometimes even the same day   says Chopra McGowan  This allows you to take some time and digest what you learned at the first meeting and come right back with rough draft proposal to get quick feedback   Ideally  you set things up to meet with the larger group of stakeholders first  and then only with your primary client the second time  That makes it easier to schedule  and protects against a scenario where a large group meeting ends without clear next steps   a common pitfall  This departs from the normal cadence of having a meeting  sending a proposal within a few days  and scheduling follow up the next week   Double meetings can shave as much as two weeks off your sales cycle    We met with a big bank recently in Stockholm  and we decided to ask for two meetings   when you ve traveled to see them that adds pressure for them to say yes to that second meeting   says Chopra McGowan  whose team is based in London   Say you will only be there for a day and want to make the best use of everyone s time  We were able to leave the meeting with the bank with a word doc full of notes about what was most relevant to them  We were able to polish that up into a rough proposal we sent and got feedback on in the follow up meeting that same afternoon    The Agile Proposal  The idea here is to create very rough versions of your proposals in deals very quickly  and the goal is to get great feedback before moving forward with full fleshed out proposals  The first version could be as rough as a simple word document  the second could be one or two Keynote slides  and the final would be detailed and on brand   and would be much more likely to be a slam dunk for the client   In addition to speeding up feedback loops  this has the extra benefit of building a client s investment in the ultimate final proposal  keeping both parties tightly aligned throughout the cycle    It s critical that the first version get put together within 24 hours of your first meeting  and that you ve been clear with the client upfront that you re going to send them something very rough with the express purpose of getting feedback   Chopra McGowan says   We tell them at GA we like to practice what we preach re  rapid prototyping  that we ll be sending a document with initial thoughts later today  and we d like to get 20 minutes on everyone s calendar to continue to get feedback tomorrow    He has a team member  Alexandre Terrien  who takes it a step further  He prepares the rough proposal before even going to his first meeting with a client   He makes his best educated guess about what the company will need and goes in with these thoughts to get even more immediate feedback   he says   That shaves an entire step off his sales cycle and works incredibly well    Another strategy he s seen is drafting a first proposal in a shared Google Doc  allowing customers to make comments or edits directly in between meetings  That way there s even more feedback to go on before an official follow up   You want to make reviewing an early proposal as low lift as possible for your customer  Tell them simply to glance over it  maybe jot down some thoughts  and tell you if you re on the right track   Pre Intros  When you re meeting with larger groups of people at your customer  it s extremely helpful to set up very short 1 on 1 calls with anyone who s going to be new to the conversation  This ensures that when you re meeting with the whole group less time is wasted on introductions and getting everyone up to speed  It also gives you a bit of a heads up on the issues or questions you should be prepared to address in the group setting    I ve been in meetings where 8 people are on a deal on the customer side   we did pre calls with each of them and it saved us so much time when we were all in the room together   says Chopra McGowan   You don t have to rehash everything  and you get valuable intel to make any group interaction smoother    Often with a group meeting  it gets put on everyone s calendar and they show up with no idea about who you are or why they re there   We ve even had people ask if we work for their own company   he says   With that starting point  the chance they can go from not knowing us to a productive conversation is virtually nil    But if you managed to get them on the phone for just 10 minutes in the couple days leading up the meeting  they ll be much more oriented and ready to talk about something substantial  All the call has to be is a 3 minute summary of what your company does  a 3 minute proposal for how you think you might work together  2 minutes you to ask about their role  and 2 minutes for them to ask any questions    It can be that short and sweet if you want it to be  but we re surprised by how often people want to stay on the phone   says Chopra McGowan   Sometimes these conversations go on for a while and we learn all kinds of things that will be helpful  For example  one person told us their company had a training program the previous year that didn t work out  We got to ask a bunch of questions to learn why and what we could do differently  We were able to bring these insights to the group meeting a couple of days later    Cancellation Pouncing  Especially if you re trying to wrangle c level executives  meetings might be scheduled weeks or even months in the future  Instead of just accepting this  General Assembly s sales team checks with their assistants every few days leading up to a meeting to see if there have been any cancellations or any other surprise openings    We just met with a large Danish company   with the COO and CIO  We would have had to wait two months  and you better believe we took that slot  but Svetlana Knyazeva  who covers the region for our team  was in touch with their assistants three days after scheduling to see if anything opened up  We literally moved up the date by a month     Startups have to think month to month  Big companies think in 3  to 5 year plans  Don t let the length of one of their sales cycles dictate the length of your company s whole life    Train the Softer Touches   No one talks about it  but the energy a salesperson brings into the room for these types of conversations is critical to the sale   says Chopra McGowan   The way customers make these decisions is often pretty nebulous  Especially if you re a younger startup with limited data  A lot depends on human factors    A lot of startups also find themselves at a disadvantage because the age gap between the person selling and the person buying can be quite stark   This means you really need to send someone in there who can own the room  who can overcompensate for any skepticism that will automatically exist  This is almost entirely about your professional posture  hand gestures and eye contact  They ll render a judgment that fast and you want all signals to be on point   There are a few rules here that should always be top of mind   Always be on time  with no exceptions   Have your materials prepared  customized to the client  with no dependence on their tech working to present   Take notes  Even if the client isn t saying anything new to you  write things down   it demonstrates engagement with what they re saying    We used to fly much looser and never showed up with a presentation   thinking enterprises would appreciate the startup MO  We then realized it was much more impactful to show that work was invested upfront   Chopra McGowan says   It s fine to be agile  but you want to demonstrate you re very serious about the opportunity too  People will discount you fast otherwise    The GA team also made the mistake of undervaluing face to face meetings early on  and now trains new salespeople to take every opportunity to get in the same room with clients    We assume digital is fast and better  but we miss so much of human communication when we can t see each other   the body language  the attention being given   he says   On top of that  traveling to be there in person is a massive demonstration to the client of how important they are    Even though travel takes time  being in person can drastically reduce the number of meetings needed  because you get to place of mutual understanding and trust faster    Now after we reach some level of qualification and know there s some potential there  we ll immediately propose an in person meeting  Even when clients push back and say they can do it over the phone  we insist again   If it s all the same to you and you ll be in the office anyway  we d like to talk face to face     THE RIGHT NEXT STEPS  Getting your sales team to change their behavior and methods can be daunting  So here are the three simplest  most actionable things you can do in the next week to start seeing the impact of some of these approaches to sales   Quick follow up  The next time you schedule a meeting  also set up a follow up meeting   and set it for much sooner than you normally would  For example  if you have a meeting with a customer in the morning  ask for another 30 minutes later that day  expressly noting that the follow up meeting will be a chance for you to present some initial ideas  ask clarifying questions  and maybe draft a proposal    At worst  this will better validate your approach to solving the customer s problem   says Chopra McGowan   At best  it will shave meaningful time off your sales cycle    Start cancellation pouncing  Have your sales team make a list of every customer meeting that s on the calendar for more than a month in the future  Then ask them to contact those customers and specifically ask if anything has been cancelled that might allow for the previously scheduled meeting to be brought forward   Pattern match  Look at your 20 most successful customer relationships and see what objective patterns you can discern along a few factors  industry sector  company size  role of the key decision makers  average response time to emails  etc  The resulting list of common factors should be the starting point for your customized qualification framework  Make sure all the critical elements needed for a deal to be successful are included    Look at your current pipeline and see how each deal matches up to your new framework  Wherever there s a gap  focus on either how to fill it or moving on    Photographs courtesy of General Assembly,"[912 694 1061 19 391 190 17 1154 826 120 1385]"
922,training-dataset/product/95.txt,product,Discovering your UX team s core valuesDefining core values is beneficial when you re establishing or solidifying a place for UX within an organization  department  and process  It helps others who may not be familiar with your discipline understand what you stand for and how you work   From a team perspective  core values provide a motivational foundation for the work you produce  That s why teams should establish values together when there s buy in from everybody  teams operate more cohesively   How to define your core values  To come up with our core values  my team drew from our UX experience and created an affinity map that helped us discover patterns in our thoughts and  eventually  our top 5 shared values   Here s how we did it   1  I shared some core values that I found from various design organizations  Try posting these on a wall  or create a shared mood board online that people can easily add their own ideas to   Love it  RT  Shaztaar  Learning Intuit values with the newest au care team members   intuitlifeau  QuickBooksAU pic twitter com 3kDm3PdjGg   Melissa Bowden   BowdenMel  November 4  2015  2  Each team member wrote and submitted 10 values they believed we already practiced  I used a survey tool to collect this data  but handwritten cards or Post it notes are fine  too  Once everybody submitted  I exported a spreadsheet with all the values and printed it out  I cut out each value in preparation for the next step   3  The team met to categorize similar values on a corkboard and it turned out there were lots of common themes  We kept the environment and tone casual  Snacks helped spark conversations and helped people feel more comfortable   4  Each person got a random value  read it aloud  and tacked it on the wall near a similar value that was already posted  Creating an affinity map of everyone s core values showed us what team members viewed as most important  As we posted each value  we discussed its meaning and whether it was true   5  We identified 5 common themes among all the values submitted  Together  we wrote our final 5 core values   The team took the project a step further and worked on a collaborative design project together  We created posters that represented each of the core values  Each team member contributed in various ways  from defining the color palette to creating the poster design for a single value   Think about what your core values are  and get others excited about defining them   Post your core values in your workspace as a reminder to your team and to educate others within your organization   More tips  Ask yourself if you re being honest  If you re not  make it a goal to work towards that particular value   When defining your core values  think of your team s accomplishments and why you do what you do every day   Use your team s core values as a guide when hiring to help ensure new team members share the same values  You want them to also contribute to the team dynamic and vision   If you re a UX team of one  look for others who care about user experience in your company and form a user advocate group  Many people within an organization have a hand in the user experience of a product  Find other user advocates and create a group that meets regularly to bounce ideas off each other and give yourselves a name  Bringing these user advocates together helps set the vision and expectations for defining quality UX   Other employees have told us that our team is the most cohesive they ve ever seen  We see each other as a second family  I believe when you share the same UX values with your team  you create better work and the cohesion is apparent in the work and to others  You can count on each other to remind you of these values on a daily basis   Brainstorm ways you can incorporate your core values into your projects and work life  Our team holds regular design rituals  And on a monthly basis  we discuss classes we re taking and we share projects we re working on  including personal projects  It s a great way to share and learn from each other   Sharing a set of core values goes a long way in helping teams work efficiently toward common goals  By discovering your core values together  it shows that you value teamwork  You understand how motivation and engagement improves quality of work  and you value team cohesion,"[922 1265 304 76 973 19 77 1030 17 296 1003]"
923,training-dataset/product/411.txt,product,Shipping vs  Learning  Mike IndustriesShipping vs  Learning   What did you ship last quarter     When is this going to ship     Real artists ship    The verb  ship  has a long history in the software development world and before that  the physical world  In the physical world  it originally meant  to transport something on a vessel   and in the software world  it meant  to press a tape disk CD and send it out to consumers   Since then  it has come to simply mean  release   and even then  usually not in any sort of final form   Everyone inside tech companies loves shipping  It s the culmination of a lot of hard work and creativity from designers  engineers  PMs  researchers  and any number of other people  and when it s good it puts a dent in the universe  It is no wonder then that so much of the machinery of tech organizations is centered around shipping   But should it be  Especially given how much shipping itself has changed in the last couple of decades   Here is a non exhaustive list of problems that can occur when everything is oriented around shipping   Teams ship inferior or non impactful things in order to say they shipped something  Team A ships more than Team B and thus appears more competent  even though Team B s mission is more difficult or process more rigorous  Teams ship things that teach their company nothing  Teams manipulate  or very liberally analyze  data in order to justify shipping  Teams aren t given enough runway to do great work because of the constant pressure to ship ASAP  Team members are given  or not given  raises  promotions  or other praise because of how often  or seldom  they ship  Whenever I talk to design leaders from other organizations  I m struck by how similar everyone s challenges are  Over coffee with my friend Cap Watkins   Buzzfeed s Head of Design   we talked about if there was a better way to measure progress than shipping   Learning as a prime objective was what kept coming up  Organizations that learn the quickest seem the most likely to succeed over the long haul  This is not an original thought  for sure  but most companies don t seem to have operationalized it formally   Maybe shipping is actually just a subset of learning  or at the very least  in service of it  Put differently  shipping can be a great way to learn  but it s not the only way  and it s not always the best way  If all of that is true  how might we re orient the development process around learning   A provocative approach would be to prioritize learning as the most important regular deliverable of engineering product design teams  Let s say you are a manager  executive  or anyone else interested in a particular product within a company  Here is the sort of progress report you are probably used to seeing from whoever is leading the team building the thing   SEPTEMBER Launched movie recommendations  Hired 2 engineers  Fixed 30 bugs  Went into beta with collaborative filtering  Drafted product plan for internationalization  When written more with more structure  they can take the form of OKRs  Objectives   Key Results  or KPIs  Key Performance Indicators    While useful in showing that the team isn t sitting on their hands  it doesn t really hold anyone accountable for what good all of that is doing for the organization  What caused the team to launch movie recommendations and what will that mean for the business  What will 2 more engineers accomplish  What is the impact of the bugs fixed  What do we hope to learn from the collaborative filtering beta and how will we know we should even launch it  What have we learned about internationalization in terms of how much bigger it will make our business or how much of an effort it will be   A list like the one above is at best a tactical inventory  but at worst a veil that masks how little actual learning may be occurring  In other words  it may make you look like you re moving forward  good   at the expense of ignoring how little of a difference you are making  bad    What if  instead of delivering something like that every week  month  or quarter  you delivered something more like this   SEPTEMBER What we learned  Removing steps from our onboarding experience did not reduce user confusion  Instead  clearing up language such that users felt they were making progress resulted in the greatest gains  link to more details here    Removing steps from our onboarding experience did not reduce user confusion  Instead  clearing up language such that users felt they were making progress resulted in the greatest gains  link to more details here   Cost to learn  One researcher  one prototyper  one week of calendar time  and  2000 in participant fees   One researcher  one prototyper  one week of calendar time  and  2000 in participant fees  Plan to proceed  Productionize new language within one month   Productionize new language within one month  What s needed to proceed  Some internationalization help  we ll outsource this  What we learned  We have entire tab in our app   Theaters   that only 1  of our users regularly use  Additionally  we have another feature   Friends   buried under a sub menu  that almost half of our users use regularly  We aren t sure what the effects would be if replace Theaters with Friends  but it seems like the right thing to do   We have entire tab in our app   Theaters   that only 1  of our users regularly use  Additionally  we have another feature   Friends   buried under a sub menu  that almost half of our users use regularly  We aren t sure what the effects would be if replace Theaters with Friends  but it seems like the right thing to do  Cost to learn  One PM  from one day of digging through data   One PM  from one day of digging through data  Plan to proceed  Run an experiment swapping in a Friends tab in place of the Theaters tab and see what effect it has on metrics   Run an experiment swapping in a Friends tab in place of the Theaters tab and see what effect it has on metrics  What s needed to proceed  We have no dedicated data scientist in our group  Would be great to have one  but short of that  if we could just get a day per week of someone s time  we d take that  What we learned  Our projects take at least 30  longer than they should because of an outdated build process that has too many dependencies  In addition to the cost in extra time spent  we have also lost engineers and designers due to this frustration   Our projects take at least 30  longer than they should because of an outdated build process that has too many dependencies  In addition to the cost in extra time spent  we have also lost engineers and designers due to this frustration  Cost to learn  We ve been paying this cost in slow development and high attrition for at least two years   We ve been paying this cost in slow development and high attrition for at least two years  Plan to proceed  We just dedicated two weeks of an engineer s time to investigate the issues and what it would take to fix  Our hope is to stack rank what s easiest and most valuable to fix and then attack the list aggressively   We just dedicated two weeks of an engineer s time to investigate the issues and what it would take to fix  Our hope is to stack rank what s easiest and most valuable to fix and then attack the list aggressively  What s needed to proceed  We need air cover from executive leadership for probably about a month while we get this fixed  Meaning  we need to pause our current product work and not have to answer questions about why  This is important work  leverageable by the entire organization   What we learned is really the key deliverable  and something potentially interesting to many people across the company  Cost to learn is a chance to optimize for and highlight efficiency  as spending a year of engineering time carries much greater opportunity costs than running some efficient  qualitative testing  Plan to proceed lets people know the outcome of the learning and how it affects the way forward  And finally  what s needed to proceed spells out what a manager  executive  or anyone outside the core team can do to help   This is a rough sketch and could use plenty of iteration and refinement  but one thing I like about it is that while there are plenty of legitimate and illegitimate excuses for not shipping  there is really no excuse for not learning  In other words  a team could spend an entire quarter  or much longer  shipping absolutely nothing  even though they are doing all the right things  However  if a team is not learning quickly and regularly  they are almost certainly doing something wrong   I also like that a re orientation around learning gets people thinking in an entirely different way    What s the minimum we can ship with   becomes  How might we learn X most quickly     What do we want to release next quarter   becomes  What is most important for us to learn about our product next quarter     How can we ship more often   becomes  How can we increase the pace of our own learning    None of this means you won t also have to ask questions about shipping  but shipping simply becomes another way to learn  alongside research  prototyping  and many other methods  It s still what you ultimately want to get to  but it s more a by product of the methodical learning you hold yourself and all teams within the company accountable for every week  month  or quarter   Some of today s companies who learn and evolve the quickest have surely already operationalized some of this sort of thinking  even if informally or by accident  If you re reading this and you re thinking to yourself  we already do all of that    then that is fantastic  and I would love to hear more about your process in the comments   If  however  this sort of re orientation sounds refreshing to you  start talking about it with your team and see what steps you can take to try it out on a project or two  I m curious to hear what works best for everyone    This post also available on Medium,"[923 1030 1061 190 17 1385 1093 19 315 363 1003]"
938,training-dataset/product/726.txt,product,Minimum Viable TeamEvery startup I ve worked at folks have lamented about how there were never enough resources to accomplish everything they wanted to  Whether it was not enough engineers to build the desired features  not enough designers to design those experiences  not enough marketers to drum up interest  or not enough salespeople to generate revenue  It always felt like the startup couldn t hire fast enough to meet the desires of the business  And the classic belief was that we would be able to achieve our goals if we just had a few more people on the team  It s easy to understand why folks have that mentality given resources are certainly a necessary ingredient to getting things done  When a startup is in the company building   scaling phase  excellence in hiring and on boarding quality talent faster than others is a potential competitive advantage But I want to make the counter argument for why a minimum viable team  or a small team just big enough to ship and iterate on your minimum viable product  has it s own advantages at the earliest phase of a startup when you are pre product market fit As Fred Books taught us long ago   the cost of communication increases exponentially with the addition of each new team member on an R D team due to the nature of the inter connected work which requires everyone to be kept up to date on the current plans  designs  strategy  etc in order to ensure success Increasing your team size early on therefore increases your cost of communication  As things are moving quickly at the earliest stages and you are learning at an accelerated rate  there is significant new information being learned often that needs to be appropriately communicated  Therefore the smaller your team size  the lower the communication overhead that you experience  While there are various techniques to reduce communication overhead  there aren t any silver bullets here  And ignoring it and allowing poor communication on the team to result also comes at a material cost to the quality and velocity of work But when the entire team can sit together side by side and fit in a single conference room and be fed by two pizzas  you have incredible communication velocity and limited overall overhead  allowing your team to move quickly and in lock step as new information is learned and changes happen Decision making also tends to slow down on larger teams  This is because more stakeholders end up involved in decisions  more people s input is often needed to make the decision  and more socialization of the decision needs to happen With a very small team decisions can be made fast  There are usually very clear decision makers and far fewer people to convince and get buy in from  When an organization has very clear decision rights on who owns a decision  they can often scale decision making in larger teams  But while this works in theory  in practice I ve found it very difficult to truly manifest this  Especially at the earliest stages when folks often want to feel they have strong input into the direction of the company and is often the very reason why they decided to join an earlier stage startup in the first place Therefore the smaller the team the more naturally quick decisions can happen  Decisions on product features  decisions on target customer  decisions on acquisition strategy  monetization strategy  and maybe ultimately even the decision to pivot  There are a million decisions to be made at the earliest stages of a startup and the speed of your decision making can make all the difference After decisions are made  you need to ensure that the team is aligned on them in order to keep them motivated and working at their highest level of performance  This takes time and energy and effort to ensure such alignment  The team will inevitably be making quick decisions with limited information and are going to naturally have disagreements amongst the team  But you still need the rest of the team to accept and be motivated by the continued direction of the company  To do this you end up spending significant effort building buy in for the decision or for your team and capabilities to make such decisions in the first place  There isn t much of a shortcut here  Even with clear decision rights on who owns the decision  simply wielding those rights without driving buy in will de motivate your team and prevent them from giving you the high quality output you need to be successful Given this  the smaller the team the easiest it is to get that alignment from the team since there are just far fewer stakeholders that need to be bought off on the decision for directions to change What s exciting is you re seeing an incredible trend in the ability for far fewer and fewer people to build more and more incredible products and services given the advancements in developer productivity  available infrastructure  and third party services  Instagram  for example  had a team of only 13 employees and built a service with over 30 million users and sold to Facebook for  1B  Similarly WhatsApp had 55 employees and grew to over 450M users and sold to Facebook for  19B So when you think about adding the next hire to your team  make sure to weigh the advantages they bring against the costs that are imposed on communication  decision making  and alignment,"[938 17 1385 1030 1003 1376 76 1061 826 190 77]"
949,training-dataset/product/521.txt,product,Product Development Cycle Fundamentals   The MacroMichael Seibel  Y Combinator Partner  on effective development cycles   For weekly recaps of The Macro  sign up here   Before Justin tv grew into Twitch and Socialcam we spent years with a broken understanding of how to build product  We had meandering product meetings where we didn t write down our decisions  We didn t carefully spec new products so team members often had slightly different ideas about what we were building  We always wanted to build fully formed products instead of MVPs  And we rarely spec d the analytics for new products so we often didn t know how they were performing post launch   Development cycles often ran months  We were sick of the new feature by the time we launched them so we didn t iterate  Our product roadmap was so long that team members weren t excited to brainstorm new products because it was unclear if they would ever be built  And most horribly  product decisions were made exclusively by the founders in a non transparent process  Things were a mess   In this post I m going to cover product development cycle fundamentals that I learned to help solve all of the problems above  This will help you rapidly iterate  measure  test  and improve your product while fully engaging your team  This is not that same as shipping an MVP  I m assuming you ve released an MVP and are figuring out what to do next  which is where most startups spend most of their time   Define Your Development Cycle Length  Your development cycle should be dictated by your product  At Socialcam we were building for iOS so we settled on a two week cycle  which allowed us to thoroughly test before releasing to the App Store  If you re doing a web app your cycle can be shorter  if it s hardware it might be longer  The key is to structure the cycle so that teammates stay excited and still feel like they can brainstorm new ideas   Determine Your Goal s  and Identify the Product Lead  We ran one and only one team meeting  It was the product meeting and it happened on the first day of the dev cycle  Sometimes this meeting would go for five hours  sorry    Every product meeting was focused around one of three goals   1  Increasing content creation  2  Increasing new users  3  Increasing retention  Whichever goal we chose would be the focus of the meeting and  therefore  the next two weeks   As the product person on the team my role was to protect and improve the dev cycle and moderate the product meetings to ensure all team members felt comfortable contributing  Oftentimes just getting the opportunity to voice your idea and having it written on the board   even if it isn t built   massively increases buy in of the process   Organized and Inclusive Brainstorm  While we were brainstorming  ideas would be written on the whiteboard in one of the following categorizes  new features feature iterations  maintenance  and A B tests  Everyone was expected to contribute  Debates or putting down other people s ideas wasn t permitted  This was the time when everyone felt free to contribute without fear of judgement  The product lead is responsible for creating and maintaining that environment   From there each brainstormed item would be graded by the engineer in the meeting as easy  several can be done in a day   medium  half a day for one person   and hard  most of the dev cycle   No item could be so hard that it would last into another cycle and if it was  we d break it into smaller chunks  Usually this grading would be done item by item by the engineer with the most experience in that specific area  iOS features were ranked by the iOS guy and so on and so forth  This really helped non technical people understand which of their ideas were easy to build and which were hard  With this realization they often got better at thinking up easier and easier MVPs of their ideas  These easy ideas would then get built and  if they worked  would be iterated upon   Building a Consensus  Once we d written our ideas out we began to pick what we would work in through consensus  We would start with the hard ideas it was easy to form consensus because we knew we could only do one and because we knew that we would start a new dev cycle in two weeks  Then medium and then easy  Developing that consensus wasn t very hard because everyone had the opportunity to suggest their own ideas and because there was a clear goal and objective measurement of how long each idea would take to build  This process allowed you to grade the quality of your own idea and didn t allow personalities to bully their pet ideas through   Clear Spec and Clear Measurements of Success  Afterwards we would spec out each of the items on our list in detail and assign each item to a team member  or multiple team members   We would also spec the stats we needed to track in order to measure how effective the feature was  We would never release a feature without releasing the analytics for that feature and understanding what specific measurable result we wanted to create  Finally  we separated out the need to haves from the nice to haves on the list  If there wasn t time  the nice to haves would not be built  After that was done we would take a picture of the whiteboard and delete it  We didn t have a product roadmap outside of these two weeks and every product meeting we would start from scratch with the new goal  new analytics data from our last two weeks  and also often new insights from in person user testing  which we tried to do once a month   Working During the Development Cycle  For me  work after the first monday of the development cycle was a silent affair  My job was to get all the business and operations tasks done  Then I d dig through Mixpanel looking for interesting product insights or potential bugs  Finally  I also ran monthly user testing sessions in our office  My teammates   engineers and a designer   would work quietly and quickly knowing they had projects with limited scopes that were well spec d out  Finally  during the last three days of every development cycle we would all stop building and test  We had a testing list in Excel that included manual tests for all of our basic functionality  Every cycle we added tests for new features built in that cycle and we tested all items on our testing list twice  Everyone on the team tested and we often had competitions for who could test the fastest and who found the most bugs  Testing sucks so it s important that the burden is shared   The Results  At the end of the day  Socialcam did not achieve our dream of being the  Instagram for Video   In fact what we should have built looks a lot closer to Snapchat  But this process did allow us to iterate extremely quickly  As a result we were able to produce a laundry list of cool features very quickly  video filters  video borders  video titles  video soundtracks  video feed optimizations  multiple visual redesigns  user profiles  recommended channels  front back camera switching during a video  and much much more  It also allowed us to experiment with growth features that produced 16 million downloads in about 3 months and over 100 million people watching video on our website during the same period of time  Most importantly though  we did all of this work quickly  efficiently  without major arguments  issues with founder commitment  or really any team problems at all  Sometimes I wonder what would have happened if instead of selling the company we kept building for another year  But that s another story   Thank you Jared  Geoff  and Craig for helping me with this post  Ammon and Guillaume my co founders at Socialcam  and Justin  Emmett  and Kyle for surviving all the pain from the good old days at Justin tv   Sign up for weekly recaps of The Macro,"[949 769 190 1207 1093 116 77 1030 1003 1061 826]"
955,training-dataset/product/1386.txt,product,How Designers   Developers Can Work Better Together53 Flares 53 Flares    Jason Fleitz is Director of Web Operations at LivePerson  where they develop products such as LiveEngage  a platform that gives companies the ability to engage with their customers anytime on web sites  mobile and social networks   In this presentation at ProductTank NYC  he explains about how designers and developers can work better together on software projects  by adopting some simple tactics and strategies for better collaboration   Establish Understanding of the Product Vision  Jason starts by recommending that when you are about to begin work on any project with others  the whole team should understand the project vision  goals and objectives  Overlooking these steps happens more often than we realize  which leads to moments where different individuals on the same team are working towards different goals   By having a shared understanding of the product vision  teams will have a clear perspective on when and how feature decisions are made  By sharing the prioritization process  teams also mature in their knowledge of how the product is designed and how it will benefit the customer   Get to Know Your Users  Jason explains that the most valuable feedback that a product designer can get always comes directly from users  so it is crucial for product teams to have a deep understanding of the customer  In fact  regardless of your role  the responsibility of user research and testing should be shared across the whole team  Keeping the team in the research feedback loop can ensure that team has access to data  ensuring a faster turnaround when making design and or code changes   Building Relationships  Trust  and Transparency  Jason shared tactics you can use to build trust and transparency within any team  He emphasizes the importance of getting as much face time as possible  especially within a world where we have many other modes of communication such email and mobile devices  which are prone to distractions in ways that face to face conversations are not    In short  face to face conversations  or video conferencing where having remote team members is unavoidable  are a powerful way of building empathy  That empathy leads to trust  which in turn leads to a team that is able to work more effectively together   Working in Public  Email is still a standard medium for team communication  but Jason posits that email is an unnecessarily private way to share most information  and thus not ideal for building relationships and trust among teammates  More modern tools  such as Slack  bug trackers  or version control  allowing teams to communicate in a more open way  often with a traceable history  These tools allow teams to maximise context  build trust   accountability  and make it easier for new people to get involved or understand what your team is working on   Uncover Motivation  As a product person  finding out what gets your teammates excited about working on a project can come in handy  By tuning into what motivates them  you can develop ways to create opportunities for teammates to excel while also moving the project forward   The concept of motivation in the workplace has been explored and modelled by theorists in many different ways  such as Frederick Herzberg s Two Factor theory which suggests that there are two kinds of factors affecting motivation in different ways   Hygiene factors   These factors are things that  when taken away  cause people to become dissatisfied and want them back  Examples include  decent working conditions  security  pay  benefits  company policies  interpersonal relationships  Motivation Factors   These are factors whose presence actively motivate people  Their absence does not cause any particular dissatisfaction  it just fails to motivate  Examples include  challenging work  recognition  relationships  and growth potential   It s important to understand what motivates your team because team motivation drives team learning  By working to understand your colleagues  you can better identify tasks that generate excitement and bring out the best in your team   A Generous Team Member is A Good Team Player  Generosity  according to Jason  can diffuse tension within a team  so start with being generous with your perception of your fellow team members  Being generous  and smart  with your time includes finding positive  constructive and encouraging ways to share feedback  Being generous with feedback can improve team synergy by giving team members the opportunity to build relationships with each other  This approach ultimately supports the team in achieving goals and milestones   Identify and talk through implementation trade offs  When it comes to keeping development costs low  especially at startups   being able to work together to identify features that are too expensive to develop and or release in a particular sprint is essential  To that end  designers should understand the principles of code  and engineers should be involved in the design process  Crucially  this cross functional collaboration should happen early in the development process  The more you can identify issues earlier on  the more successful your sprints will be  which can lead to a successful product launch  Don t forget that throughout this process  it s essential to have the team test  test  and test again  and that the responsibility of testing should be shared   Where Do We Go From Here   If you are working on a product team and you notice behaviours that indicate the team is experiencing challenges related to communication and collaboration  make the commitment to approach these challenges with the willingness to understand the overall product goals  Remember  being motivated  generous  empathetic  and always willing to have conversations in person will lead to a more connected  effective team that understands how to design great products  together,"[955 1030 17 116 1003 826 1241 39 1385 115 898]"
960,training-dataset/business/407.txt,business,Why GitHub Finally Abandoned Its Bossless WorkplaceThe software maker  which once prided itself on a flat corporate environment similar to Valve and Zappos  finds that workers can benefit from a little direction   Two years ago  Chris Wanstrath gathered the employees of his software startup GitHub into a meeting to notify them of a major change  They were all getting bosses   When Wanstrath and his co founders started GitHub in 2008  they were adamant that they use a flat corporate structure without managers or titles  GitHub quickly became an essential tool for software developers to share their code and collaborate on projects  and its creators gave part of the credit for that success to their nontraditional work culture  Although the founders took  fluidly  defined roles of president and chief executive officer  they said the otherwise lack of structure allowed workers to pursue their own ideas and congregate around whichever ones interested them most   Chris Wanstrath  Photographer  David Paul Morris Bloomberg  But a boss free setting had blind spots  Shortly after Wanstrath slid into the CEO chair at the beginning of 2014  Julie Ann Horvath  a developer at the startup  said she faced gender bias and was pressured into leaving by the previous CEO  Tom Preston Werner  and his wife  After an internal investigation found that he d acted inappropriately  Preston Werner resigned as president  Wanstrath penned a blog post acknowledging  challenges  facing efforts to create an inclusive work environment and promised to institute new HR policies   The mess highlighted that GitHub s six year experiment in self government had come up short  Wanstrath told staff of the switch to bosses the month after his co founder s departure  and the software engineering department began assigning managers in the spring  The company hasn t publicly discussed the change in detail until now   We re building a tool for software developers  but we re also hacking on the future of work   says Kakul Srivastava  GitHub s vice president of product management   That hacking has taken us down some pretty interesting paths  and we re a better company because we went down those paths  But not all of those paths were the right paths    As GitHub has grown to about 600 employees  it says a flat organization compromised its ability to get things done  GitHub says coordination by the heads of the engineering  legal  marketing  sales  and other departments has been crucial to recent achievements  including the ability to open source more projects than before  increase the frequency of some product updates to quarterly  and secure a major partnership this year with IBM   Coders at Ford Motor Co   General Electric Co   John Deere  and Target Corp  are among the more than 16 million users that now rely on the startup s services  GitHub is taking on increasingly ambitious tasks  such as organizing a two day developer conference on Sept  14 in San Francisco that s expected to attract 1 500 attendees  The company  valued at  2 billion by venture capitalists last year  declined to disclose revenue or other financials   Julio Avalos  who was one of the first 100 hires when he joined in 2012  says the Preston Warner episode helped demonstrate that some problems couldn t be solved by the masses  While the old times created a strong sense of camaraderie  employees didn t know who to direct questions to  either about uncomfortable confrontations with colleagues or about their own performance   Without even a minimal layer of management  it was difficult to have some of those conversations and to get people feeling like they understood what was expected of them  and that they were getting the support that they needed in order to do the best work   says Avalos  who s since been promoted to chief business officer  the only C level position besides CEO   It was a big shift for a startup that long resisted a corporate hierarchy and prided itself on a communal culture reflecting the ethos of the open source software it sells  Some employees were concerned that bosses would threaten the fun  casual work environment they had been sold on  Avalos says   The risk in startup culture is that you fetishize that early culture and you get committed to a set of practices that eventually outlive their usefulness   says Catherine Turco  an associate professor of work and organization at the MIT Sloan School of Management   Evan Williams  a founder of Twitter Inc   established his latest company Medium using the trendy self management method Holacracy  The philosophy enabled employees to take initiative at an important early stage in the blogging service s life  but it eventually became unwieldy  says Andy Doyle  head of operations  Coordinating between teams was more time consuming  and newcomers were put off by the idea of working in such a radical corporate atmosphere  At least Medium s experiment lasted longer than Google s  which was abandoned after just a few months in 2002   Several companies have managed to make it work  Zappos  the shoe retailer owned by Amazon com Inc   has maintained its use of Holacracy despite protests from staff  In January  the company shrugged off criticism of its non management methods  saying a 10 percent spike in turnover last year was due mostly to the departure of longtime employees who wanted to pursue other things  not to Holacracy  While this method is the most widely adopted  according to the Harvard Business Review  several related approaches have emerged  including Podularity  where business units are organized into autonomous  pods   or Teal  whereby workers can fill multiple  self defined roles that best reflect their authentic self  or  inner rightness    Exclusive insights on technology around the world  Get Fully Charged  from Bloomberg Technology   New recruits at Valve Corp   the two decade old Bellevue  Washington  video game developer behind the Half Life series and Steam software  receive a handbook explaining the merits of corporate  flatland   where no one has a boss and employees are free to green light their own projects  At Morning Star Co   a California tomato grower  staff are supposed to be guided by  missions   not managers   It s very possible to maintain your startup culture while still doing what you need to do to scale   says Ethan Bernstein  assistant professor of leadership and organizational behavior at Harvard Business School   That trade off is not black and white    Despite GitHub s transition to a more conventional power structure  the company says it s still trying out different modes of work  About half its staff is remote  and some are nomads  moving from city to city every couple months  One person is currently road tripping across the U S  in an RV  He checks in with his boss daily,"[960 1061 1357 19 1154 430 190 973 120 826 1195]"
962,training-dataset/business/683.txt,business,How Do You Measure Leadership Are you a good leader  How do you know   In a startup culture that is obsessed with management by metrics  many founders struggle to answer this critical question about themselves  It s tempting to measure leaders simply by the success of their businesses  But even the most successful founders know how much timing and luck can be confounding factors in this approach  Measuring leadership through bottom line company performance also fails to provide any clues as to how someone can improve as a leader  So is there a better way   This essay describes a way to measure leadership that I hope will be helpful to those who seek to improve as leaders  It is based on observations I made when working closely with four leaders that I consider extraordinary  Ed Catmull  Pixar s founder   Steve Jobs  Pixar s CEO   John Lasseter  Pixar s Chief Creative Officer   and Bob Iger  Disney s CEO   To my surprise  these men could not have been more different in style  temperament  and approach  They did not conform to a single model of leadership  One was an introverted scientist while another was an extroverted artist  One was a college dropout who had founded a company and was infamous for brash behavior while another was a career executive who was exceptionally genteel and diplomatic   Despite their differences  these men were able to create an extraordinary amount of trust in the people around them  They built trust by doing the same three things exceptionally well  though each in his own way  I believe that these three traits are the foundational traits of great leaders You cannot be a great leader without them because you cannot build trust without them  And the trick to measuring leadership is to measure a leader s effectiveness along these three dimensions  as detailed in the notes section at the end of this post   Three Foundational Characteristics of Great Leaders  I believe that people of all temperaments  personality types  and personal professional backgrounds can be great leaders  and that they can lead quite differently and still be successful  But to be trusted and followed as a leader  you must excel in three key areas   1  Clarity of Thought and Communication  Great leaders think and communicate clearly  They describe a vision of the future that people find compelling to work hard to achieve  If your employees are confused about your mission and strategy  or do not find it motivating or credible  they will not follow you with the focus and determination necessary to succeed   Clarity of thought always precedes clarity of language  To improve your communication  the best thing you can do is to spend more time thinking about what you believe is truly important for your business  Once you ve crystallized what s important for everyone to understand  practice expressing it in simple terms  Simplicity is vital  A great example is the retail strategy that Amazon s Jeff Bezos communicated to his team years ago  He based it on three simple but enduring customer preferences  lower prices  bigger selection  and faster delivery  To this day  anything Amazon employees do to lower prices  expand selection  and accelerate delivery creates value for the customer and advances the company s strategy  As Bezos said   You can build a business strategy around the things that are stable in time  when you have something that you know is true  even over the long term  you can afford to put a lot of energy into it    Taking time to prepare internal communications becomes increasingly important as your company grows  As you scale  your employee base grows more diverse  and fewer of your employees have a personal relationship with you  Hence  they are much less likely to just  know what you mean  and more likely to be confused and critical if you don t communicate well   Great leaders spend hours preparing their internal communications  They don t just wing it  no matter how naturally talented they are as communicators  As an example  Shopify CEO Tobi L tke and his senior team spend hundreds of hours preparing for their annual employee Summit  As Tobi says   We want to be a loosely coupled  highly aligned company  The Summit is the main enabler of this because it is a grand sync  We spend countless hours preparing because if we communicate well at the Summit  we achieve great alignment by the end  We can then use our weekly townhalls to keep us from drifting too far apart until the next Summit    2  Judgment about People  Great leaders have great intuition about people  particularly when it comes to selecting people to whom they give power and responsibility  They are able to see hidden potential in people and detect cases where ambition exceeds ability  And when they make hiring or promotion mistakes  which are inevitable  they have the courage to rectify the situation if the employee cannot be coached to improve  Nothing does more damage to an organization or to the standing of a leader than picking the wrong leaders or failing to correct these mistakes when they happen  The judgment around the initial hiring or promotion decision is the most important  as leaders who fire too many of their own also lose a lot of credibility and trust   Not everyone is naturally gifted when it comes to intuition about people  but everyone can improve  Gathering more data will help you make better people decisions  When looking to hire leaders  try to meet as many of the best people in the field as possible as a way to sharpen your recognition skills  Spend as much time as you can getting to know executives that you are considering hiring  In a 2016 interview  Uber CTO Thuan Pham describes being interviewed by CEO Travis Kalanick for  30 hours straight  one on one  over two weeks   including over Skype when Travis was traveling   Throughout those 30 hours   Pham continued   I actually forgot it was an interview  It was just like a discussion between two colleagues    It also helps to do extensive reference checks on hires and ask for examples of behavior that shows good judgment and high integrity because these traits are hard to test in an interview  And try to learn from cases when you hire or promote the wrong person and are not able to coach them to improve   3  Personal Integrity and Commitment  Great leaders have exceptional personal integrity and commitment to their mission  Integrity means standing for something meaningful beyond oneself rather than being motivated by narrow personal interests  It means being able to admit when you have made a mistake rather than acting like you are always right and having the humility to receive critical feedback openly and work to improve  It means avoiding behavior like favoritism  conflicts of interest  inappropriate language  inappropriate work relationships  etc   that erode trust  A useful test is to ask yourself  if your team had full transparency into your private communications and behavior towards employees  would you be embarrassed by anything you have done or said  This is a high bar  but one that great leaders strive to meet   Beyond putting in the time  great leaders make their work into their core life mission in ways that inspire others  They derive deep personal meaning and fulfillment from leading people to achieve a mission  Their personal commitment translates into high levels of personal productivity and execution  which in turn becomes the foundation for pushing their organizations to do the same   It All Adds Up To Trust  So how do you know you are good leader  You are a good leader if you excel in the three areas described above and thereby earn the trust of the people around you   Building trust in this way is both a science and an art  it requires both competence and character  Trust is built when leaders think clearly about the future and move their organizations to the right place  in terms of product  sales  and people  Do the predictions you make about the future   about the products you should build  the investments you should make  and the changes in competitive or technological landscape   prove to be accurate  And do the people you have chosen to lead in your organization prove to be the right ones  Over time  the answers to these questions become known  and if you answer a lot of these questions correctly  you earn trust  I consider this the  science  of building trust  It s built on clarity of thought  good communication  and good judgment about people   The art of building trust is more complicated  It is closely tied with a leader s ability to communicate with integrity  It is built when you say the right thing at the right time  and show empathy and good judgment  It grows when you stand for ideals bigger than yourself rather than caring primarily about your personal success  wealth  fame  or position  It also grows when you are honest with others  admitting what you don t know  and not trying to be someone else  This is why you can t try to copy Steve Jobs or Ed Catmull in your quest to be a great leader  You can only be yourself   Most leaders understand the science of building trust  They understand that they need to think and communicate clearly about product and strategy and make good choices when they are hiring and promoting people into leadership positions  They understand that they have to show deep commitment and get things done  But in my experience  the truly great leaders also understand the art of building trust  Leaders have to make many hard decisions   firing people  taking responsibility for mistakes  disappointing people by saying no  etc  Great leaders treat these challenges as opportunities to build trust  They ask themselves which course of action and which style of communication will increase the trust that employees have in them  When faced with a difficult challenge  they optimize for trust   This  perhaps  is the lesson that great leaders teach everyone else  In difficult times  as you evaluate one course of action versus another  ask yourself which path will generate more trust in you as a person and as a leader  Always try to choose that path   Thanks to Tobi L tke  Tyler Bosmeny  Daniel Yanisse  David Rusenko  Sam Altman  Michael Seibel  and the YC Continuity team for reading drafts of this essay   NOTES   Survey Questions for Evaluating Leaders  The best approach to measuring leadership is to evaluate a leader s performance in the three areas in which all great leaders must excel  clarity of thought   communication  judgment about people  and personal integrity   commitment  Measuring leadership in this way requires gathering data from employees  but most startups have never done this in a systematic way   Eventually  all companies need to develop methods to gather employee sentiment and turn it into structured data  In fact one of the core responsibilities of a good HR team is to gather and document employee sentiment and use it to assess leadership  I suggest that startups begin to gather this data systematically once they reach about 50 people in size   Whatever set of data gathering techniques is used  it s critical to ask the right questions to assess leadership performance  These sample questions are meant to serve as a starting point for a more thorough employee survey  These questions are written to evaluate a CEO  but can easily be adapted to any leader in the company  Part of the goal is to see the level of alignment between a CEO s responses and that of the employees   1  Clarity of Thought and Communication  Questions for the CEO  Write down your company s mission  strategy  and key metrics   mission to metrics   in less than 2 minutes   Write down 2 3 themes that you have consistently emphasized in your communications to employees   Questions for Employees  current and departing   What is the company s mission and strategy   What are the most important operating metrics that measure the company s success   How does your work contribute to these key success metrics   How often has the company s definition of mission  strategy and metrics changed in the past 24 months  Or has it been the same over this time   What do you think is really important to the CEO  What does he or she consistently emphasize in communications   How effective and clear is the CEO in the following communication methods  written  speaking to a large group  speaking with a small group   2  Judgment About People  Questions for the CEO  Rate the effectiveness of each leader you have promoted or hired at the company   Write down the name of any leader that you have promoted or hired that you don t think is actually the right person to lead his her area   Have you exited the right employees  Or have you made mistakes   Questions for Employees  current and departing   Has the CEO chosen good leaders at the company   Which leaders do you respect and why   Are there leaders that you think are weak and why   Has the CEO replaced any leaders in the past year  Were these good decisions  from your perspective   What are the strengths and weaknesses of the senior leader  i e   CEO direct report  who oversees your area   Have any high performing members of your team chosen to leave the company in the past year  Why did they choose to leave   Ask departing employees  are they leaving because of concerns about senior leadership   3  Personal Integrity and Commitment  Questions for the CEO  Are there actions you have taken which you feel have diminished the confidence that employees have in your integrity  What are they   Do you ask for feedback about your performance  Are there examples when you have responded to employee feedback and changed your behavior   How do you rate your level of commitment to your job   How do you rate the level of commitment of your direct reports   Questions for Employees  current and departing   How would you rate your CEO s integrity   moral compass   Do you think the CEO listens well and is open to feedback  Are there examples where feedback has changed the CEO s behavior in a positive way   Have you seen examples of favoritism  inappropriate relationships  inappropriate language  conflicts of interest  or any other unethical behavior in the CEO   When asked anonymously  what do employees   direct reports feel motivates the CEO   How would you describe the level of personal commitment that the CEO shows to the mission of the company   Have you seen examples of lack of commitment from the CEO   Have you seen examples of lack of commitment from other leaders or from employees   Please see  What s the Second Job of a Startup CEO  for a more thorough discussion of creating purpose   alignment    Data gathering methods include employee roundtables mediated by the CEO or HR  structured questions asked as part of employee exit interviews  all hands or team meetings to gather employee feedback  hiring of external consultants to survey or interview employees  and on line or email surveys of employees,"[962 19 1061 17 1154 644 120 624 679 1146 76]"
973,training-dataset/business/569.txt,business,Top 10 Things I Learned from my First Year Working at a StartupOn September 14th  I celebrated my first Buffversary   a year at Buffer  a social media management startup  I thought it would be a good opportunity to take some time to reflect on the past year and share some of the things I learnt   A bit of background  I m a Community Champion and I have been working on our community initiatives such as our weekly  bufferchat and our Slack community  Recently  after the Marketing and Community team combined forces  I have started working on a few marketing projects too   I was working part time for the first nine months while finishing up the final year of my undergraduate degree in the UK  Since I graduated in July  I have started working full time and moved back to Singapore   The past year has been quite a wild and incredible journey with mostly ups and a few downs  In this post  I d love to share the top 10 things I learned in my first year at Buffer   1  Culture is important  Before I joined Buffer or even heard about Buffer  I had no idea what company culture was  I didn t know it is related to company values either  Embarrassingly  I once worked at a big company for eight months without knowing what the company values were   Now  I realize how important culture is  It plays a huge role in almost everything we do  from how we hire to how we build our product to how we market ourselves to how we interact with our customers and one another in the team and more   As our co founder and COO  Leo Widrich shared   Focusing on your company culture and values allows you to build a great company  It allows you to stop operating by policy and start operating by principle    It s not that policies are bad  they are probably necessary for certain things or at a certain stage  I think it s just when we have shared values that we all agree on  we are able to get onto the same page faster and make decisions faster  When we are facing difficult decisions  we are also able to fall back on our values and let them guide us   We have a value   Default to transparency   It s usually easy to be transparent when things are going well and much harder when things aren t  Earlier this year  we had some cash flow issues and had to unfortunately lay off several team members  It wasn t easy to share such news but I believe we never asked ourselves if we should share the news  We knew we would share it   2  Things change frequently  usually for the better  To give you a slight sense of it  When I first joined Buffer  we were just transitioning out of self management and embracing hierarchy and mentoring  Our Product teams structure have changed several times  I took over our Beta Community for a few weeks before passing the baton to Patrik Ward  our Product Research Lead  And recently  the Community and Marketing teams combined forces   At first glance  having such regular  and sometimes large scale  changes can be rather scary and possibly disruptive  However  on deeper analysis  I usually find they make a lot of sense and are often required in those circumstances   Our experiment with self management taught us that the concept might not quite suit us  As our team grew  we changed the team structure whenever it feels like the previous structure aren t working well for us anymore  The Product Research team has much more context around our product than I do so it feels better to let them head the Beta Community  The distinction between Marketing and Community has been quite blurry for us all these while  So far  each iteration has felt like an improvement   As the saying goes  change is the only constant  in a startup   Hence  I learned that it s important to be flexible and able to adapt quickly to changes    Fun fact  At the start of the year  I planned my OKRs for the entire year and quickly learned that it might not last that long    3  Challenge the norms  Fully distributed team  Formula based salaries  Transparent salaries  Transparent fund raising term sheet  Transparent emails  Public real time revenue dashboard   These are rather unconventional ways of doing things  Hiten Shah  our of our closest advisors  described the things we do as  crazy shit   We aren t doing all these just to be different but because we believe they could work and might be better for us   We chose to be a distributed team so that we could provide even better and timelier customer support  Having formula based salaries transcends the need to negotiate salary and prevents gender and color discriminations  We make many things transparent because we believe transparent breeds trust and trust is the foundation of great teamwork   We have also benefited from such less traditional practices  By working remotely  we can be where we are the happiest   traveling the world or being home with our family  When we made our salaries transparent  the number of inbound job applications increased greatly  I think when we were live blogging the hacking incident  someone s comment on the blog post helped us solve a puzzle of the hack   I learned that just because things are usually done in a certain way  it does not mean that s the only way of doing things  Sometimes  the unconventional ways might be even better   4  Measure results  not just hours  Talking about challenging the norm  this feels like another one  and one that I m still struggling with   It seems quite common to be measuring the number of hours we have worked than the amount of quality work we have produced  Maybe because it s easier to track time and time is easily understood and could be compared with even across different jobs    I worked 15 hours yesterday    I worked 80 hours last week    I worked till 2 am last night    I m guilty of this   I feel that I shouldn t only measure how many hours I ve worked but also how much quality work and results I ve produced during that time period   I do recognize that it can be challenging to measure the amount of quality work  too    If you could produce proportionally more quality work by working longer hours  that s great   Elon Musk comes to mind  though I believe few people are like him   I learned that beyond a certain number of hours  my productivity and quality of work fall and might even become negative   when I make mistakes in my work and have to redo the task another time  It might be more useful to spend those extra hours resting or doing something else to recharge myself   I m often reminded of this blog post and a graph in it   Measuring both time and results allows me to know how efficient and effective I am  instead of having a false badge of honor for working crazily long hours   5  Disconnecting is essential  Two weeks ago  I was burnt out   But I didn t really know at that time  because I still felt excited about the things I was working on  However  I did recognize that while I was excited  I had little motivation to work on my projects  I brushed it off  thinking that it might be just be one of  those  weeks and I d be alright soon   Then  I was forced to disconnect for four days after an eye surgery  I couldn t see anything on my laptop or mobile screen and it was imperative that I give my eyes time to recover or risk permanent damage  After the four days  I got back to work  feeling both excited and motivated to jump onto my projects  That was when I realized that I was burnt out the week before   At Buffer  we encourage team members to take time off through initiatives like unlimited vacation time  Recently  we instituted a new recommendation of minimum time off   While it s great to be disconnected from the internet and social media entirely once in a while  and I m glad I had the opportunity during that four days    I think just being fully disconnected from work alone occasionally can be very helpful too   6  Being focused and effective is important as resources is limited  The path we have chosen at Buffer is rather non Silicon Valley style  I believe most startups in Silicon Valley at our stage would have raised  30 40 millions of funding while we have raised about  4 million so far  Instead of an  aggressive growth  path  we have chosen to take the  natural growth  path   This meant that we can t simply hire more people or spend more to do more  We try to be lean and resourceful about achieving things  So it s important to focus on the most essential and impactful work   Just a while back  I asked our designers for help with our Medium publication logo  Upon reflection  I realized that might not be the best use of their time since the logo is probably not that important in the context of things  The content is likely to be much more important than the design or illustrations in the blog posts  If I could come up with a reasonable design  that would have been more effective overall   That said  Lorenz VS  one of our designers  was super kind to jump onto a sync with me to teach me more about design and helped with the logo design    This is a reason why we feel it s great for us to be generalists or T shaped people  i e  having a specialization and also being rather knowledgeable about other areas such as being a content marketer who can also design and code a little   This way we can take on different roles to tackle the various problems we would face and be more effective overall  For example  when I want to do some basic data analyses  I could do it myself  instead of asking for too much help  like I still do now    7  Teamwork makes the dream work  Having said the point above  I believe there are times when we would  and probably should  rely on one another in the team to get things done efficiently   when the level of skill required is rather advanced  for instance  That s why there are different roles in the team   Happiness Heroes  Data Analysts  Engineers  Life Savers  Culture Scouts and more   For the Marketing team  we are lucky to have David Gasquez to help us with data analysis we couldn t quite do previously  Also  Steve Dixon  a Product Designer turned Engineer  joined the Marketing team recently to cast his magic on our landing pages   I m guilty of creating several poorly designed landing pages    Another of such times is when we need to take days off for vacation or any other reasons  When I took six weeks off for my final exams  my teammates were awesome in covering my work  When they need help  I ll be sure to offer my support too   8  Surrounding myself with talented people makes me better  One of the  many  reasons I m grateful to be working at Buffer is I m surrounded by incredibly talented and driven people  It would probably take a book to share all the examples but I ll share a few  I m probably not doing them justice by mentioning only one of their many achievements and summarizing it into a sentence    Nicole M  Miller  our first Community Champion  built our amazing Buffer community  Steve Dixon was hired as a Product Designer and now he helps out with some engineering tasks  Rodolphe Dutel built a community of more than 20 000 remote workers as a side project  Katie Womersley taught herself how to code and is now our first Engineering Manager   I could go on forever   I strongly believe in the statement by Jim Rohn   You are the average of the five people you spend the most time with   Just by spending time these amazing people  I m motivated and inspired to become better at what I do   I think Scott Dinsmore of Live Your Legend said something along the lines of  When you surround yourself with people doing the  impossible   the  impossible  becomes possible   There are so many examples of possibility in the team  If I ever feel that something is impossible  I can likely find someone in the team who has done the  impossible  and know that it can be done   9  Learning is largely self driven and flexible  Of course  being motivated and inspired is only half of the equation to becoming better  Putting in the effort to learn and practice is the other half   I have a friend who just started his graduate job at one of the  Big 4  accounting firms  The first few things he went through were two days of orientation followed by training for his role  Unlike big corporations  we do not have structured training courses  yet   However  we have a huge amount of flexibility to pick what we want to learn and great mentors to guide us  more about this in the next point    My team lead  Kevan Lee  knows that I want to grow my marketing skills and has been encouraging me to start with content marketing  Now  I m working on our Medium publication  managing and editing guest posts  helping to promote content and more  Kevan and my fellow Marketing teammates have been really great with helping and teaching me too  On the side  I want to know how to code so I started learning how to code during my free time   I believe it makes most sense to pick up and hone skills that are requested for the job  Thankfully  at a startup where almost everyone wears multiple hats  almost any skill would be quite beneficial   10  Regular check ins are very helpful for personal and professional growth  Every week  I have my 1 on 1 session with my team lead  previously Nicole and now Kevan  Because we believe in bringing our whole self to work  we don t talk about only work matters  which includes culture related discussions  in our 1 on 1s but often our personal life too  Usually  I find these are the times when I grow the most on a personal and professional level   Recently  I started a habit of planning the agenda for each of my 1 on 1s  The simple agenda includes the things I want to discuss with Kevan and a brief weekly progress report  The act of planning the agenda itself has been very beneficial as it makes me pause and reflect on the past week and take stock of my progress against my Objectives and Key Results  OKRs    During my 1 on 1s  Kevan and I would also chat about longer term goals and career progression  I m very grateful that Kevan  and Nicole too  is very dedicated to nurturing us and making sure we are working on things we are interested in and inline with our longer term goals  I find this really great for career development  even at a time when we don t really have proper career development paths yet    Another reason I find 1 on 1s very beneficial is that my managers have created a very safe environment for me to share  I would say  anything  When I face any challenges or difficulties at work or outside work  I feel comfortable sharing these issues with them and getting their advice   Over to you  And that s the top 10 things I ve learnt in the past year  As I wrote this post  I thought of even more things I ve learnt during the year and I m very thankful for this opportunity   Now  onto my second year      Have you worked in a startup before  I d love to hear and learn about your experiences,"[973 497 981 17 315 304 19 1061 391 499 296]"
975,training-dataset/product/338.txt,product,Index Ventures  Ilya Fushman on growing products into platformsIlya Fushman played a key role in building Dropbox  Dropbox for Business and the Dropbox platform into a product suite with more than half a billion users  Today  as a General Partner at Index Ventures  the former Head of Product at Dropbox is helping a new generation of product first companies down a similar path  Ilya s Index portfolio includes Slack  Optimizely  Culture Amp  and more recently  Intercom  Ilya joined me on our podcast to talk about the challenges his product team faced during Dropbox s hyper growth stage  the importance of building a product roadmap sooner rather than later  how to build a successful developer platform  and much more  If you like what you hear  check out more episodes of our podcast  You can subscribe on iTunes or grab the RSS feed  What follows is a lightly edited transcript of the interview  Short on time  Here are five key takeaways  The two biggest challenges your product team will face as it begins to scale are communication and composition  Universally agreed upon principles and values from leadership are key  At an early stage  the product team has to extract the roadmap from people s heads and document it in some visible way  Don t do your five year vision on day one  Start small  A tight alignment between your marketing and product teams can drives focus  prioritization and execution in the company  A successful platform needs two things  a connection to new customers for the owner and unique functionality or tools for the developers  Startups are all about time and money management  You want to have as many shots at success as possible  No one should put out a bad product  but over polishing can be a hindrance  Matt Hodges  Our guest today is Ilya Fushman  a general partner at the global venture capital firm Index Ventures  Ilya  welcome to the show  You ve had an interesting career trajectory in that you had a run in the VC world  then hopped over to Dropbox  where you were a head of product  before arriving at Index   who s actually a Dropbox investor  Can you walk us through that journey and ultimately give us an understanding of what drew you out of working on product and back into venture capital  Ilya Fushman  So it all actually started a while before that  I did a PhD at Stanford in applied physics  I was trying to build a quantum computer  which was a lot of fun  To me the PhD was the ultimate product discovery process  and I ve always loved building products  I did a startup right after my PhD with some colleagues  where we built the world s most efficient solar cell  It was also the world s most expensive solar cell  so we learned quite a few lessons there  After that I transitioned into venture capital for the first time at a firm called Khosla Ventures  I learned a few things  one of which was I absolutely loved venture  I love the opportunity to work with different companies  be hands on  dive into different sectors and relive this product discovery process over and over and over again  I always wanted to be in venture  but I also learned that to be effective there  you had to have experience  I wanted to be a venture capitalist who d been there  who d done that  who d learned a few things and who d seen scale  When the opportunity came up to join Dropbox early  it was a no brainer  I spent four years there   during which we grew from  about 50 to 1500 people  There was an amazing journey  The opportunity to join Index first and foremost was what I really wanted to do  which is help people build new products and new businesses over and over again  The second aspect was that Index is a global firm  and the San Francisco office opened up in 2011  Part of what I was excited about was building Index itself  If you look at our office  one of the things you ll notice is all of our conference rooms are named after famous explorers  That s to me something that embodies both Index but the ethos of venture capital  and that was ultimately the driving decision for me  A product team at scale Matt  You mentioned that you d seen Dropbox go from 50 to 1 500 people over the course of four years  which is some serious hyper growth and presents a number of challenges along the way  What was the original composition of the product team like  and how did it evolve as Dropbox grew  Ilya  The very initial product team way before I got there was basically the founders   Drew and Arash  They had conceived of pretty much everything you could possibly think of building throughout most of the history of Dropbox  In fact I remember seeing a picture of them in their first office with a whiteboard  and they d literally written down almost everything we built at the end of the day and we re thinking about building  As a company scales and goes through these transitions and growth  first of all  everything changes  Second of all  you wind up bringing people to help extend the existing team  to take the vision from that white board  or from their heads  and actually put it into practice  The product team started with a few people  and we wound up adding more and more  We wound up acquiring lots of earlier stage companies where the founders had product experience of bigger companies and joined our product team  We wound up taking folks who were great internally and promoting them into the product roles  As we built more specialized products  with the business product for example  we wound up bringing people with that expertise into the company  The product team evolved with the scope and scale of the overall team  and the scope and scale of the product itself  Matt  When you say  product team   what does that mean and how was the team was structured  Ilya  Every team  at Dropbox  went through multiple evolutions and multiple restructurings  In fact we probably restructured everything every six months  If you think about a product team  there s product management  design  engineering  user research  ancillary functions around analytics  and we kept adding these over and over again  At the beginning it was really just a few product managers  a few designers and a bunch of engineers  Matt  What were some of the biggest challenges that you faced as the team grew  Ilya  Taking a step back  most early stage companies face fairly common challenges as they grow  Some are obviously business specific  but the most common global challenges are a few  The first one is communication  If you think about an early stage company  you are all sitting around one table  in one room  You have one kind of hive mind  and people already know what they need to do  Let s say you hit something like 50 people  You can still be in one room  but then you need to start communicating the value of what you re doing  the vision and the mission  and you need to get everybody on the same page  As you get to go 100 150 people  you no longer have that ability   The first and foremost thing to realize is that communication is incredibly important  The way information spreads in an organization is a diffusive process  The management team that has spent all this time together from the get go knows exactly what s important  They re all on the same page  One or two levels down  people have no idea  The manifestation of that is if you walk around the company and you say   Hey  what do you think is important  What do you think we re doing   Small scale you ll probably get one answer  at 50 people you might get two answers  At 100 150 people you ll probably get four or five answers  That s dangerous because ideally to hit your goals  to succeed in a rapidly evolving  fast moving environment  you need everybody to be on the same page  The second challenge is  the composition of your  team  When you think about small companies  you have very few people  and they need to be able to do everything  You can t have too much specialization unless you re in a very particular sector  but as you grow and evolve you do need to have these specialized tasks  In the beginning you might have an engineering team that can do frontend  backend  mobile if they need to  pretty much everything  Once you get big enough and you need somebody to really do an amazing job with mobile engineering  you need that specialist  You need to make sure that the team that you ve had in the beginning  that s been so focused on being jack of all trades  is able to bring in this talent  incorporate it and make it successful  Matt  Can you share any tips or advice on some of the things that you implemented or instrumented at Dropbox that helped keep everyone aligned and focused on that one mission  You need a clear narrative that everybody in the company understands  Ilya  The first key to communication is to communicate  You need to find avenues and channels that are good for your organization and are effective for your organization  One of the things we did at Dropbox that was very successful was a weekly all hands  where we were incredibly open  In addition to that we had daily emails with all the stats and a very open and information driven culture  You can use tools that help you  but then the question is   What do you communicate   You need a clear narrative that everybody in the company can understand  and they can use to drive decisions  That narrative has to come from the founding and executive team  and everybody has to agree on it  You might change it  but for the time being  it has to be a universally agreed upon set of principles  values and priorities  If you have this consistent narrative  then people can really understand the value of the choices they make at every given step of the way  and how those tie back to what s currently important for the company  The one caveat to that is I think people get really hung up on getting it right   What if we get our mission wrong  What if we get our values are wrong  What if we get our priorities wrong   That s actually not a real issue  The most important thing is to have them  and if you have them you can iterate  The importance of a roadmap Matt  It s not surprising that at that level and that speed of growth that you saw at Dropbox that things are constantly breaking  You mentioned you re constantly rebuilding and reorganizing the teams  Did that change how you planned your roadmap  Did you even have a roadmap when you first started  Ilya  The roadmap is a great question  The first roadmap was in everybody s head  A big part of what the early product team has to do is extract the roadmap from people s heads and put it into some kind of writing  It can be as simple as an Excel spreadsheet  PowerPoint or sticky notes on a whiteboard  Then there s organization and sequencing  and a big part of that is prioritization  Prioritization is very painful  especially in companies that are growing as fast as Dropbox  Intercom or Slack  where the world is your oyster  You have all these ideas and opportunities  you want to build a platform  you want to build the product  and you want to build the next product  It s easy to get excited  so that s where this global narrative is really important  You need to take all these great ideas  you need to put them on a whiteboard  and then you need to figure out what is the arc over which we do them  Don t do your five year vision on day one  Do your first part of the vision  the second part of the vision and all the way through the fifth part of the vision   Learn how we build our product roadmaps at Intercom  That s probably the most critical thing for product teams to get right  especially at their early stage  What we did was pretty simple  we started with a few key initiatives  Typically you start with a company that looks a little bit like a primordial soup of a single team that s building the product  Maybe it has a component of mobile  a web component  a server  an analytics component  Then you say   Well this doesn t work because to ship a particular feature we need to get five product managers on board  and they all have to coordinate   Then you split up into something that looks maybe more like an infrastructure layer  and then verticalized product teams  You then pick those products teams to align to the things you care about the most  In the case of Dropbox it was the business side  the consumer side  and the platform  Then you typically would add something like a growth team to all of this  and that team sprinkles some magic  All of these are evolutionary processes  but I think the key to getting them right is getting everything out  prioritizing ruthlessly and then sequencing  Matt  How important do you think marketing is in the product development process and how involved should they be  and when  As a marketer myself and one that works very closely with the product team at Intercom  I m really curious to hear your answer  Ilya  Marketing is actually critical   and more critical than most people think  When you ask most people   What do you think about marketing    especially at their early stage  they start thinking about blogging and maybe buying some ads  Marketing is more critical than most people think  To me the most critical function of marketing  and where it really ties to product  is understanding the customer and then telling a clear narrative that connects the internal discussion to the external discussion  The internal narrative and the external narrative around what you re doing  who the customer is  what the value is that you bring to that customer  If you can make those two very succinct and connected  I think it s an incredible alignment that drives focus  prioritization and execution ultimately in the company  In the case of Dropbox  we had the privilege of growing rapidly without having to rely on more traditional marketing methods  In fact some of the more traditional marketing really came about when trying to build and scale the business product  Once we d done that and built a really good marketing function  that internal alignment really crystallized  Your product as a platform Matt  One of the big bets made at Dropbox under your watch was the Dropbox platform  Why was it so important at that time to let developers build on top of Dropbox  Ilya  It wound up being very important  but I don t know if we really realized how important it was in the beginning  In fact the initial platform was built to support Dropbox s own mobile apps  It was very much self serving in that we needed a set of APIs to build the iOS and Android apps  What made the platform very successful in the early days  which was actually the same reason that it was necessary for us to build our mobile apps  was the fact that mobile devices shipped without a file system  If you were a developer that was building any kind of file experience  and you were doing it on mobile  you had to effectively use Dropbox because we had the most content  That evolved into us building more APIs and more experiences for developers  The true value of the platform didn t really crystallize until we were able to connect the users inside of our applications with third party apps  If you take a step back and think about what a platform really is  a platform is a marketplace  It s a multi sided marketplace that connects the buyers or users of products with the creators or sellers of those products  The entity that owns the platform needs to provide a few key pieces of value  The first is obviously this connection  because if you re a developer and you re choosing to allocate your time  you re going to spend it on a platform that s going to give you growth  It s going to get you customers and it s going to help you build your business  There was functionality our users wanted that we wouldn t build ourselves  Secondly  there has to be something unique about why you would go through this channel  It could be the users  it could be the tool set  maybe they re unique APIs   in our case it was the access to files on mobile devices  It could be content   in our case that was the files  It has to be some unique reason and some unique functionality that you can build as a developer on this channel that then helps you connect and acquire and retain users  For us  there was a realization that for the users this also presented unique value  You could do an infinite number of things with Dropbox  You could build experiences around consumer photos  you could build experiences around enterprise productivity  or you could build experiences we hadn t even thought about  People were using Dropbox to record videos from drones to save the black rhino in Africa  they were using it during disaster recovery  There was a set of functionality that our users immediately wanted that we wouldn t build ourselves  Then it was clear that we had to take a few key pieces of functionality  and these were editing of documents on mobile  things that people wanted to do with the files that they stored in Dropbox  and get them experiences around that  That s why we did the partnership with Microsoft around Office  for example   Microsoft Office integrations allowed users to edit docs directly from Dropbox and sync changes across devices  If you think about building a platform  you have to do so very critically  because it is a significant investment of resources  You have to take a step back and figure out   What functionality do we want to provide to our users that we ourselves are not going to do   If it s very critical and valuable  then   Are there developers who are going to do a great job of it  What kinds of APIs and data do we need to provide for them to be successful   If you can get comfortable with all those three things working  then you should build a platform  and it can be very successful  If you can t  then I think you have to think about it pretty critically  Matt  One of the benefits that comes out of making that decision to invest in a platform  is that it does allow you to focus on those core competencies that you have  and allow others to build the things you don t plan on building  In that vein who else in our product generation is doing this really well today  Ilya  At the startup company scale  Slack has done a phenomenal job  They had actually built some of the early integrations and first applications themselves  and they ve managed to make it a great experience  If you think about larger  more traditional companies iTunes is an incredible platform  iOS obviously is an incredible platform and so is Android  and I m curious to see what companies like Microsoft wind up doing  Salesforce is another example of a platform that s created an ecosystem of applications around itself  There are lots of great examples  but if you look at all of them they each have something unique  whether it s functionality in terms of APIs or data  and they have massive scale that gives developers the confidence that they re going to be able to build a successful business on top of this platform  Matt  It s really important there be that opportunity for the developers to see a return on their investment on building on the platform  Zooming out a little bit  are we headed toward an era rebundling  Ilya  The era of unbundling was actually quite interesting  You ve had the perception that by unbundling  you can create a lot of focus and a lot of growth for additional products that you might bring to life  One of the biggest examples a successful unbundling strategy was Facebook Messenger  The thing most people forget is that at the time Facebook Messenger was unbundled  it already had hundreds of millions of active users  The unbundling strategy historically seemed like a great concept  If you dig in deeper and you think about your ability to create one successful product itself   which is pretty low  but let s say you did   then get people to use that product  it s actually very low probability  Think about typical email open rates  which are in the 10  range  and maybe click through and downloads are another 10   You re talking about a 1  compounded probability that you can get a user of one of your products to use another one of your products  The odds are not in your favor,"[975 1019 663 854 826 1220 1061 408 296 17 1003]"
977,training-dataset/business/808.txt,business,After years of intensive analysis  Google discovers the key to good teamwork is being nice   QuartzGoogle wants to know the secret to building a more productive team   The tech giant charged a team to find out  The project  known as Project Aristotle  took several years  and included interviews with hundreds of employees and analysis of data about the people on more than 100 active teams at the company  The Googlers looked hard to find a magic formula the perfect mix of individuals necessary to form a stellar team but it wasn t that simple   We were dead wrong   the company said   Google s data driven approach ended up highlighting what leaders in the business world have known for a while  the best teams respect one another s emotions and are mindful that all members should contribute to the conversation equally  It has less to do with who is in a team  and more with how a team s members interact with one another   The findings echo Stephen Covey s influential 1989 book The 7 Habits of Highly Effective People  Members of productive teams take the effort to understand each other  find a way to relate to each other  and then try to make themselves understood   Matt Sakaguchi  a midlevel manager at Google  was keen to put Project Aristotle s findings into practice  He told Charles Duhigg of The New York Times how he took his team off site to open up about his cancer diagnosis  His colleagues were initially silent  but then began sharing their own personal stories   At the heart of Sakaguchi s strategy  and Google s findings  is the concept of  psychological safety   a model of teamwork in which members have a shared belief that it is safe to take risks and share a range of ideas without the fear of being humiliated  As Google explains   Did you feel like you could ask what the goal was without the risk of sounding like you re the only one out of the loop  Or did you opt for continuing without clarifying anything  in order to avoid being perceived as someone who is unaware   Harvard Business School professor Amy Edmondson explored the concept a 1999 study  which concluded that  psychological safety  boosted performance in teams   Google now describes psychological safety as the most important factor to building a successful team   In short  just be nice,"[977 430 1030 1411 120 1061 499 17 955 391 1003]"
981,training-dataset/business/450.txt,business,Change at Buffer  The Next Phase  and Why Our Co Founder and Our CTO are Moving OnWe ve always done things differently at Buffer  For me  this has always come from a natural desire to question things   Why base your company and team in a single location  Why is it customary to keep salary information private  Why can t someone exercise during their day and work unusual hours  as long as it s a productive way for them to work   Asking these questions   and seeking their answers   has taken us down an interesting path  It s been a rollercoaster of a journey so far  We ve made many mistakes  and thankfully had a lot of success  too  We don t question things just for the sake of it  we ask  why   because we fundamentally believe that so much of work could be done better  and feel better   For much of this 6 year journey  I ve worked alongside my co founder Leo Widrich  And for the last 4 5 years I ve worked with Sunil Sadasivan  our CTO who started as one of our earliest technical team members   We ve accomplished incredible things together  We went from nothing to 65 000 paying customers  an 80 person team and over 13 million dollars in annual revenue  More importantly  we ve found ourselves in the midst of two generation shaping movements  remote working and business transparency   Now  for the first time  I m looking to the future of Buffer without these two hugely meaningful leaders  teammates  and friends  Leo and Sunil are leaving the company in the coming weeks   Wavering between two paths  It s always been a little hard from the outside to  figure out  Buffer  We often describe the path we ve gone down over the last 6 years as a series of pendulum swings   We started off bootstrapped  then raised multiple rounds of funding  We experimented with self management but for now have a more traditional management setup  We ve waited to hire until it really hurt  and we ve hired rapidly and recklessly when our views on ambition and growth changed   Swinging the pendulum can be a healthy and productive way to test ideas and determine the right approach  Indeed  we ll always want to experiment and allow a certain amount of this   At times in the journey we ve simply tried to do what we feel is right  improve the product  cultivate our culture  provide great customer support and let growth be the by product of the work we do  Other times  we ve found ourselves totally focused on our growth rate  trying everything we can to increase it  and agonizing about it dropping over time   At best  this has felt like harmony of complementary approaches  and useful experimentation  At worst  and more often recently  it started to feel more like swinging between two very different kinds of companies   The future of Buffer  These 6 years of experimentation and pendulum swings have been the best education I could ask for  They ve helped to solidify my vision for what kind of company Buffer is and will be   Today we re recommitting to a single path and a unified vision   We will be a long term  sustainable  fully remote team that works hard on mission driven work  We will be the most reliable social media tool in the market  And we will continue to push the boundaries of transparency  culture and freedom in the team   We will strive for the kind of healthy  long term growth that we believe will naturally follow as we focus on creating trustworthy products and providing unexpectedly delightful customer service   We will continue to be a vocal presence in movements that align with our values  like the remote work revolution  radical transparency  and a focus on diversity and inclusion   We will create space to build a uniquely empowering company culture  which we like to call  a workplace of the future   by investing in creativity  learning  innovation  and joy at work   Why Leo and Sunil are moving on  and what s next for them  This is the vision I have for Buffer  and this is the long term journey I m excited for us to continue to commit to  We ve accomplished a lot towards this vision in 6 years  and we have a lot more to do  It s not the only path to success and joyful work by any means  nor is it one I would ask anyone else to commit to if their vision is different   It s bittersweet to look to a Buffer future without Leo and Sunil  who ve had such an impact on our product and culture  But this is indeed a case of differing visions   neither better than the other  just different   In late July of 2016  we had an executive team offsite that included both Leo and Sunil  and that meeting resulted in the first articulation of this clear vision  We laid out explicitly that we would focus on growing sustainably  slowing down hiring  raising the bar for product quality over shipping frequency  and innovating our culture to create an empowering environment   This was a vision we all agreed to  but not without a lot of healthy debate  Sunil shared openly at the time that he wasn t sure he could get fully excited about the path we had laid out  It wasn t Leo s first choice of direction either  but he was inspired to see if he could grow into the mindset and make it work   Throughout the following months  Leo  Sunil and I continued to work closely together  As more time went on and more decisions were made  it began to feel we were misaligned   Through many conversations  it started to become clear that this path wasn t truly fulfilling for the two of them  and they had a different approach in mind for building a company   More often than not  Leo and I leaned towards different ends of the spectrum when it came to decisions like the timing of bringing in senior leaders  whether to continue to raise funding  the balance of work on product vs company culture  and requiring an immediate high bar for performance vs nurturing team members   Sunil was keen to strive for product quality and great company culture  and he also wanted to do it while we grew the team  hired senior leaders  and aimed for further rounds of funding and a more traditional board setup   Some of the decisions I was making were hard for Leo and Sunil to feel fully aligned with  and we had many candid conversations about the type of company we were excited to build   Eventually  it became clear that they did not feel they could be their whole selves with the path that was laid out  or experience the personal growth they were seeking   I m incredibly grateful to Leo and Sunil for jumping on board the Buffer journey so early and with so much risk  They ve both truly shaped Buffer and me personally for the better  This is a bitter sweet moment  as we look back on so many years of growth and good times together  but also look ahead to leaning fully into paths that feel natural and exciting for each of us   What s next for Leo  He s planning to start something new  most likely a SaaS product around HR or diversity  He will remain a non executive board member and advisor to the team  His love for the product and customers  our team and culture  as well as his almost 20  stake in the company mean he ll always be rooting for Buffer  I ll be closely in touch and happy to advise him with his new venture  Read more from Leo on his departure and next steps   What s next for Sunil  Sunil is planning to take some time to decide his next step  He might create another startup  he was running one before he joined Buffer   He is also considering joining an organization where he can have a large impact on engineering  Meanwhile  he is spending the next few months with Leo to experiment on some product ideas  Read more from Sunil on his departure and next steps   How we shared the news with the team  Toward the end of 2016  Leo and I had several conversations about the future and took the holiday break to reflect  When we returned in the first week of January  Leo had solidified his decision to move on  Soon after I shared the news with Sunil  he gave me his decision  also   With a change this big  I strived to balance taking a thoughtful approach to sharing the news  as well as being fully committed to our value of transparency  and not delaying too long  Here s how we chose to share the news   First week of January  Leo solidified his decision to move on  we discussed and agreed on it  Leo solidified his decision to move on  we discussed and agreed on it Friday  January 6  Sunil shared his decision with me  Sunil shared his decision with me Monday and Tuesday  January 9 and 10  I shared the news with the seven members of our executive team  area wide leads from departments like marketing  finance  and happiness    I shared the news with the seven members of our executive team  area wide leads from departments like marketing  finance  and happiness   Wednesday  January 11  I shared the news with 3 more leaders and  as a leadership team  we finalized plans to tell the rest of the team   I shared the news with 3 more leaders and  as a leadership team  we finalized plans to tell the rest of the team  Thursday and Friday  January 12 and 13  The rest of the Buffer team heard the news one on one  an element that was very important to me in delivering this news  I personally told 29 people  and I was grateful to rely on the team leads for helping inform the others   The rest of the Buffer team heard the news one on one  an element that was very important to me in delivering this news  I personally told 29 people  and I was grateful to rely on the team leads for helping inform the others  January 16 25  Over the course of the next two weeks  I spoke one on one with almost every person on the team who had yet to hear directly from me   I still have a plan to speak with everyone  there are around 15 people remaining    Over the course of the next two weeks  I spoke one on one with almost every person on the team who had yet to hear directly from me   I still have a plan to speak with everyone  there are around 15 people remaining   Thursday  January 24  Leo and I visited Collaborative Fund  the biggest investor in our most recent round of fundraising  to discuss the news   Leo and I visited Collaborative Fund  the biggest investor in our most recent round of fundraising  to discuss the news  Wednesday and Thursday  February 2 and 3  We let all other investors know  71 people    We let all other investors know  71 people   Friday  February 10  We re sharing the news publicly  with you   Looking to the future  The clarity of this single  unified vision has already proven so valuable for the team as a whole  I ll be doing a company wide All Hands next week to discuss many of the details further   In addition  we have our next company retreat coming up in three weeks in Madrid  This is perfectly timed for us to spend a whole week as a company discussing and brainstorming what it means to fully lean into the Buffer way from here on out  We ll be keeping you fully up to date on our next few months here on the blog   Thanks to so many of you who have been incredible supporters of Buffer throughout our 6 year journey so far  I am completely committed to the long term growth of Buffer  and I am excited for what we ll do together to improve our product and company in the months and years ahead   I d love to hear any thoughts or questions you have in the comments,"[981 973 360 499 304 17 898 19 1061 1241 39]"
1003,training-dataset/engineering/254.txt,engineering,Engineering the Instagram Stories Team   Instagram EngineeringEngineering the Instagram Stories Team  Earlier this year  we pivoted around the idea of making Instagram a place for all your moments   the highlights and everything in between  In August  we introduced Instagram Stories as a new way to share moments as they happen  without the pressure of saving them to your profile  And it s been amazing to see the response from the community   in less than three months  more than 100 million people already use it every day     Launching Stories was both invigorating and nerve wracking  We made countless changes to our mobile apps and infrastructure to make it globally available to over 500 million people within a day  no pressure   And given all the moving pieces  we expected issues  While nothing ever goes off without a hitch  in retrospect  our launch was one of the smoothest I ve experienced   certainly at this scale  Having managed teams for large scale products and services at startups and more established companies  I wanted to reflect on what made this project go well  and what we could have done to make it go more smoothly  If only there was a simple formula for success     Building great software is tricky  and so is building great teams to build great software  Let s take a look at a few themes from the Stories project   Great Teams  Great Challenges  I am fortunate to work with incredibly smart individuals  but great talent is not enough to make a high performing team  To set a team up for success  a manager needs to understand the individuals  needs  but more importantly  the needs of the team as a whole  Most often  simply ask and listen before figuring out how to help     During early development  the Stories team encountered constant iteration and shifts in direction that could have easily resulted in endless thrash if we didn t keep an eye on the overall health of the team  We reviewed the product as a group about every two weeks  but still weren t aligned  Based on ongoing observations and feedback from the team  we periodically made team and process adjustments     Fortunately  we re not big on process at Instagram  To ideate more efficiently  we challenged our product direction to align on a shared vision  trimmed the set of key stakeholders  rebalanced the team based on shifting workload  and held frequent  even daily  reviews with our founders Kevin and Mike     Much like there can be a lifecycle in software development  there can also be one for a team  Bruce Tuckman s model of group psychology is interesting   he classified research into a set of states a group can be in  forming  storming  norming  and performing  While it s not necessary to typecast a team into one of these states  this model can provide a framework to determine what actions to take to help a team thrive     As important as it is to be open to changes that support a team  it s just as vital to know when to get out of the way  The Stories team had incredibly high output and focus  and making changes for the sake of it could have destabilize productivity and morale   Product Came Into Focus  It was an amazing moment when we locked in our final direction  After many months of prototyping other ideas  the team had faith in the creative process and ultimately landed on a product approach that felt right  As one team member expressed  it s hard to stop a group of smart people working together on something they all believe in  All stakeholders need to believe  as this reinforces morale  helps maintain focus  and ultimately fuels productivity  With the team united on the product  things really started to fall into place and we could shift into execution   Composition Is Critical  Much like composition in photography can significantly alter the effect of the result  so can the composition of a team  At an earlier point in the project  we noticed an imbalance between the workload  size  and makeup of the team  We were overstaffed  so we offered a few engineers other impactful projects to work on  Whether through proactive or reactive efforts  minimal staffing was most helpful during prototyping stages     As a mobile first product  we also learned it was healthy to loosely couple development across iOS and Android  even while prototyping  We did not strive for feature parity  but high level functionality kept good pace across platforms  Rather than having one platform always lead and the other follow  both platforms led     This created some interesting dynamics  Some features were further along on iOS  while others were further along on Android  We were able to leverage more engineers by spanning platforms  This also allowed for more cross pollination of ideas and solutions  especially as we built the same functionality across platforms within a short time span  This encouraged a healthy pace as one team that introduced a feature influenced another to get to parity quickly  and vice versa  For example  we experimented with different animation transitions when swiping between stories  The final cube transition we ultimately chose landed on Android first and got the team excited to promptly add it to iOS  More importantly  by working on platforms in parallel  both teams were able to innovate at the same time  instead of having team A work through engineering challenges followed by team B to focus on porting     It was also critical to have a healthy mix of talent on the team  We had incredibly strong technical leads per mobile platform  one of whom doubled as the technical lead for the project as a whole  along with a lead for our backend services  They all worked well within their own respective tracks  with each other  and cross functionally across engineering  product  design  and analytics  Each lead was accountable for technical progress and had a voice in shaping the product  In addition to staffing leads  we had engineers who were simply great at prototyping quickly  which helped get the product into actual hands and let us frequently vet the user experience     Once we locked in our final product direction  the team grew with volunteers across the company  each with key skills to efficiently expedite development and help get the project over the finish line  We formed tracks to focus on camera infrastructure  creative tools  and core product  After we shipped  we once again rebalanced to support a more stable state workload while preserving the platform leads structure   Tough Deadline  Friend or Foe   Craft is one of Instagram s values and applies throughout our work  including product design  code  and quality  Maintaining a commitment to quality and attention to detail with an ambitious deadline can be a challenge  and sometimes it can be a unifying force  Once we were happy with our product direction  we discussed a shipping timeline that we knew was aggressive  Nevertheless  fueled by determination and excitement to share Stories with the world  the team signed up for it     This forced us to ruthlessly prioritize and focus on the minimum viable product  This kept with one of Instagram s core principles of doing the simple thing first  Although we were tempted to include more features in the initial release  we carefully decided when to do so     The team steadily and tirelessly worked on our most important tasks  but as the date drew closer we realized we needed help  Soon  members from numerous other teams stepped up to assist  Even Mike pitched in with camera improvements and neon drawing  We continued to make progress  and soon found our whole company was eager to help  Apart from getting valuable feedback from employees from actively dogfooding Stories  we held a company wide bug bash  Participation was truly company wide  including Kevin and Mike     With our target date a few weeks away  I mentioned to Mike that despite everyone s amazing effort  it still felt like we were coming in hot  Mike responded   We are  but if we give ourselves more time we ll be tempted to add scope   We stuck with our launch date  the team kept at it     While having an ambitious target pushed the team well past its comfort zone of working hard  that was not sustainable as the norm  But our deadline bonded the team closely together for a common  albeit really challenging goal  and ultimately brought the whole company closer together  This is still paying dividends today   World Class Infrastructure Helps  Not too long before launch  our infrastructure team scrambled to ensure our capacity would exceed increased expected demand  That s not always easy at the scale Instagram has  but the team was able to respond swiftly  We are fortunate to build product with amazing infrastructure  supported by teams who are maniacally focused on performance  quality  and developer velocity     Our server stack includes open source components like Django and Cassandra along with internal systems like Facebook Tao  Some of the mobile tools and libraries we benefitted from are open source like IG JSON Parser  IG Disk Cache  IGListKit UICollectionView data binding framework for iOS  Rebound animation library for Android  and FLEX developer tool for iOS  We also leveraged exceptional tools and services from our friends at Facebook that helped us easily collect and analyze data that we can trust  Instagram s ongoing investments in client and system infrastructure have enabled our product teams to build and deploy quickly and at scale   Rinse and Repeat   While these are some factors that contributed to a successful Stories launch  there were countless others like having trust in one another  strong communication  grit  openness  empathy  and diversity  Perhaps one of the most important meta takeaways is to anticipate and embrace change  Projects and teams are dynamic  and these takeaways certainly aren t a checklist to follow  Be prepared to draw your own conclusions to what makes your projects successful     The path to get Stories into the hands of our community has been an amazing and humbling experience  As an engineer  nothing is more rewarding than giving people a new platform to express themselves at massive scale  We have so much more to do  and I m grateful and excited to work with our fantastic teams on the next chapter   Eddie Ruvinsky is an Engineering Director who leads several product engineering groups at Instagram,"[1003 1220 1030 826 17 975 408 955 120 938 1385]"
1019,training-dataset/business/17.txt,business,How Dropbox Sources  Scales and Ships Its Best Product IdeasAt some point in the journey  most climbers   and leaders   take in the three rules of mountaineering  it s always farther than it looks  it s always taller than it looks  it s always harder than it looks  A year after joining Dropbox to run product engineering  Tido Carriero found himself looking up from base camp at his Mt  Everest  Dropbox for Business  In order to accomplish this difficult engineering feat  Carriero needed to assemble his best engineers for the big climb  entirely re architecting the Dropbox platform to support multiple accounts   His team rallied and successfully shipped the product  but not without sacrifice  the opportunity cost of new ideas from two dozen veteran engineers  This trade off would paralyze some less experienced managers  but Carriero has learned to take the long view  As an engineering leader at both Facebook and Dropbox  he s seen how the most successful startups not only identify the products they need to build  but also apply different types of development approaches to usher products into reality   At First Round s CTO Summit  Carriero shared the power of a hybrid product development process and the actions young companies can take to navigate it well  Every entrepreneur who wants to know how the best product ideas are sourced  grown and funded stands to benefit from his thoughts   Aim for a Hybrid Approach to Product Development  To source ideas effectively and grow them into products  Dropbox uses a hybrid product development approach  The method strikes a balance between a bottom up approach  in which engineers autonomously pursue new product development  and a top down approach  wherein an engineering or product leader initiates all new product roadmaps  A company doesn t just institute a hybrid method  it arrives at equilibrium over time by drawing the best from both a bottom up and top down approach   As companies grow  they tend to try on both bottom up and top down methods  And they can benefit from recognizing the advantages of each approach  Here s how Dropbox experienced   and retained the strengths from   each approach to arrive at a hybrid product development best practice   When you re early stage  begin with bottom up development   A startup typically develops from a small team of engineers that is heavily   if not directly   influenced by the independent spirit of the founders  So it s not only wise but also natural to build from the ground floor   Let s rewind to the very early days of Dropbox  when we relied on bottom up planning   says Carriero   I think every startup begins here  Our server engineer was our co founder  Arash  Ferdowsi   and our client engineer was our other co founder  Drew  Houston     Carriero is keenly aware of the product development philosophy that preceded him  All of Dropbox s early planning was very autonomous  even as more people were added to the team   This type of planning worked well during the early years  There was a freewheeling spirit and the instinct to immediately assess and address whatever needed to get done to serve a rapidly evolving business    Shift to a top down approach when projects are step changes   It s best to switch to the top down development approach on the eve of a massive endeavor that requires most of your team to accomplish   Not long after I joined our team  I noticed that with all the projects in motion  it was becoming hard for our group to tackle the biggest challenges   says Carriero   What we gained in our diversity of ambition  we lost in collective attention    The multi account project was the behemoth that restructured Carriero s team and shifted its planning philosophy to a top down approach  With the majority of users using Dropbox at both home and work  it was critical to make sure that all accounts   whether business or personal   synced and worked concurrently across all platforms  Dropbox already had a sophisticated infrastructure with Desktop  iOS  Android  and Web clients  which made this endeavor particularly complex    The multi account project entailed supporting more than one user at once   Carriero says   This project was the straw that broke the camel s back for bottom up planning  It seemed impossible that we were going to get a team of 25 engineers  which is how many it took to re architect every single platform to support multiple accounts    In my first two weeks  many warned me that this project was too large to tackle  It was huge  but not as big as my smile when we finally shipped   All that said  drive toward a hybrid development approach as soon as possible   Once a company is more mature  a hybrid approach   between a bottom up and top down development method   is optimal  Splitting the difference between these two strategies is a way to accomplish ambitious all hands projects and continuously nurture new ideas from individuals  The best startups adopt this approach early on   Carriero notes the fine balance   A top down approach allowed us to execute on much larger projects  However  when leading a team  you can limit your 10x engineers by over planning them  You miss out on these game changing ideas from the people who really think about technology a little bit differently    Since the multi account project  Dropbox has embarked on a hybrid approach to product development planning   Ultimately  we still do most of our planning and the majority of the roadmap setting top down  We found that that s the only way we can get the focus levels that we need to get  Otherwise  you end up expanding the scope of projects  Yet we also take different tacks to encourage bottom up ideas from everyone   and I mean all Dropboxers   across the company  These efforts help us keep an open environment for new ideas    Embrace Dualities to Keep Your Balance  When combining elements into a hybrid approach  be careful not to tip further in one direction than the other   Today  Carriero leans on three frameworks to divvy up resources and engineers for any project  from a new initiative to a core business product  These  rules  serve as checks and balances to ensure his team is investing its time and skills to suit the scope of each project  Akin to Pandora s product prioritization system  Carriero has identified the following frameworks to keep your product planning balanced and on the right track   Lightweight and heavyweight product reviews  For Dropbox  putting a lightweight idea evaluation before a heavyweight product review has been a game changer   We used to only have a full product review process   says Carriero   It required writing out every edge case  mocking up each solution  and getting tech leads to determine exact product timelines  Those steps are important to sound product development  but made generating and evaluating ideas at a high level a challenge    With this friction  inbound product ideas across the organization slowed to a trickle  So Dropbox created a lightweight   or  Phase 0  review   The  Phase 0  review improved the entire process  It involves completing a simple one page template that defines a problem and explains why it s worth solving  Any PM or Dropbox employee can put a  Phase 0  review together in an hour or two  fire it off to a mailing list and schedule time to present the idea     At first  put all ideas in zero gravity  It creates a special atmosphere where anyone can contribute a great idea   Dropbox s product review system is designed to be incredibly lightweight and encourage lots of product ideas  All ideas start in  Phase 0   in which someone outlines a challenge and provides evidence that the problem is worth solving   Phase 0  is incredibly democratic   anyone so inclined can propose a  Phase 0  pitch and present it to Dropbox s product leadership team   After the product leadership team agrees that it s a problem worth solving  a Dropbox Product Manager will move through increasingly rigorous phases of product review   Phase 1  is designed to discuss potential approaches to solving the problem and is often accompanied by tech specs from Engineering and mocks from Design   Finally   Phase 2  is more of a traditional product review that locks down all of the product specs in full detail  These sequential phases help move the product along as efficiently as possible  while keeping people from focusing on minute details before the time is right   Seeds and saplings  After the full review process  Carriero encourages his team to categorize each potential product as an investment  much as a venture capitalist might with portfolio companies  At Dropbox  Carriero applies this concept through a framework called  The Magic Forest     There are seeds and saplings  Seeds are very early stage product ideas that we think of as having series A funding  They are prototypes and hypotheses that we want to test  When they have product market fit  these projects become saplings   explains Carriero   These projects are now products that we seek to grow and bring real scale  Lastly  there are trees and roots  Trees are our core products  and roots are the infrastructure that supports them    Arboreal imagery aside  the goal is to clearly define runway for each idea that corresponds to its stage of growth   We give every idea time bounded and resource bounded constraints to derive and drive a metric or new discovery   Without stage specific constraints  there s a risk of wasting funds  time and expertise    often even if you re aware the project is failing   It s very easy to get too attached to your seeds and saplings  and not chop them down  That s the dangerous downside of funding new projects  Put clear bounds on each project early and you ll know whether to grow or get rid of an idea    Governance and resonance  From their earliest development  products  like startups  should have a board of advisors   The other thing we ve done is we ve implemented a board of directors for each of these project groups   says Carriero   So they have one consistent set of leaders at the company  much like a startup board   The teams building the product must report on metrics and solicit feedback from its board  This level of oversight has been really useful in scaling up these little projects within a larger company   Regardless of informed product boards  Carriero has seen how often employees misunderstand or forget the purpose of early stage projects   People know at a high level that there must be a balance of product innovation and more iterative and incremental development  Easy frameworks such as  seeds and saplings  help employees understand investments in projects that aren t their own but which are a key part of their company s future    Constantly Hack Your Hack Week  In addition to these frameworks and a keen sense of balance  Carriero has seen the value of hackathons for engineers  designers and product managers to jumpstart innovative product development  But startups shouldn t expect to generate novel ideas with the same stagnant process  Carriero suggests four best practices to design a better hack week that stays fresh and generative   Commit to a full hack week every year  Don t bother with Hack Days  Make sure that there s enough time to really explore an idea and test it seriously   At Dropbox  we do a full five day Hack Week  We start on a Monday morning and continue until Friday   says Carriero   It s a beautiful sight to see engineers  designers and PMs given unstructured time to dream up something really awesome to build    Experiment with themes  Dropbox has started giving themes for Hack Weeks  Topics have included  Collaboration    Growth   and  Dropbox for Business   which focused on building out an existing product   We ll often give high level themes  but we don t ever assign specific projects because that can constrain the ideas that are generated  and that s exactly what we want to prevent    Think Olympics  not summer camp   We take the projects that come out of Hack Week very seriously   say Carriero   Employees at the company vote on who wins awards  For example  Dropbox hack weeks can feature an event called Haxpo  short for  Hacks Exposition    which is a science fair where everyone puts together booths  posters and demos  Employees from throughout the company speak with presenters about their projects and vote for their favorites   My favorite award is the  shipit Award  That s the project that s most ready to be shipped right away    and often it does    Hack to the future  All projects that earn a certain number of votes are presented to the Engineering  Product  and Design  EPD  leadership team  Presenters then pitch the project to get it into the long term road map   By finishing each Hack Week with a pitch to EPD leadership  we can ensure that all of the efforts during the week aren t left behind when routine work resumes    During his time at Dropbox  Carriero has witnessed some impressive results from Hack Weeks   Many of our critical projects originated at a Hack Week  My favorite win came from an amazing OSX reverse engineer hacker named Maxime  nicknamed  Haxime    I ve never seen the stars align like this  here was a 10x engineer and an idea as crazy as he was    Max had the idea of inserting the Dropbox user interface  UI  into Microsoft Office without installing any plug ins   While Max didn t get his idea fully working during the Hack Week  he did manage to get the UI injected in a way that no one thought was possible  That was the birth of what we call  The Badge   which Dropbox released in early beta to its Dropbox for Business customers in December 2014    The best results from a Hack Week may not be finished products  but rather momentum toward the improbable   Carriero recalls the origin of the multi account project   For years  we weren t sure if the project was even feasible given the technical challenges and platform changes involved  For those who thought it could be done  the discussion turned to which approach might work in under six months    During a Hack Week  a desktop client engineer had had enough talk   Screw this   he said   let s just get together and do it   A team of two engineers and a PM assembled  and by the end of the week they had built the first prototype of a multi account product on the desktop client   It was awesome   recalls Carriero   It propelled the project forward in a way that it wouldn t have gone otherwise    Whether it s through a Hack Week or a lightweight product review  Carriero knows that the best product ideas never travel a typical path to being shipped  It s fine to take a top down or bottom up approach some of the time  but balance is optimal  and can be created only through leaders making conscious and concrete choices   Ultimately  every idea is an investment   Idea  Hypothesis  Prototype  Product  Make it very clear which metrics and results you plan to see at each stage of an idea s growth  Set expectations so it s clear to everyone which  investments  receive  funding  and why  This is very difficult  but totally worth the extra effort up front   says Carriero   As you fund new product innovation  everyone needs to have the right expectations for and investment in what s next,"[1019 663 975 1061 190 826 116 256 1385 1030 77]"
1021,training-dataset/product/318.txt,product,How I learned to stop worrying and love the targetSetting targets for a new feature is one of the scariest things a product manager will ever have to do   The thought that an arbitrary number will define the success or failure of many thousands of hours of work is enough to keep even the most experienced product managers awake at night   But a well defined target can be empowering  It gives everyone in the product team something to rally around  and it helps you refine some of the assumptions you make about your product   The whole team changed from a   wait and see  mindset  to a  fight for usage  mindset   Understanding the impact of what you ship  At Intercom we put a lot of thought and consideration into how we re going to measure the impact of what we ship  For every project we start by answering three questions before designing and building anything   What s the problem we re trying to solve  Why does this problem matter  What metrics will show if we ve actually solved the problem   These questions are great for focusing us as we begin to think about design  requirements and scope  But we haven t always asked ourselves the tough questions  What does  good  look like  How will we determine if this is successful or not   Too often  product managers rely on the path of least resistance   let s release this and see what impact it has   That s because setting a target for what you ship can be terrifying  Having put so much work into carefully defining the scope  building all the functionality out  and releasing it  you now have to create a single yardstick  essentially a guess  that will be used to judge your work as a success or a failure   Forcing you to fight for adoption  That s why we recently took the bull by the horns and put some targets on top of what we ve shipped  The impact has been tremendous   Instead of passively watching product metrics roll in  having a target forced us to be proactive   what could we do to make sure we met it  The whole team changed from a  wait and see  mindset  to a  fight for usage  mindset  We could now focus on what we could do to directly influence our target   By moving from this reactive to proactive mode of thinking  we ve learned three things about how to set effective targets for what you ship   Targets are the single best way to give some short term motivation to your team   1  Overcome the fear  Every feature a product manager builds is a prediction  You try to understand user requirements  find the right customers to get feedback from  and decide what s in scope and what s not  Setting a target is the same   it s a prediction  not the ultimate determining factor of your success or failure   It s a scary thing to do  but it s much easier if you stop elevating the target to be the definitive marker by which your work will be judged  Instead  think of your target as a learning opportunity  No product manager will ever be able to know how users will behave or react  but by setting a target  you ll learn so much more about your assumptions  about your product and your customers  than if you didn t   2  Use targets as a tool for learning  To learn the most from the targets you set  apply some rigor and logic to them  Use every data source you can to inform them   whether that s data from a beta  segmenting your customers to better calculate the target  or estimates based on similar features you have released in the past  This will give you a set of assumptions that underpin your target  and provide you with something you can really learn against   For example when setting a target for our recent Smart Campaigns feature  we made separate estimates of adoption for our highly engaged customers and our less engaged customers  On releasing the feature we were able to see that our less engaged users were not adopting at the rate we expected  This put our focus on talking to these customers to try and identify possible blockers   3  Set a short term target you can directly impact  Targets are most beneficial in the early days of a release  encouraging full team engagement  So set a short term deadline for your target  Unless your target is something everyone on your team can have a direct impact on  and knows when the target has to be met by  it won t become something everyone feels responsible for   A great way to do this is to make your target directly related to the solution  rather than an indirect output of that solution  For example  when we released Smart Campaigns  we had two core metrics we were measuring against  One was excellent for making us proactive  the other was good for understanding the long term impact of the features   The adoption of the feature  We could directly influence this   increased messaging  building features to get people to adopt it more  looking at a set of customers who should be adopting it but aren t and reaching out to them to understand why  The number of unique messages a person who adopted the feature sent in one month  This told us if people were using the feature correctly  but it was much harder to think of direct actions that would increase this number   It s also important to make sure your target is as real time as possible  For example data on adoption is easily available and gives you a really short feedback loop which you can learn from  Don t set a target that you can only learn from after a long period of time has elapsed  This encourages a  Let s wait and see  rather than a  Let s try move the needle  mindset   While bigger decisions around feature evolution and roadmap prioritisation require a long term  considered view  incorporating customer feedback  company strategy etc    targets are the single best way to give some short term motivation to your team   Once you ve decided on your target and it s externally expressed  you ll soon find it becomes a forcing function  Everyone has the opportunity  and buy in  to think about how they can affect the number   You don t have to spend hundreds of hours poring over spreadsheets to find your perfect target  You just to have some simple data sources to inform it  and you ll be able to quickly learn from it  The most important part  though  is that you set one,"[1021 1093 1387 17 1061 116 708 1339 190 839 1146]"
1030,training-dataset/product/666.txt,product,How to be a Great Product LeaderOne of the challenges we ve long acknowledged in the tech industry is how difficult the transition can be from a software engineer to an engineering manager due to the vast distinction in the skill set to be great at the new role  Equally challenging but less talked about is how much this same challenge exists when transitioning from a product manager to a manager of product managers  ie  a product leader I wanted to share some of the best practices I learned along the way making my own transition from a product manager to a product leader I think one of the first challenges that new product leaders face is understanding exactly the division of labor between themselves and their team members  While you are largely given sound advice to focus on driving results through your team  it doesn t mean that when done right you are shirking all individual responsibility The way I think about product management is it boils down to driving the vision  strategy  design  and execution of a product area  Individual contributor product managers spend the vast majority of their time on the design and execution of their specific features and some of their time developing a vision and strategy for their features aligned to the entire product areas vision and strategy  As you become a product leader  you should be spending more of your own individual time driving the vision and strategy for the entire product area and leaving the design and execution responsibilities for individual features to your team members  Doing this right means a lot more than simply supporting your team  It involves significant individual contributor work of a new flavor to distill down the various input from your team members  your executive team  and most importantly  your customers  to create a clear and compelling vision and strategy  This work is very difficult for individual team members to take on and is best suited to be the direct responsibility for the product leader When thinking about driving results through your team  the first order of business is establishing a strong system of accountability  While it may sound obvious  it s critically important to establish clearly what each team member is responsible for and help to shape exactly what success looks like for them While there are many good systems for this  my personal favorite is using quarterly OKRs defined on the individual level  OKRs  Objectives and Key Results  is a goal setting and planning framework that clearly defines the objectives or end goals you are hoping to achieve and accompanies each of these goals with a key result  which is an easily measured objective measure to determine whether you have in fact achieved your stated goal  The goals are usually easy to define  but setting appropriately aggressive  but achievable key results is often challenging  I always ask my team members to draft OKRs and then spend significant time with them iterating on the right measure for their key results and determining appropriate forecasts and goals It then becomes important to ask your team to regularly monitor and report on progress against these key results during the quarter and ultimately to hold them accountable to the results by rewarding successful achievement at the end of the quarter  Such a post mortem at the end of the quarter is important not just for enforcing accountability  but becomes an incredible learning opportunity for everyone on the team for improving their own ability to forecast  determine realistic goals  and improve their ability to regularly deliver on their stated goals But it takes more than a system of accountability to create a successful product team  Despite the conventional wisdom  it s rarely effective to simply  delegate and get out the way  Instead what works is developing a strong system of inspection to regularly monitor progress  share best practices and learnings  and establish a high quality bar  The three tools I typically use for this are product reviews  weekly metric reviews  and OKR reviews Weekly product reviews are a great time to bring together the team s product  design  and engineering talent to share the latest designs for new features or iterations and to provide feedback from across the various teams  I find these to be highly educational for all team members  especially in sharing lessons from other parts of the product team with each other  They also are a great way to ensure a high quality bar on work without micro managing the details Similarly  regularly reviewing weekly metric dashboards that cover high level KPIs for each product area with week over week and year over year comparisons and targets become an easy way to monitor the health of the existing products and to reach out to team members when you notice interesting trends or anomalies  both good and bad Finally  having at least a mid quarter OKR check in also tends to be helpful for ensuring everyone is still tracking towards their stated goals and if not  making the appropriate adjustments on the team s work or expectations A key responsibility of your new role becomes regularly mentoring your team members to increase overall team capabilities  This means providing feedback early and often whenever you see areas for individual team members to take their game to the next level It s important to do this continually  often right after key activities  like product launches  product reviews  team presentations  etc  But to also ensure this is happening  I like to reserve regular time in 1 1s with team members to provide this feedback  I also like to use 1 1s to specifically build capabilities of individual team members in areas of development  This often is very tactical feedback on topics ranging from product design  to un blocking roadblocks  working with specific team members  iterating on presentation materials  and so much more I was fortunate enough to have an incredible set of mentors that I could ask no stupid question to and always got back incredibly tactical feedback to improve my own capabilities  Given this  I want to make it safe for anyone on my team to be able to enjoy those same benefits The bar to hold yourself to is to ensure that when you receive constructive feedback on members of your team  you ve been able to establish an action plan to address those capabilities and sometime in the future you hear from those same individuals that their feedback has been addressed  I ve seen way too many teams ultimately fallback to a  sink or swim  culture where such constructive feedback on team members is left unaddressed by managers and ultimately leads to a far less effective team or worse  the failure of the individual team member  So keep the bar high on aspiring to directly take on these opportunities for growth on your team Ultimately it becomes your responsibility to not only think about the work  ie  the results your teams are achieving   but also the  work of work   which is the processes by which work gets done on your team and to constantly aspire to improve those processes to improve quality of the team s results and team leverage Maybe you are constantly hearing challenges working with specific engineers or designers on the team and it needs to be addressed  Maybe teams are butting heads frequently and the division of responsibilities are not clear  Maybe you feel the quality of consumer research the team is doing is poor and needs to be vastly improved  All of these are system issues that you as a product leader are best suited to address to improve the overall quality of your entire team s output I hope this gives you some valuable insights on how a great product leader can build a truly high functioning product team,"[1030 17 116 826 955 39 1241 1003 503 1146 742]"
1052,training-dataset/business/1243.txt,business,Reddit and Facebook Veteran On How to Troubleshoot TroublemakersBethanye McKinney Blount has a very particular set of skills  skills that she s acquired over a very long career  But unlike Taken s Bryan Mills  her ability as a  fixer  extends to corralling troublemakers at technology companies  That guy who decides to rewrite an entire system in his off hours in a new language without telling anyone else  Know him  The dev who won t share any of her code while it s in progress  Seen it  The person whose interactions with colleagues sends them all to your desk five minutes later  Yes indeed  Blount s managed and worked with each one of them   For the last 20 years  Blount has led technical teams at a range of companies  from tech titan Facebook to Second Life creator Linden Lab to music recording company EMI  She was recently the VP of Engineering at reddit and has founded two companies  Cathy Labs and MailRank  which Facebook acquired  Over her career  Blount s seen both sides of the coin with troublemakers  supremely talented and opinionated people who can also be brash and bullheaded  On many occasions  leadership transferred troublemakers to Blount  introducing her as their new  mentor   Quickly she transitioned from debugging code to debugging coders   In this interview  Blount tackles the complexities of troublemaking and how to frame  diffuse and redirect it in a startup environment  She offers general principles about rabble rousing and outlines the four main troublemaker archetypes that she s come across as a manager  Any company that seeks a lifeline when employees cross the line will benefit from her guidance   It Takes One To Know One  Blount s insights into troublemakers didn t start with managing them  she was one herself  In fact  she s gathered as many insights on troublemaking from others as she has from reflecting on her own actions   both as an individual contributor and manager   As an engineer  there were times when I was very meddlesome  pissed off and never feeling as if my managers were doing enough  I was on the the receiving end of what I felt like was not enough data or context to make good decisions   says Blount   When I first started managing engineers  I became a different kind of troublemaker  I thought my job was to get people to do stuff for me  That really shook the beehive  Instead of focusing on how someone was going to get something done for me  I should have been figuring out how we were all going to do something together    Broadly speaking  technology companies produce a special flavor of troublemaking   It s super common in many companies  but especially among people in tech  we have this idea of what we believe is the one true way to do things   whether it s how to design  collaborate or ship   says Blount   I  myself  would get very attached to the idea that my way of doing something was the right way to do it  I d have a list of my reasons ready in case I had to back them up    Blount has gathered some guiding principles around troublemaking that are less to vindicate troublemakers and more to put their actions into perspective  Here are her three tenets on troublemaking   Your founders are the first troublemakers   don t make them the last   The more common take on troublemaking is that it disturbs the harmony of a collective  but an equally concerning symptom is the prevalence of homogeneity if troublemaking is absent  If a startup s first goal is survival  that means evolution  Too much uniformity can halt progress    It s the specific cases of troublemaking that you want to troubleshoot  not the role or presence of troublemaking abstractly  After all  the founders are the first troublemakers  They noticed some inefficiency or gap in a market and stirred something up   says Blount   But here s what often happens  founders continue to see their companies as a physical extension of themselves  They need to get the hell over themselves  I ve seen it happen at companies of all sizes  Founders wonder why there are people among their hundreds of employees who aren t doing precisely what they once wanted exactly the way they envisioned  Everything at a startup   its vision  people and leaders   is dynamic  can change and should outgrow where it once was    Have some tolerance for troublemaking  Otherwise  you might end up with a homogenous organization that a single virus could knock out   Couch troublemaking in the context of company stage   As a startup matures  the particularities and definition of troublemaking will change   The exact behaviors that make it so that the organization can stay alive  move fast  be scrappy can be exactly the same actions that cause a negative disruption later in the life of your company   says Blount   Troublemaking brings signs of large tectonic shifts  releasing pressure into the atmosphere  Specific rumblings are almost all borne fundamentally of some kind of frustration  moving too fast  not moving fast enough  taking too few or too many risks  These are signals   and opportunities   to assess underlying changes and growth in an organization    Leaders should take these instances of troublemaking to revisit what it may mean in a broader context for the company or market  rather than treat it as an isolated issue to be solved   There s a danger to be the manager that just forges ahead to stay the steady course  Again  what works is a moving target and about being responsive to your company s stage  Don t be the manager who instinctively throws dissenters overboard in favor of a smooth running ship   says Blount   Troublemaking is often done unconsciously   In the vast majority of cases  Blount has found that troublemakers don t intend to make waves that drown the organization   There are exceptions  Some people really do just want to watch the world burn  It makes them feel good about themselves to tear down others  They ve actively decided to be the schoolyard bully and are enabled by being an asshole to people around them  I ve only helped a few of those really bad cases unlock what truly bothered them   says Blount   In most cases  the root cause of the troublemaking is unintentional  partially developed or temporary   I ve been in situations where troublemakers weren t empowered or self actualized because they couldn t name what frustrated them  In those cases  it s about basic management skills   working through their surface level frustrations to get enough signal of the real issue at hand   says Blount   Given how talented many of these colleagues are  I often diagnose   and frame   their troublemaking as self sabotage  Any manager s job is to help her people be as badass as possible  In the end  they want that  too  Troubleshooting why they re doing it is one way to enable an organization to be much faster  stronger and better    If you subscribe to the premise that most troublemaking is done unknowingly  the corollary is that you must go into any interaction with troublemakers having decided that you want them to win over the long term   Whether it s a first warning or the last strike  you absolutely must be rooting for that person  Every time you go into a performance review   which is difficult especially if they continue to fail themselves and you   you must have their back  even if they don t   says Blount   If you can t make that pact  it may be a deeper issue  and one that involves you  If you ve tried and been pushed long enough that you ve stopped rooting for a person on your team  it s better for her   and you   to find another alternative  regardless of expense  It may be time for her to leave the company  Be careful to not just hand off the problem to another team and a new manager  Own the process and the decision you re making    How to Manage Four Types of Troublemakers  Early in her career  Blount started to manage engineering teams because she wanted to work on projects that were bigger than she could accomplish on her own  She not only gained an appreciation for the managers who dealt with her when she was a troublemaker  but also for what it meant to handle those who were complaining about the troublemakers   Of course  you have to debug the troublemaker   says Blount   But then there s everyone else  who instinctively blames the manager for the troublemaker  They ll say   This guy s a jerk  Fix it   There s a big ripple effect when it comes to troublemakers    Over the years  Blount has identified four of the most common troublemakers  Here are her tips on who they are  how you recognize them  why they act the way they do and what to do about it   THE HERMIT  The hermit labors independently on his own project or piece of the puzzle and won t let anyone see his work while it s in progress  His isolation doesn t stem from honing his craft or toiling for perfection  but is driven by fear  Regardless of the team s established process  workflow or deadlines  he finds ways to hide his work until he deems it suitable to share    The guy who works in a silo is actually relatively common  Typically  this style is a vestige from a previous workplace   says Blount   There s a couple of ways that he could ve learned those habits  First  the shipping culture of the organization could ve been that each person was responsible for his own part of the pie  Or it could be that it was a more toxic environment in which the hermit had to protect and defend his work    Both root causes prompt reform  but often the second requires more repair   When you work collaboratively  you make a deliberate choice to be vulnerable  It may be just a sliver of vulnerability  but you re making a choice to share ideas that aren t fully formed  It only works if you trust that the team is operating similarly   says Blount   I think the best products are built that way  You bring an in progress idea to the table  thunderdome it with a team and it comes out better than anyone could have done independently    Not putting a stop to the hermit s approach can signal that you condone that behavior on your team  Not only can this jeopardize the quality of the products being built  but help spread a culture of compartmentalization over collaboration   One time I worked at this company where  if you showed anything early  everyone would tear your ideas and you apart   says Blount   It was a very toxic environment and people trained themselves to protect their work at all costs  The only way to debug that ingrained behavior is to get them to build trust  To start  tell a hermit that you ve been there  know how that culture forms and can pledge that s not how it ll ever be    How you combine that acknowledgement and assurance with a plan to acclimate and integrate the hermit is key  Blount suggests grouping them with at least two other peers who are attuned to a more collaborative style   I ve experimented with both pairing and grouping  and find the magic number is a cohort of three  Just pairing a hermit with one person really relies on an ideal match and doesn t emphasize group dynamics  If you get too large  the hermit gets lost in the mix   says Blount   Form a three person group where the team is tasked on the same project  It ll still be a steep learning curve for the hermit  but he ll be stronger for it  It s a relatively inexpensive exercise and can unlock bad habits and fear for an otherwise talented contributor    That said  there are times when debugging a hermit just won t work   Sometimes there s organ rejection and hermits just won t integrate  They re exhausted  The energy that they d use to do their job they ve expended trying to work with others   says Blount   This profile will normally opt out  I can t recall many cases where I had to actually ask a hermit to leave  In most every situation  they tried for a month and couldn t make the switch to a more collaborative workstyle  It was too difficult and emotionally draining    NOSTALGIA JUNKIE  A nostalgia junkie frequently expresses frustration that times are changing at her company  She harkens back to old days and talks of  the way  we ve always done it  Her battle cry is  We ll never turn into that big company   Given their allegiance to their initial vision of the company  nostalgia junkies can be obstructionists when the company scales or pivots   Often confused with valuable veterans with institutional memory  Blount has found one statement to be a reliable tell for nostalgia junkies  She says   They always think that two years ago was the best time to be at the company  Once  on my first week at a job  my new colleague said to me   Too bad you weren t here a few years ago  It was great   Then three years later  the same guy said   I really miss the old days  Like when you started  It was so great back then   That s crap  You can t have a moving window for the good old days  but nostalgia junkies do    The underlying frustration of the nostalgia junkie is not that the company is growing  but that she s being left behind   Nostalgia is very powerful  It drives people to recapture a time  even if it means running the events of the past through a filter   says Blount   They don t remember nearly running out of cash  rounds of layoffs or botched launches   essentially how much wasn t pleasant in the past  They recall getting off the rollercoaster and saying   Man  that was fun  Look  we survived   They wear their survival like badges of honor    Many startup survivors  who have been through trials and trauma  become suspicious not only of new ways but also of new faces   On one hand  they re excited that others get to experience  their baby  but  on the other hand  new people bring new reference points and changes  At once  they want to share  but not let go of something that they ve loved   says Blount   This manifests in nostalgia junkies as eventually becoming obstreperous  caustic and inhospitable  You ll often see them cooling off to anything or anyone that s new after an initial warm welcome    As an engineering manager  she encountered nostalgia junkies frequently   The rate at which a startup cycles spins out a lot of them  Many of the earliest employees are developers  making nostalgia junkies especially common on engineering teams   says Blount   The programmers that were expert at launching a product are rarely those who are good at running it and those aren t typically the ones who scale it  Sometimes they have to go  which is hard because they ve been good for so long to an organization that they may not fit with anymore    There are two key questions that Blount uses to try to debug nostalgia junkies   First  I ask what they are not looking forward to next week  This does two things  it puts them firmly in the future and lets them air out and hone in on what s bothering them exactly   says Blount   Then I ask them about the qualities of the company that they miss most  Often  that leads to their moment of glory  when they once stepped in to be the hero or broadly influential  If I can think of an existing project or team that could use their skills and help them recapture that feeling  there s a way through  But  either way  this line of inquiry has often helped me satisfy their hunger for recognition  which is usually the root cause and route forward with nostalgia junkies    Bethanye Blount  TREND CHASER   I ve read about this on Twitter and I m installing it   says the trend chaser  This troublemaker loves what s trending  novel and shiny  As a first mover  he s seduced before something becomes a buzzword  an established programming language or tested collaboration platform  An alpha on betas  he s the opposite of the nostalgia junkie   The challenge with this troublemaker at a startup is that he very quickly acts on what he s recently absorbed   This guy just starts popping the next newfangled thing into production without thinking about the consequences   says Blount   This tends to happen earlier in someone s career or with the chronic conference attendee  They have the extreme energy or exposure to a lot of new  cool things  and the result is unfocused exuberance    The blindspot of the trend chaser is that they care about ingenuity  not continuity  That can be a fatal blow to the integrity of a product   and startup   The truth is that very few of them have actually maintained a system that they ve built  They re very good at surfacing what s on the horizon  but not so adept when considering the maintainability of their technology choices     Years ago  I worked with a guy who owned one of the systems that our company really depended on  I had heard through the grapevine that he d decided to rewrite the whole thing in C   No one else at the company knew about his decision   says Blount   Even more problematic is that nobody else even knew the language  Plus  he was just learning it as he went along  He thought it made sense  But if he got hit by a bus  the company would be under the tires  too    The first way to debug this troublemaker is to consider the gravity of the choice   With the trend chaser  it s about risk and reward  because there is also a benefit to the type of technology and information that this guy can bring to an organization   says Blount   In the case of guy learning C   his decision could have jeopardized the startup  But it s usually a net positive to have developers staying curious and advancing their skills  If it were a smaller  more contained test  then I would ve let it slide  If that were the case  perhaps it would have taken him a week to try out a new language  Worst case  it would ve taken just three days for the team to rewrite it  if needed    After measuring the degree of risk associated with trying the new technology  get trend chasers to project ahead into the future   I ask them to explain to me why this is the route they re going to take with the technology or tool over the next year  This gets them to think about how we re going to deploy  roll out and support it  It s a prompt for prototyping   says Blount   There are some organizations where everything must be in Python or Java  I like to give people a little bit of space to experiment  schedule permitting  I m a big fan of finding the right tool for the job and not necessarily making everything so homogeneous  But  in order to stay  trend chasers must anchor a bit more to a goal  The potential has to worth the expense of the experiment    SMARTEST IN THE ROOM  For lean or bootstrapped startups that punch above their weight  there are frequently very sharp  savvy people turning the gears  In their ranks can be a troublemaker who just wants to be the smartest in the room  According to Blount  there are a few permutations of this person  but the simple reality is that this person s an asshole   though not always an unredeemable one    There are two main manifestations of this troublemaker  the first kind is the woman who actually thinks she s the smartest gal in the room and front loads that persona every chance she gets  The second type comes off as an asshole because she s very direct and believes that politeness is inefficient   says Blount   They both read as the same jerk  but one is consciously cultivating an image  while the second is ignorant of what she s projecting  The first wants you to know she s the smartest in the room  it s an unintended byproduct for the second type    The smartest person in the room becomes most apparent in the context of other people   You may get a different signal when you re one on one with the person  but from a distance  it becomes more clear  Group dynamics really showcase this problem in action  It s because this troublemaker feeds off her environment and the reactions of others   says Blount   With these types  it s easier to see them for who they are from a distance  You may even learn more about them secondhand  That makes them especially difficult to handle  Debugging them also entails cleaning up after their interactions with others    To complicate matters  you may not only manage these troublemakers  but report to them   They can be found at the top  It s super common for these guys to be one of the founders in the company or somebody who was a very early employee  who did something magical   says Blount   And that s real  They likely did something amazing that allowed for the company to exist at all  But just like the nostalgia junkie  they ve typically been there a long time and still hold on to those times  Because of their attitude  seniority  style or all three  their colleagues hesitate to raise the flag early  So this troublemaker keeps hitting the same spot until there s a bruise    Debugging the smartest person in the room doesn t always work   This one s often not salvageable  When you re tiny  you might get away with having her around  but as you get bigger it gets expensive to have this person   says Blount   The most successful tactic I ve used with this archetype is coaching her to take 30 seconds to ask what the goal was with her communication  I ask her what she wants written into memory when others read it into themselves  What should she say to get through all the buffers and busses and written to disc    The Hail Mary tactic is an appeal to efficiency   I list out to them all the tasks and time it took for me to clean up after their shit  This only works if there s enough of a foundational relationship  read  consistent 1 1s  that she cares about your experience   says Blount   Tell them that you ve reached your limit and that we re not going to have this happen anymore  This appeal has both worked and failed  but it s typically my last  best attempt to drum up awareness and empathy    These aren t fables  These troublemakers exist  They re out there in the wild   Troublemakers play many roles in organizations  They can be arsonists or bellwethers  your founder or a newbie  When you re managing them  remember that a troublemaker s spirit is part of a startup s DNA  but must be calibrated according to the stage of the company  Rarely are people intentionally destructive troublemakers  There will be instances when you won t be able to decode them  but knowing how to recognize and troubleshoot them will save and benefit the organization and them   and ideally both  Be able to identify a hermit  nostalgia junkie  trend chaser  and smartest person in the room  Go into conversations with them rooting for their relevance and redemption    I remember one troublemaker who couldn t walk down the hall without stepping on someone s feelings  He was as talented as he was expensive to deal with  But  through time  we reached an understanding where he d start to manage the impact of his troublemaking  He d stir up situations just enough to see if there was anything brewing that was harmful to the company   says Blount   He d send me warnings like a scout  His eagle eyes saved the company from dangers more dire than his troublemaking  I remember several instances when it took a few deep breaths to keep me from kicking him out  But today he leads a team and triages the troublemakers he once was  Sometimes when you save a troublemaker  you re saving a team they re not yet on    Photography by Bonnie Rae Mills,"[1052 1061 190 120 1154 17 826 19 644 912 296]"
1061,training-dataset/business/1299.txt,business,The 30 Best Pieces of Advice for Entrepreneurs in 2016At this time  The Review traditionally reflects on the extraordinary people we ve interviewed and long form articles we ve published over the last year  Previously  we told you about former Twitter Engineering Director David Loftesness and Candor co founder Kim Scott   both of whom had very popular articles that were shared widely  led to forthcoming books and  in one case  launched a new startup   But as one of this year s Review subjects  Khalid Halim  reminds us  it s not just about what s said  but what s heard  The powerful  untapped knowledge that we seek to help leaders unleash is also gauged by how exactly it helps people transform the way they build and grow companies   So when one of our readers sent us the following note last year  we were delighted  It was in response to Expensify CEO David Barrett s article on user acquisition  and specifically about a tactic on new user welcome orientation flows  Here s what the reader wrote   We were sending post sign up emails generally  but after reading what Dave Barrett wrote we made two key changes     We changed the post sign up email to go out 20 minutes after sign up vs  immediately     We updated the content to mimic what Dave wrote in his email  so it appears to be more human vs automated     This resulted in us getting about 12  responses to our sign up emails vs  before when it was around 5   This also resulted in us chatting with a large customer of one of our biggest competitors as they responded to the email  which has lead us to being in a sales cycle with them now  So I can say there is direct impact of this change to our sales funnel   We appreciate all feedback on Review articles  but we were especially grateful for his note  He was as specific on the impact of the advice  as Barrett had been when sharing his tactic  More than that  he found the article  tested out the tactic and wrote us months after the piece had been published   the very reason why we continue to seek out and feature enduring  evergreen advice   So as we begin a new year  we hope you find relevance and resonance in the following list of the 30 most impactful and incisive advice culled from our articles last year  We also hope that you  too  will test out the tactics we ve published or will share in the year to come  Let us know if   and how   they help you  We look forward to it   1  Start at the bottom of CVs to hire originals   Bestselling author and Wharton professor Adam Grant has spent years researching and interviewing originals  In his book Originals  Grant shows how to identify  foster and nurture nonconformists   a skill he believes is imperative for leaders at early stage companies to master  One tip is to review a resume in reverse order  starting above the bottom margin of the last page  where there s typically a line about a candidate s hobbies  travels or interests   Look for people who have multi functional backgrounds  multicultural experience and wide interests  Most hiring managers focus on depth of experience  but breadth is critical for creativity   says Grant   In a study comparing all the 21st century Nobel Prize winning scientists with their colleagues from their era  the breakthrough scientists were significantly more likely to be involved in the arts than the latter  twice as likely to play a musical instrument  seven times as likely to draw or paint  twelve times as likely to write fiction or poetry  and 22 times as likely to perform as dancers  actors or magicians    Originals are fusions of their varied interests  They are multidisciplinary makers  thinkers and doers    Originals are constructive contrarians  They re not just pointing out that the emperor has no clothes  they re also tailors   2  Be bold  Be elegant   Frederique Dame is nothing if not resilient  She was 24 when she moved to the U S  to work  shaking with fear as she handed out resumes at a job fair  She was later laid off and forced to scramble to find a way to stay in the country  Now  she s been a product leader at Uber  Photobucket and Yahoo   Her advice on crafting your life and career trajectory  first  acknowledge that the two are deeply linked  Second  optimize for what will make you happy  not just status  One way to do this is to choose teams and managers who will be great to work with   regardless of whether the company is a name brand one  Finally  practice being bold and elegant   What if you just decided that you were going to be fine no matter what  Being daring is all about trusting yourself to handle the results   Dame says   In tech  people don t think about acting elegantly  To be elegant is to be deliberate  respond gracefully  take things lightly   to move through the world with positive purpose  It s having a soft touch and tough resilience at the same time  And  in my experience  it s an incredible secret weapon    When you find yourself thinking   Oh I can t go after that     or  That s a crazy risk     immediately append the sentence   You ll be fine if it doesn t work out    3  Triage these four types of troublemakers   For the last 20 years  bethanye McKinney Blount has led technical teams at a range of companies  from tech titan Facebook to Second Life creator Linden Lab to music recording company EMI  She was recently the VP of Engineering at reddit and has founded two companies  Cathy Labs and MailRank  which Facebook acquired  Over her career  Blount s seen both sides of the coin with troublemakers  supremely talented and opinionated people who can also be brash and bullheaded  They ve largely fallen into four archetypes  the hermit  the nostalgia junkie  the trend chaser and the smartest person in the room  Don t forget that your founders are the first troublemakers   they often had to mix things up to propel their startup into the world  So when you re managing troublemakers  remember that their spirit is part of a startup s DNA  but must be calibrated according to the stage of the company  Rarely are people intentionally destructive troublemakers  There will be times when you won t be able to decode them  but knowing how to recognize and troubleshoot them will save and benefit the organization and them   and ideally both  Be able to identify the four types of troublemakers  Go into conversations with them rooting for their relevance and redemption   4  Be hyper aware of the observer effect   In a novel application of quantum mechanics and Schr dinger s cat  Instagram s Head of Engineering James Everingham encourages the  quantum manager  to not insert herself in her team s projects   the equivalent of opening the box to observe the status of Schr dinger s cat   to allow as many possible paths to success as possible   As the founder of the company  I didn t want us to fail  As a human being  I wanted affirmation that my idea was a good one  As a quantum manager  I bit my tongue  Ultimately  I didn t engage in the brainstorming process because I knew my team would latch onto anything I offered  Instead  I just told them what winning would look like  a 300  increase in user engagement seemed like a lofty goal  but I pitched it anyways  A few days later  my team returned with a solution that I could never have imagined  and the results were stunning   says Everingham   Though their strategy was remarkable from an engineer s perspective  what I learned from the exchange as a manager turned out to be even more valuable  By not offering my own idea  I enabled the creation of a better one  By not suggesting a destination  we all ended up somewhere extraordinary   a place I didn t even know we were going    Being a good manager is not about avoiding failure   it s about enabling as many different paths forward as possible for as long as possible   5  Build for the high expectation customer   Here s a common trap founders fall into  gain users at any cost  You ve got to show growth in those DAU numbers  right  Think again  So often  founders chase after daily active users  monthly active users and retention numbers   They believe that appealing to every customer is one way of solving these problems   says Julie Supan  who has counseled Airbnb  Dropbox and Thumbtack on branding  That s the wrong approach  Supan cautions  Instead  focus on the high expectation customer  HXC   She s your ideal user   the most discerning person within your target demographic  It s someone who will acknowledge   and enjoy   your product or service for its greatest benefit   Supan says   If your product exceeds her expectations  it can meet everyone else s   Supan took this approach to Airbnb  whose HXC is a good global citizen who wants to travel like a local  Once you nail down the HXC  get the entire company on board with understanding these customers  use their language to engage with them and continually survey them to stay on top of their evolving needs  The HXC serves as a valuable touchstone to ensure that you re growing in the right direction and to validate   or invalidate   your action plan   Your users will understand the product  and know that it s meant for them  You ll slash your cost of customer acquisition and enjoy the benefits of a clear roadmap   says Supan   If you do the work  they ll lead you to consensus about what your company is and what it isn t    Julie Supan  6  Design product teams around outcomes  not features   Jonathan Golden  Airbnb s very first product manager and now Director of Product  knows that flexibility can get you far in his line of work  When diplomatic relations were reestablished with Cuba  Airbnb was eager to operate in the country  Under Golden s leadership  Airbnb created a cross functional team  composed of PMs  designers  engineers and data scientists  that would spearhead Airbnb s expansion to Cuba  In two months  Airbnb s infrastructure was up and running   and almost as quickly as the team formed  it disbanded  The key  An elastic product team  a modular unit driven by a clear company objective as opposed to a functional area   A lot of people call me and ask how they should structure their product organizations  I always tell them to do it based on outcome  If you do it based on features  then you re going to be perpetuating those features whether they re useful or not   Convene and disband modular  elastic teams that expand and contract to serve a pre determined outcome   7  Practice abundant thinking  These six concepts will help   It s not just skill you need   it s mindset  Your performance is 100  tied to your attitude  says sought after executive coach Katia Verresen  who counsels leaders at Facebook  Stanford  Airbnb  Twitter  and a number of prominent startups  The ideal attitude is what she calls abundant thinking   a mindset that gives you the creative agency and grit to reach your vision   and  on a daily basis  to design your own life  You can do this through Verresen s six step process  noticing  neutrality  priming  self compassion  generosity and gratitude  The brain can only absorb so much  When you re hyper focused on a task or an idea  you miss things   You re not crazy and other people aren t stupid  It s just that our brain is designed to see what it s already looking for and believes  For example  if your belief is  it s impossible  or  I can t do it   then anything that contradicts you will get thrown out   Verresen says  So think of what awaits you if you can break away from your brain s default setting  significant creative and competitive advantages   When you devote time and energy to noticing  new doors open  Serendipity accelerates   she says   You feel like the universe is conspiring to support you  But really  you re just not limiting yourself    8  Make difficult decisions with the SPADE framework   Gokul Rajaram oversees Caviar at Square now  but an encounter with Google s CEO Eric Schmidt fundamentally changed the way he makes decisions  Then a product management director for Google AdSense  Rajaram was in a meeting where Schmidt asked who was responsible for a decision that was the subject of heated debate  Three people raised their hands  Schmidt promptly ended the meeting  telling them to come back once they d figured out who was in charge  Rajaram has since developed a framework for ownership and making hard choices  That starts with recognizing when you re up against one  For that  use his chart  below   which sorts decisions by importance and urgency  Then apply the SPADE framework  determine the setting of the what  when and why of the decision  then assemble the right people  Following that  outline alternatives  Finally  decide and explain your decision   I bet you if you survey people at your company today about decision making and their level of happiness  most will say that they don t understand how decisions are made  This framework allows you to articulate each stage of the process broadly to a company   he says   I firmly believe that making high quality decisions can fundamentally transform the way we work    9  Hire for CX before you have customers   WiFi system startup eero put CX at its very core thanks to its CEO and co founder Nick Weaver and Head of Customer Experience  CX  Dana Lindsay  Both have worked closely to understand and delight customers  Weaver co founded incubator StartX and worked alongside startups at Menlo Ventures  while Lindsay trained and scaled remote teams for digital publishing platform Inkling  At eero s launch  they kept a single question in mind  tech support is everyone s worst nightmare  How do we do it so differently that we reset expectations  While most founders tack on customer support as an afterthought  Weaver purposely integrated it from the start  Startups should consider following eero s lead by establishing a dedicated team to gather feedback for a beta and bringing aboard a first CX hire at a stage when most startups are solely focused on engineering   Receipts are the first support tickets   Weaver says   Customers may not have asked for help yet  but the relationship has begun    10  Find  vet and close top PMs from these five profiles   Todd Jackson has been a part of product organizations across some of the best companies in the Valley  from Google to Facebook to Twitter  after it acquired his own startup  Cover  Now VP of Product and Design at Dropbox  he s worked with hundreds of product managers   and hired dozens   over the course of his career  He s found that the best product managers do three things  articulate what a winning profile looks like  can rally the team to build it and iterate on it until they get it right  Though all high performing PMs must do hit the mark in these three areas  they don t all have the same profile  Jackson has identified five main PM archetypes that he knows personally   and which show the breadth of diverse backgrounds that can make great PMs  the classic choice  the rookie prospect  the management consulting refugee  the engineer designer turned PM and the marketer biz dev turned PM   It s important to look for diverse experiences and backgrounds   Jackson says   Your users and customers are likely a diverse set of people  so your employees should be too  This can actually be a big competitive advantage over other companies that think too rigidly or homogeneously about their hiring    Todd Jackson  11  The deeper the context  the better the advice   Hiten Shah is the co founder of three SaaS companies  KISSmetrics  Crazy Egg and  most recently  Quick Sprout  He s also an angel investor and advisor to more than 50 companies  Given his many roles  he s often asked for advice  which he does three times daily on average   and up to eight times a day  In recounting the most impactful advice he s received  he realized that 90  of what made the advice so effective was not the counsel itself   but the context in which he couched it  Advice givers should always reframe questions to orient around the advice seeker  not their own expertise  And  after offering a spread of data points as context  advice seekers should always ask what they should do next   All good advice tips people toward action  not options   says Shah   You may think all you need is advice  Practice is what you need    12  Beat burnout with these frameworks   To compete with the mega salaries offered by tech giants  startups can have a card in their back pocket  a workplace that prioritizes employee sanity  says Roli Saxena  who s no stranger to overwhelming to do lists  From LinkedIn  she joined Clever last year to lead customer success  but the role quickly expanded to head sales  strategic partnerships and operations  Big jobs  big demands   everyone s familiar with that  But if you want to attract and retain the right people  you need to fend off burnout before it hits your team  Saxena says  She outlines a quadrant system  below  for quickly sorting a to do list based on likelihood of success and impact  and prescribes what to do for each category of task  For example  take the category of things you said you d do but didn t    It  usually requires an apology of some sort  Maybe it s you telling your boss or direct report   I m sorry  I can t do it    Embracing the truth here is vital  You have to be open and honest about your capabilities   Saxena says   To avoid burnout  empower your team to know they can do fewer things as long as they do them really well    13  Beat your competition by introducing unfamiliarity   a better mousetrap won t work   Bret Taylor helped lead the team that co created Google Maps and was CTO of Facebook following its acquisition of FriendFeed  He s now a board member at Twitter and the co founder and CEO of the startup Quip  which Salesforce recently acquired  Despite his startup pedigree  Taylor is acutely acquainted with being an underdog  and he shares this big piece of advice  Building a better mousetrap isn t enough to set you apart  In fact  incumbent competitors have a number of advantages that could kill your startup  including entrenched distribution channels and consumer familiarity  Google Maps  for example  struggled to best MapQuest when it launched in 2005  Consumers just didn t see a reason to make the switch  MapQuest already did everything they wanted even though Google Maps was a superior product  Start to dethrone incumbents by making users a little uncomfortable to make  better  matter   and users care   In many ways  your quietest  most steadfast competitor is indifference   he says   The bottom line is you have to build a lens to allow users to see a new world rather than features to help them see an old world better    14  Make recruiting an act of qualification  not an act of disqualification   One of the findings in First Round s 2016 State of Startups report was that hiring the right people tops the list of founder concerns  This doesn t surprise First Round s Tammy Han  who works with startup founders looking to hire and candidates looking   or in most cases not  actually   to get hired  She warns job candidates to beware brand name bias  scale their search realistically and never say no to a job you haven t been offered  Create and return to a decision matrix  template below   For startups who are hiring  she advises them to inquire about candidates  motivations directly  not to be afraid to talk money upfront and  of course  be diligent about the candidates they interview  It s not uncommon in today s market for an early stage startup to interview someone from a big name like Google and Facebook   candidates who are likely well paid and enjoying meaty titles and workplace amenities   You shouldn t make snap judgments and disqualify purely based off of resume alone  nor should you allow yourself to be intimidated by their recent big company experience   Han says   If you are stepping back and not competing   that s another problem that you need to fix    15  Pin down price before building your product   Consultancy Simon Kucher   Partners s board member Madhavan Ramanujam is the price whisperer  having consulted on the topic for Fortune 500 companies and hot startups alike  His advice  Before you even decide exactly what product you re going to build  take a page from Porsche s playbook and pin down exactly what people are willing to pay for it  Be militant about testing customer willingness to pay for product features  as Porche did with extra large cupholders or six speed racing transmissions  In the case of the hit Cayenne SUV  customers wanted the former but yawned at the latter  Porsche avoided shipping a dud by rigorously eliminating features customers weren t willing to shell out for  While new products flop for many reasons  Ramanujam spells out the four categories of product innovation failure and how to avoid them   and cautions against putting product pricing on the backburner   Most companies postpone pricing decisions until after the product is developed   Ramanujam says   They embark on a long  costly journey of hoping they ll make money rather than knowing they will    Madhavan Ramanujam  16  Flex between three learner mindsets to become an adaptable leader   Anne Dwane has been through her share of change   first joining college matching service Zinch as CEO  then becoming Chief Business Officer of Chegg after her company was acquired  Her trick to adapting to rapidly changing situations is to be a constant learner  and she s honed in on three types of learner mindsets that you need to know to do the same  Gamer  Beginner and Growth  Gamers are able to focus and form partnerships  for example  while beginners are childlike and curious  You should be able to hire people who can adapt to these styles  and Dwane specifies her process for how to interview for constant learners   Knowing has become obsolete   Dwane says   Learning has become our true currency  We re not knowledge workers  We re learning workers  If you aren t actively trying to learn  no one can help you  If you make it central to your professional life  no one can stop you    Adaptability is all about being fixed on a goal but flexible on the details   17  Fundraise like a surfer   plan to take on investors in sets   First Round has built its Pitch Assist program from the vast knowledge it s accrued by witnessing its companies raise over 1 000 rounds and  18 billion in follow on funding  Partners Bill Trenchard and Brett Berson have gathered insights ranging from how to fix one s timeline to ways to create a race dynamic to the many wins and sins of pitching  One critical tactic in successful fundraising is to create scarcity  As a rule of thumb  speak to no more than five firms at a given time  There s nothing worse than the perception of an over shopped deal  as VCs relish having the inside scoop on an exciting company  Group investors in batches to better evaluate and select them  like a surfer scanning sets of waves that move toward the shore   Say you have a dozen partners at firms who might make a good fit  Don t group all your top choices in the first set of five  Pick two or three of your highly ranked VCs and round out the set with lower priority firms  Even if you ve rehearsed your pitch  you ll continue to refine it  so diversify your schedule to account for that learning curve   says Trenchard   It s going to take some time in market to perfect the actual pitch  That said  don t leave all your top picks until the end as they ll be very out of sync with your process if in a later set  It s a balancing act    18  Master telling these three types of startup stories   Don Faul  COO for performance sportswear maker Athos  has led operations at Pinterest  Facebook and Google   not to mention commanded a U S  Marine Corps platoon  But his secret to success is something decidedly un operational  storytelling   Whenever I meet with new leaders  I always talk about their responsibility to inspire people   to tap into that intrinsic motivation to be there and work hard   says Faul   We re fortunate to work in an industry where meaningful work is getting done  and people badly want their work to be meaningful  Stories connect the two  It s the skill every leader needs to learn   In particular  Faul prescribes mastering three types of tales  the failure story  the good example story  to encourage good behavior  and the inspirational story  Good storytelling requires deep honesty   Being vulnerable doesn t weaken your authority   Faul says   It strengthens everyone else around you    The right words can be so powerful  They can make you feel like anything is possible   19  Forget technical debt  Build technical wealth   As the CEO of Corgibytes  Andrea Goulet helps companies re architect and modernize apps  She seen all varieties of broken systems  legacy code  and cases of technical debt so extreme it s basically digital hoarding  When it comes to technical debt  most CTOS see the problem coming  but find it hard to convince their colleagues that it s worth spending money to fix what already exists  It seems like backtracking  with no exciting or new outputs  A lot of companies don t move to address technical debt until it starts crippling day to day productivity  and by then it can be very expensive to pay down  You re much more likely to get your CEO  investors and other stakeholders on board if you reframe your technical debt as an opportunity to accumulate technical wealth   a term recently coined by agile development coach Declan Whelan   We need to stop thinking about debt as evil  Technical debt can be very useful when you re in the early stage trenches of designing and building your product   says Goulet   And when you resolve some debt  you re giving yourself momentum  When you install new windows in your home  yes you re spending a bunch of money  but then you save a hundred dollars a month on your electric bill  The same thing happens with code  Only instead of efficiency  you gain productivity that compounds over time    Stop thinking about your software as a project  Start thinking about it as a house you will live in for a long time   20  Fuse Engineering  Product and Design from the start   Airbnb s design team includes a former librarian  mechanic  life insurance agent  therapist and modern dancer  Alex Schleifer  VP of Design at Airbnb  is calling for a more receptive startup environment and defined career path industry wide for design professionals  One way forward is to create an EPD   engineering  product and design team   from the start  Some tech companies have adopted this approach  as it has involves and aligns each function from a product s inception to its launch  For example  a working group for a new feature  product marketing or user feedback will involve at least one member from each of the three teams  This coalition not only assembles the key builders of the product  but  as a byproduct  it also formalizes the professional pathways that a person who wants to create a product can consider  The team should resemble a three legged stool  in which each leg represents one of the three areas that helps build a product  If it s done from the start  Figure A   each function can grow in parallel and proper ratio  Figure B  as the broader organization scales   Without those strategies from the onset  you re bound to create an unstable stool down the line  which  in this case  is a shaky product  That might be because no design role was developed at the onset  Figure C  or was added on after the product   and the engineering and product management teams   has already matured and grown  Figure D    Designers  if we constituted a nation  who would we put on our currency   21  Write down any question you hear from customers more than twice  That ll feed your content marketing   As trendy and gabbed about as  content marketing  is these days  Contently CEO Joe Coleman says he s continually surprised by how many companies of all sizes  including the Fortune 500  don t know what to write  what to track  or what their objective is  even as they pour millions into content production  In many cases  companies branching into content are tempted to run before they can walk   They think   Okay    content strategy  We need a blog  social media  an email list  all at the same time  Go    he says  Instead  talk to existing companies as your first step   Get your sales team involved  Have them constantly share the questions they get  or the challenges they people have  and build a heatmap  Really mine that data to figure out what you should be writing about   says Coleman   You have to be really honest with yourself at this stage   Coleman says   It s not just whether you should and can produce content  It s whether you can do it without half assing it  Otherwise  you can do real damage to your brand   Part of this process might be figuring out you don t need content at all  or that it s not the right time  Audience analysis should precede bringing on someone to run content marketing full time   If you re not obsessed with creating really great premium content  you re wasting your time   22  Don t try to 10x the output of each team  Put many 1x teams next to each other   Reddit s co VPs of Product Alex Le and Kavin Stewart share extensive experience building products at every single stage of company life  They ve both seen a lot succeed and a lot go south  One critical juncture is the radical shift from product market fit into growth   an inflection point that steamrolls far too many promising startups   As a company gets bigger  it s scary to watch how most fall into longer and longer iteration cycles   says Le   Someone needs to be paying attention to this  Like  literally collecting data on how long every release is taking  How long releases of similar features are taking over time  How many features are getting launched per sprint  per quarter  etc  You have to know how long it s taking you to get things done so you can make sure it stays relatively the same even as you add more people and projects  The goal should really be to parallelize more iterations all taking place at the same time   Companies like Facebook have done a heroic job of keeping iteration cycles short   They do that not by adding a bunch of people to a project  You want many mini projects all producing learnings at once   says Stewart   And for that  you need the healthy communication that comes with focusing on product ops    23  Decode your customers with these behavioral economics tricks   People are wildly unpredictable  They ll pay for a  30 cab ride but not a  2 app  You could build or break an entire company based on whether you correctly executed customer development   the science of establishing a market that is willing to purchase your product  To truly understand what customers want  you need to delve into behavioral economics  which is Cindy Alvarez s secret sauce as a customer base rainmaker at Yammer and now Microsoft   For almost all startups  the greatest risk isn t technical  It s whether or not someone will care and buy   Alvarez says   You have to be aware of the inherent biases most people have and frame  survey  questions to counteract them  Otherwise  people will think they re answering honestly  If you take them at face value  you ll end up creating the wrong company   Alvarez lays out the four types of bias companies face and how to capture insightful  quantitative customer data   and accept the results even if they re painful   To a founder  their company is their baby  No one wants to hear that their baby is ugly   24  Layoffs don t sneak up on you  Learn their four phases   Beth Steinberg has helped bring on board about 10 000 people for everyone from fashion retailer Nordstrom to Facebook  She s clearly a hiring pro   but at nearly every company she s worked  she s also had to execute layoffs  cutting nearly 2 000 positions over the course of her career  Her advice on permanent layoffs  or what are more accurately known as RIFs or reductions in force   Prepare for each of the four phases of a RIF  before you know it s coming  when you know it s coming  when it s happening and after it happens  She suggests sharing budget figures with all of your managers  not just executives  Steinberg also details how  when and with whom to share the news that a layoff is coming once your most senior people know  And once you re ready to make the big announcement  there s two ways to go that Steinberg has seen work best  a company all hands where the CEO makes the announcement  or where direct managers announce to the team and then the company convenes an all hands for the CEO to elaborate   Layoffs transform all founders and confirm some as leaders   she says   When a layoff has gone as well as it can go  you ll eventually see former employees return to visit    Beth Steinberg  25  Use these four meta models to make sure you re not just talking  but being heard   Khalid Halim is the cofounder of Reboot  a coaching firm that s worked with leaders at companies such as Coinbase  Lyft  Kickstarter and Etsy early on in their path to growth  As a sought after professional coach and former turnaround CEO  Halim specializes in untangling complex company communications to help organizations build upon one narrative  Halim draws from his training and expertise in neuro linguistic programming  NLP  to reform the way leaders communicate with their teams and vice versa  Four meta models   or filters for how people see the world   have proven to be especially effective tools for the leaders he s coached  toward vs  away from  internal referencing vs  external referencing  specific vs  general and see hear read do    Entrepreneurs   like everyone  only use the best strategies they have communication presets that were wired when they were young  The founder becomes a rare leader when she can communicate and resonate with all of her people   says Halim   That takes a conscious change an awareness  a mindfulness  radical self inquiry in communication  Only then do leaders get that it s not about what is said  but what s heard    26  Break out of cloud jail   When Avi Freedman was getting ready to graduate college in 1992  there was no way to buy internet service in Philadelphia   so he founded the city s first ISP  He went on to hold leadership roles at global backbone provider AboveNet  Akamai and ServerCentral  He most recently founded Kentik to give companies full visibility into their network traffic  performance and security  In short  Freeman knows a thing or two about technical infrastructure  One of the biggest   and often company ending   mistakes that he s seen startups unwittingly land themselves in Cloud Jail  Many early stage companies fall asleep at the wheel after redeeming a generous credit to get their infrastructure on the cloud   only to wake up to find it s ballooned into their biggest cost and that there are few long term solutions for easy optimization  Instead they should start out running multi cloud and eventually set up a small infrastructure  cross connected to cloud providers  Freedman also warns readers about getting sucked in by  hipster tools  and not designing for monitorability  but instead to play conservatively  establish a system of checks and balances and not to bow to trends  Startups have enough challenges  a little forethought into infrastructure can help you control a big part of your company s destiny   27  Performance reviews   career conversations   Candor  Inc  co founder Russ Laraway is a sought after talent advisor whose framework for career development at Google boosted engagement scores across hundreds of employees  His surefire approach to growing and retaining people  Help employees articulate long term vision for their careers  You can do this by prioritizing three career conversations   deep talks aimed at understanding both your employee s past and where they want to go   over performance reviews  Then go above and beyond to put them on their intended path  from helping them network with top people in their desired field to investing in relevant coursework   It s so important for your employee to know how much you re supportive of them  and how far you re willing to go to make sure they achieve their dream job  That inspires loyalty like nothing else   Laraway says  Make sure your people are getting   and know that they re getting   the tools and experiences they need to advance in the way they aspire to  No empty promotions or ceremonial performance reviews  Instead  opt for real talks   and real action   28  Invest in data science only after you ve validated your MVP   It s hard to believe that  data scientist  only became a bona fide job title in 2008  Jeff Hammerbacher at Facebook and DJ Patil at LinkedIn coined the term to capture the emerging need for interdisciplinary skills across analytics  engineering  and product  Today  the demand for data scientists has blossomed  and with it the need to better understand how to grow these teams for success  But according to Instacart VP Data Science Jeremy Stanley  and technical advisor and former LinkedIn data leader Daniel Tunkelang  don t rush into hiring just because data science is sexy  If they were to throw out one  overarching recommendation  it s this  After you ve validated your MVP  it s time to think about investing in data science  A successful product launch should generate enough data to learn from  and you ll need to keep up with that data stream by having people on board who can extract value and insight from it  Otherwise  building a team too early is an expensive distraction  will demotivate your talent and possibly have lasting negative cultural implications   Data science requires data to science  and most companies don t have much data on day one   29  Build founder connectedness through a thoughtful onboarding process   Percolate co founder Noah Brier has built a marketing platform used by over 400 clients  including global brands such as Unilever  GE and MasterCard  His core tenet at Percolate is founder connectedness   maintaining a sense of kinship between founders and the team  He s designed a thoughtful and detailed onboarding process to cement that connection  He details that multi step process  from when the offer letter is signed to the Friday before the new hire arrives to the new employee s first day and beyond  The process concludes with time with the CEO  Follow Percolate s template to keep your hire engaged from the start   Your first week at a company has an outsized impact on how you feel about the organization  how you get yourself ramped up and how effective you will be   Brier says   It s the foundation of your experience  capacity and emotional connection at work    30  Give out the Spartan Shield award   When people join Location Labs  they stay  The company boasts a 95  employee retention rate  and has never laid off an employee  Joel Grossman has had a front row seat  from when he started as an intern more than a decade ago to his current role as COO  He s been with the company since it was venture backed and deep in the red through to its victorious 2014 acquisition by online security firm AVG  What s the secret to his   and his colleagues    retention  Grossman shares has several observations  ranging from focusing less on attrition  and more on how employees interact with management and each other  to tracking referral rate as a leading indicator of retention  60  of Location Labs  employees have made a referral  40  of new hires are referrals   One tactic is to give out the Spartan Shield award  which Location Labs uses to recognize working well together   I m not a military expert  but from what I understand a Spartan shield is literally a large shield  which isn t designed to protect you so much as the person next to you  They would align themselves as a single phalanx   not individuals  but a single team much stronger than the sum of individuals  Each is dependent on the shield of the person next to him  You re keeping the person next to you safe   The award is handed out to any employee who goes to great lengths to help out others  The winner typically spends extra time helping out another team on a project that s not their direct responsibility   Illustration by Alejandro Garcia Ibanez  Photos by Bonnie Rae Mills and Kevin Lee,"[1061 190 826 120 19 644 624 17 1154 1276 74]"
1070,training-dataset/product/401.txt,product,How product managers can make meetings great again131 Flares 131 Flares    It s become a common trope that product management is less about the management of products and more directly about the management of stakeholder relations  To that end  meetings would seem like an ideal use of time  enabling product managers to communicate with key members of the team  But as most readers know  that s rarely the case  and most meetings become dreaded wastes of time  By applying a few proven techniques  meetings can indeed be great for aligning stakeholders and facilitating a customer centric product management process   In my experience  the three most common reasons that meetings are ineffective are because the agenda is flawed  they deteriorate into arguments  and or they end without clarity as to next steps  Fortunately  the product teams I work with have creative solutions for each   To enhance the agenda  meet before the meeting  It s not enough to include an agenda in an email or calendar event details  To ensure a seamless meeting  Joe Lalley  Digital and Social Strategy Director at PwC  described on This is Product Management how he avoids blindsiding colleagues    What hasn t been so successful is scheduling a meeting and asking people to react naturally to a set of research or proposals   Lalley explains  Instead  he holds  meetings before the meeting  with colleagues who are critical to the project  and gets feedback from them on an initial agenda  If he s planning to present data to make an argument  he ll create a quick video to introduce not just the findings  but also the methodology followed to acquire those findings     It s  a great way to scale the message in a very short amount of time   Lalley says  By socialising the agenda ahead of time  he s found that meetings flow smoothly  rallying stakeholders around important initiatives they feel they ve contributed to   To prevent debates  transform opinions into testable assumptions  Discussion  and even some debate  can be a healthy way to flesh out ideas and perspectives  But it s important to recognise that decisions shouldn t be made by whoever makes their case the loudest  Product teams have the expertise to turn opinions into testable assumptions and finally into actual customer feedback and data   Sunil Parekh  VP of product at Truveris  a specialist SaaS provider in the US pharma space  explains how he defuses internal debate quickly  When stakeholders were arguing about how to design a key feature in their award winning OneRX app  Parekh transformed each opinion into a prototype  He funnelled target users to each prototype to observe their behaviour and stated reactions    From the results provided  it was clear that  one variant  enabled the majority of users to complete  the objectives  successfully   Parekh says   When we have data like this  internal debate stops  We have an objective measure of which version will be more effective    To decide on next steps  agree to disagree  Many product managers mistakenly believe that consensus is the objective of every meeting  The problem with that belief though is that consensus is often too unrealistic  Different stakeholders have competing priorities and aren t necessarily incentivised to agree with each other   To help facilitate healthy disagreement  Intel pioneered and Amazon adopted the practice of  disagree and commit   where the goal of a decision making meeting is not to reach consensus  but rather to achieve commitment   When commitment is valued over consensus  stakeholders are more comfortable sharing their concerns  rather than keeping them to themselves   or even worse  sharing them with each other privately after the meeting adjourns   One very specific way to practise  disagree and commit  is to interpret all silence as disagreement  In other words  if you suggest something to a group  and the group is silent  you might say   I am taking that silence to mean that everybody in the room vehemently disagrees with me  Please share your disagreements    Product teams don t need to begrudgingly participate in meetings with the expectation that they ll be a waste of time  Of course  having too many meetings can get in the way of a productive work week  But with the above tips in mind  product managers can make meetings as great as once promised,"[1070 168 1339 190 1061 391 826 912 19 17 1030]"
1093,training-dataset/product/339.txt,product,7 Ways to Use the Rule of Threes to Build Great Products7 Ways to Use the Rule of Threes to Build Great Products  Great things come in threes  Take  for example  Christmas  Hanukkah and Kwanzaa  Or  Harry  Hermione and Ron  Or  the primary colors   The rule of threes states that things that come in threes are funnier  more satisfying  or more effective than other numbers of things   It is from the internet  so it is true    Threes are powerful  Here is how to harness the power of threes to create great products   Teams   roles  motivation   accountability  A great team is one where roles are clearly defined and everyone is motivated to do their best work   Team composition will depend on need  but a team is at least 3 people  I ve worked on 2 person product teams  and while it is possible  the dynamic can easily devolve into offense and defense  Having a third person creates balance   Furthermore  there is usually just too much work to do for only 2 people  Three people is the perfect size to be agile  you are small enough quickly get on the same page  and large enough to divide labor effectively   Each team member has tasks and large chunks of work that she is responsible for  but more than that  each team member should be accountable for some major aspect of the product such that they get the deciding vote on it   Goals  long term  short term   even shorter term  Setting your own product goals can be daunting  You want to aim for something lofty  but also attainable  Being in the red all quarter is never fun  In fact it can demoralize your team and slow development   But setting goals doesn t have to feel like a burden  Here is a simple formula   Identify a core business theme Find a metric that is an early indicator that you will impact that theme Tie it all together  The right business core theme will depend on the company s stage of growth  and typically is one or a combination of the following  NPS  conversion  revenue   These business themes track to long term metrics  which make them challenging to track iteratively   For example  if I want to impact 30 day day conversion  which my company tracks across all product lines and which accounts for the majority of all paid conversions  I would need to wait two months to get just one treatment cohort  at which point I am already committed to product direction  not to mention two thirds of the way through the quarter   So  tracking against the long term metrics would be death to agile development   Instead  you need to find an intermediary metric  or a marker of the change you expect to see in user behavior on the way to impacting the core business theme   In this way you need to set a long term goal mapped to company goals  a short term goal mapped to your specific product  and an even shorter term goal that you can measure very frequently  see more in the section on Time    Story   past  present   future  Determining product direction can be be circuitous and involve a lot of divergent thinking  But  once you ve converged on one goal  you need to make it digestible to your audience  meaning your team and stakeholders   A good story covers the past  touches on the status quo  and then builds a vision for what the future will look like with your product in the world  It includes key data that supports your point  but is not overly complicated   In addition to the narrative story  build out models to show the quantifiable impact of product work   Models makes it extra clear to stakeholders the ROI of the product  which will helps guide strategic decisions about time spent on it   Time   months  days   timezones  The longer it takes to develop a product  the more impact it needs to justify  Keeping scope and time limited is key to driving success without going over budget  Unless you are pioneering something completely new  three months is all you need to identify goals  and rapidly iterate to success   One limitation to building quickly is time to gather data  It is important to constantly measure your test to make sure you are on the right track so that you can course correct and so that you can keep your team  and stakeholders  happy by showing them that the work you are doing is effective   But  if you want to measure any metric that accumulates over time  you will need to wait typically double that timeframe in order to have a cohort who saw the treatment for the full amount of time  Waiting this long sincerely slows down product development   Instead  you need a much shorter time frame   You can redo your analysis linking the top level business goal to the product goal using a shorter time frame  like one day  and use that proxy metric to make quick decisions mid development   NOTE  When you are looking at short timeframes and with an international user base  time zones start to affect your data  so you need a time buffer on either end   User Research   anecdotes  coincidences   patterns  Great products are built with the user in mind  and often  with the user at the table   User interviews should be done heavily at the beginning of product development to really understand who you are building for  what their pain points are  and how you can best solve them   User testing should be done anytime you have a new prototype  in conjunction with interviews or as stand alone sessions   While both types of user research are vital  they are also incredibly time consuming  and so you can t do them with abandon  You also need to know when you have an insight that you can actually act on   This is where the rule if threes shines yet again   If you hear something from a customer once  consider it an anecdote  Note it  but keep going   If you hear the same thing twice  you should perk up  but don t get too excited  It could just be a coincidence   However  if you hear the same thing three times  that is a pattern  It is time to stop interviewing and or testing for that hypothesis and start building to answer it   NOTE  You can only reliably follow this rule if you are talking and testing with users who are part of our target audience   Iterations   V1  V2   V3  Consistent shipping not only keeps your engineer happy  your product less buggy  and your customers up to date  it also lets you build to collect data  giving you more information to make good decisions   I ve found that aiming to ship every two weeks  for 6 versions total  works well   Least you think this isn t following the rule of 3 pattern  every integer version  V1  V2  V3  is a fully built new feature  based on an insight from talking with users and digging into data  Every half version  V0  V1 5  V2 5  is an early shipment to test an idea and gather more data   Each iteration is a chance to address any bugs that have surfaced and continue to message what is new to users   But most importantly  shipping continuously and with data gathering in mind  helps answer big question that about the product and validate that it works before putting more time and resources into it   Retrospectives   Start  Stop   Continue  Team retrospectives let you air things that went well for the team during the quarter and those that we could improve  It is helpful to have someone who was not directly involved in the team to facilitate the Retrospective so that as a neutral party   One model that works well for Retrospectives is Start  Stop and Continue because it puts the focus of the retrospective on learning from what went well and what did not  rather than getting caught up in the details   Team members each spend a few minutes writing down things that they want to Start doing  Stop doing  and Continue to do  You can use a new sticky note for each thought and then post the notes in groupings on a whiteboard to see patterns  Typically  team members reflect on similar success and challenges  but it is helpful to see how each person internalizes the situation and reflects on it   Ideally  these are done every few weeks to help teams refine their process   Building great products  At the top of this article  I claimed that great products can be built using the rule of threes for teams  goal setting  story telling  time constraints  iterations and retrospectives  But  what is a great product   A great product does not need to win an awards or disrupts an industry  A great product is simply one that achieves its goal  It is a product that helps users achieve something that they want to do  and helps grow the business at the same time   So  why the Rule of Threes  It is just one of many frameworks for product development  However  I am partial to it because it is grounded  balanced  and  most importantly  it reminds us that no great product is built on any one person  concept or principle,"[1093 1030 190 826 17 1387 116 1339 1061 220 503]"
1097,training-dataset/business/111.txt,business,The Recursive Product Strategy That Musk Used To Build An EmpireThis article is by Vinny Lingham  co founder and CEO of personal identity protection startup Civic  He s founded and led three other companies  including mobile gift card company Gyft  which was acquired by First Data Corporation   Ten years ago  Elon Musk signed off on a blog post by summing up Tesla s company strategy   Build sports car  Use that money to build an affordable car  Use that money to build an even more affordable car  While doing above  also provide zero emission electric power generation options  Don t tell anyone   In the decade since  Musk has methodically checked each box  save his cheeky  promise  not to tell anyone  He built the Tesla Roadster  which made way for the Model S  and slightly more expensive Model X  and now the Model 3  Over that stretch  the company developed electric power generation technology not only for vehicles  but also homes  businesses and utilities   Of course  these are guideposts  not the full odyssey  as the rundown becomes a simpler story with the sweat  sacrifice and serendipity removed  Being always told to think big  the temptation for a founder   especially this fellow South African entrepreneur   is to immediately aim for the level of ambition of Musk s end goal rather than draw guidance from his process for realizing it   It s not an easy system to execute  let alone internalize  I started my first company the year Musk founded Tesla  and it s taken me until my fourth company to feel as if I ve got a clear vision from the start  Musk likely isn t the first founder to apply this methodology  though likely among the most famous   nor will he be the last  To reference the approach  I ll offer it a name  recursive product strategy  Here s what I understand it to mean  to work back from an end goal   five  10 or 50 years ahead   until you can hit inflection points that propel your company and its customers to the next stage  while ushering both toward the end goal   We push hard through companies   and life   from start to finish  so too few pause to design either in reverse   Present Chronologically  Design Recursively  In the Tesla example  Musk begins with the first step  building a sports car  versus his listed end goal  building an affordable  zero emissions  electric car   When presenting a vision  it s easier for people to digest a plan when starting with its first step or incarnation  At the time of his blog post  most of us could better envision a premium sports car  than wrap our heads around an affordable  luxury  electric vehicle   However  I m willing to bet that he constructed his master plan in the opposite order  In other words  he came up with the grand vision and backed into an opening gambit he would need to reach it  In essence  he extracted the first step from the larger vision   Following Musk s approach in his post  I d present the plan for my company Civic as follows   Create an easy to use  free identity management service for consumers  Invest in building an identity network to eliminate fraud and identity theft  Validate the use of mobile devices as a standard for remote mobile identification  Improve the democratic process by giving everyone   anywhere   the ability to exercise their democratic rights  Create a more engaged and informed civil society that makes better decisions for mankind and the planet  However  here s how my co founder  Jonathan Smith  and I first designed Civic recursively   essentially in the opposite order   OUR CONTEXT  Like Musk  my co founder and I grew up during apartheid  albeit on opposite sides of the oppressive system  I was born without the right to vote  but  thanks to Nelson Mandela  that changed  The political transition was anything but smooth  and I realize how powerful  but delicate a democracy can be   not only in South Africa  but around the world   BIG ISSUE  There s abysmal civic participation  especially around elections  Worldwide  voter turnout has been on a continuous decline   and about 20  in the United States  Increased spending helps voter turnout  but with strong diminishing returns  The cost to run an election   even at a local level   can be prohibitive   OUR GOAL  To enable a delegated democracy at scale  To engage voters by empowering them to entrust their vote to a registered delegation of relevant domain experts versus an individual politician who may or may not have specific expertise in the issue   What s needed   Receptive stakeholders   government  citizens  constituents   to participate in a delegated democracy  An accessible online platform to connect and allow citizens to safely  accurately and reliably allocate their vote on demand and at scale   Why not now  There is no legal ability  cultural familiarity or technological platform for citizens to vote online  Citizens are tied to their polling places or registered addresses   STAGE 4  To fix the  person not present  challenge of those not voting in person   What s needed   Endorsement and adoption of mobile voting platforms by governments   Why not now  Agencies can t verify identities of people on the other end of devices   STAGE 3  To build a product that securely verifies the identities of millions of people   What s needed   A platform that can bind people to their electronic devices to a nearly perfect degree of accuracy   Why not now  No government or company has been able to successfully build it yet  For example  the US government is under fire for its massive biometric database  known as Next Generation Identification  Facebook doesn t collect Social Security numbers nor does it verify identification information  It mainly constructs identity through social consensus  which isn t sufficient  Even for issues as basic as name  it can falter for this purpose  for instance  I go by Vinny on Facebook  but my legal name is Vinodan  In a recent survey we conducted  we found that less than 10  of respondents would consider giving their social security numbers to any social network   STAGE 2  To create the largest network of personal identification data   What s needed   Trust from the consumer  which means protecting data first and foremost  A network where user data and authorization is decentralized   and not stored on company servers   so both the customer and company are less likely to be targeted or hacked  Ability to provide their personal information and a brand that s recognized and accepted worldwide as a reliable form of digital identification   Why not now  The time is now  Consumers are worried about data breaches  The paid ID protection industry has millions of people paying a fixed monthly fee for protection  If offering the same or better protection for free  wouldn t you get more people signed up   and create a powerful network of consumers   STAGE 1  To offer a free product to protect personal identification information   What s needed   A mass market consumer product that solves the pain point of identity theft and abuse  elegantly  simply and always free   for life   Why not now  The time is right  Enter Civic   Vinny Lingham  Backing Into A Blueprint For Empire Building Using A Recursive Product Strategy  It took me a career of founding startups to truly internalize this company building blueprint and many months of iteration to apply the process to Civic  Here s the four step framework to apply  with examples from Gyft to illustrate how the methodology has worked in hindsight   Pick a universe to dent  Universes are all different  but dents should always be noteworthy  When I started Yola in 2007  we wanted anyone to be able to build a website without needing the technical skills to do so  Looking back  it was an admirable vision  but not a big enough of a universe  We didn t think carefully enough about margin pressure and multiple inbound competitors   such as Wix  Weebly  Shopify  GoDaddy and Squarespace   crowding the market  which is still barely more than the  1 billion in revenues across the entire industry  even after nearly a decade  It also wasn t an industry where anyone could build a moat to protect themselves and even if they could  the market was too small and overtraded   I took a different tack with Gyft  At the time  gift cards were a  125 billion industry  of which only 0 1  was digital  We wanted that ding to become a dent  If we could grow that digital percentage to 10  over five years  we d have a crack at making a visible mark on a huge market  The questions were  how can we get consumers to ditch plastic in a digital age  Could we build a moat to protect ourselves from competitors   Swing a wedge to make a ding  Before there s a dent  there s a ding  It takes some heavy  persistent swinging to make a dent   and  for that  you need a wedge  It might be an unfair advantage  niche market or economy of scale  but the purpose is the same  to break in and maintain that edge   For Gyft  that wedge was a digital wallet  It was a way to upload physical cards to store currency digitally so that it d remain accessible  Physical gift cards are often misplaced or lost  at least  20 billion in gift cards go unused every year  Of course  we couldn t rely on just one wedge  so we banged away with many  this time in the form of product features  balance inquiries  loyalty points for retention  additional payment options like Bitcoin and more  Through the wallet  we discovered one of the most valuable   and unexpected   use cases  buying digital cards for oneself for budgeting and other purposes   Look to adjacent markets to place your first swing  I ve learned that one person   and in most cases  one company   can t swing hard or fast enough to create a big enough dent in the universe  Before we started swinging  we mapped out the markets where others might swing a wedge with us  For Gyft that meant  designing the digital wallet to be integrated online or at the POS for every store  SME or corporation  A digital wallet is as powerful as where it can be used to spend its balance  The more adjacent markets we could serve  the more our customers would swing the wedge on our behalf  However  that didn t entail developing different wallets for different markets  we stayed focused  Where other digital wallets like Google Wallet failed  we won because we only focused on gift cards  despite inbound asks for credit and loyalty cards   Each swing has to be valuable in and of itself  Your company can achieve incrementally and postpone end goal gratification  but customers and partners must be rewarded with each swing  With Gyft  not losing money by being able to store physical gift cards digitally was an immediate benefit  Businesses that partnered with Gyft could ship products to customers instantly  All other features   from loyalty points to payment options   were enhancements   The same goes with Civic  Entrusting us with personal identification information will only happen as part of an equal exchange  So from the beginning  we re offering free identity theft protection for life  Then the ability for third parties to safely verify identities  Once able to do that  customers will be able to transact securely and remotely  The final  swing  should allow people to engage and flex their civic rights   Be Honest With Maslow  For founders  there s a step that must be precede all applications of recursive product strategy  a sincere self assessment of their motivations  As the initial muses and muscle behind a venture  founders must   if only to themselves at first   articulate what truly drives them  Survival  security  belonging  respect  self fulfillment are all very valid reasons to build companies  These motivations are captured in more current modern theories  but perhaps most famously articulated in developmental psychology framework Maslow s Hierarchy of Needs   Maslow s Hierarchy of Needs  To that end  there have been both serious and satirical applications of Maslow s Hierarchy to the startup world  They intend to list the stages of growth for founders by motivation  ranging from the most basic to advanced motives  Reflecting on the companies I ve founded  I ve been on most tiers of the pyramid   sometimes a few over the span of a startup  Most serial entrepreneurs will be driven by most of the reasons on Maslow s pyramid over their career   I ve known first time founders in pursuit of self actualization and seasoned entrepreneurs building to get respect from peers  It s not a ladder to climb  but a choice each time  It s well known that  of the  180 million that Musk got from the Paypal acquisition  he put  100 million into SpaceX   70 million in Tesla  and  10 million in Solar City  He had to borrow money for rent  Here s a millionaire who chose self actualization over meeting basic  physiological needs   Early on in my career  I was living in a hotel via a maxed out credit card because I had nowhere to live  When I started my first business  my goal was to survive in the world  not change it  So while Musk and I both borrowed to live at one point  we were doing it for very different reasons  The reason for founding a company is important   but what s most critical is that entrepreneurs actively align to and abide by their actual motivation for the venture they re currently leading   When building your company  think visibility  not just vision  How far ahead can you practically see   When I was a first time founder bootstrapping a business  there were many times when I could only see weeks ahead  I aimed to think further out  but when you re trying to make payroll  you have to make or save capital to survive  so you live in the short term  This applies even more so to entrepreneurs in markets outside of Silicon Valley  where capital is a luxury   In my next business  I raised capital  could see about a year ahead and was thinking in months  More than a company  it was like a big project that had milestones because investors insisted on incremental improvements in order to get to the next tranche of capital  Essentially  the product was the company   they both shared the same lifespan   In my last company  we thought in years  It allowed us to focus not on revenues  but on user experience and retention  Our goal was to convene and serve a strong customer base  For that  we had to focus on building a great company   not just a great product   to develop a relationship with customers and evolve with them  We kept our burn low to extend our runway as far as possible  to ensure the flexibility and freedom we needed to focus on our users   The frame of reference for my current company is a decade  The horizon is that far out not only because we re trying to create an industry   a new corner of a marketplace where people relate and transact differently  It s no longer just the product  company or customers individually  but collectively   and we have designed our plan to be the unifying agent   It is the rare company that impacts generations that follow  They influence the way people not yet born use products not yet made in a future not yet realized  It may seem more like science fiction in this realm  but there are founders that aspire to that type of of runway and horizon  They seek to influence a time that they may not be around to experience   In short  it s less a hierarchy of needs  and more a horizon of needs  A founder s early task is to not only define a vision  but also determine the visibility with which she can comfortably operate   Horizon of Needs  A recursive product strategy involves backing into the first step needed to build a long term company  That is why a founder must identify her motivation from the start in order to determine if long term entails ten months or ten years  What drives a founder and the corresponding timeframe is important  but accurate self assessment is paramount  Not every company or founder will choose to build for the next generation  nor are they guaranteed to do so even if they try  The more distant the horizon  the more there s variability  such as market dynamics  competitors  new technology  fundraising cycles   the list goes on  There s a rich canon of startup advice out there to navigate those factors  The offer of recursive product strategy is a way to build a company for the long term  The trick to getting there is first to pave the right length of runway and back down it in reverse  And of course  as Musk said  don t tell anyone,"[1097 829 1061 19 826 975 190 430 1339 17 408]"
1133,training-dataset/business/674.txt,business,Keep agile teams aligned   uxdesign ccJust like the Business Model Canvas helps identify gaps in a business  understanding of itself  the canvas is meant to identify divergence or broken links from the very high level to the day to day   The Strategy Kernel by Rumelt does a great job of guiding you to build good strategies  However  it isn t very prescriptive on the actual process of creation  how to write it down  share it and get buyoff for it  His great work on what is good or bad strategy is the basis for the Strategy Kernel Canvas  which we will now introduce   With the agile mindset we assume that don t know everything about the complexity when iterating  We do this while constantly learning from the customer  or people we are solving the problem for    Strategy is the north star for the organization  Agile is focused on figuring things out iteratively  with small and highly collaborative teams that work with the customer directly  Agile gives Product Owners the responsibility of setting priority  but has little to say on how they arrive or justify that priority   At a very high level  as summarized in this McKinsey article by Rumelt   the components that are necessary for a good strategy includes the following   If you have an hour  or 30 minutes at 2x   he has a presentation about good bad strategy and the kernel here   The next issue is whether your strategy is a good one  For that  I can t say enough good things about the Richard Rumelt book Good Strategy  Bad Strategy   It is an excellent primer on strategy itself and how to avoid the pitfalls that many  many  people have when creating their strategy   How do we keep surviving  This is the most difficult question for startups or groups that are battling inside a large organization   John Boyd   was a great military strategist and great granddaddy of agile with his invention of the OODA loop   His presentation of   The Strategic Game Of   And      has the most succinct answer   Strategy means a lot of things to a lot of people  I try to not be too pedantic about it  but there are a lot of wrong definitions   This is why we created a method to quickly discuss and align on strategy  This method can be used as a jumping off point for further discussion throughout a product or organization  We call this tool the  Strategy Kernel Canvas  and think it can help you   At Philosophie   our product teams excel at quickly building the right things for our end users  but we often struggled executing towards strategic alignment   These feelings point to the lack of alignment between stakeholders and the agile team  The key to this is a good strategy  well communicated   Have you ever felt like your agile team is getting a lot done  but not moving anywhere  Do you  your management  or your clients think the team is going in the wrong direction  When you hear how a decision is made it isn t aligned with how you would have made the same decision   PDF available here   Before  now  and future  You will notice that there are really three major horizontal sections  before  now and future  The main strategy components are within the now  This is because the strategy that you have is really about how you link the high level to now   Top  high level  to bottom  day to day   It is meant to be read from the higher level view at the top to the nitty gritty at the bottom  As you read from the top to the bottom it should make sense and feel linked  If you feel there is a break in the chain then you missed a step in translating from high to low level  or visa versa    History  Complex systems  like our teams  are sensitive to initial conditions  This makes the history of the team very important  Why are we here  What did we try already   In the case of Uber  they started in 2009 as an iPhone app in San Francisco for hailing black car limos  This was to address issues that people had getting a taxi in parts of SF  It could be horrible  I know  I lived there for 13 years  The history for Uber would include this story and other milestones or business changes over the years  e g  funding events  country launch events  major protests   It would end with a summary of their market position as it is today  e g  live in 58 countries  valued at over  41B    Diagnosis  It is the big challenge that you are addressing with your organization and doesn t assume any particular solution yet  The most common concern for the diagnosis is how wide in scope should it be   Looking at Uber again  what is their diagnosis  It has definitely changed from the main problem in 2009 and grown to something much larger  Today passengers are frustrated dissatisfied with the lack of clarity  efficiency  options  and accountability in local transportation services   Guiding Policy  Your organization s secret  There are potentially other organizations that will be addressing the challenge that you wrote in the Diagnosis  How are you special and have an advantage over those other organizations  The guiding policy is found by an abductive process and potentially adjusted as more is found through agile iteration   How does Uber address such a large challenge  They do so by creating a more transparent and liquid marketplace where drivers and passengers can find each other real time and reduce overall costs   Bets  The important link from the Guiding Policy above to the day to day Actions Process below  What are the main hypothesis your organization has that you are actively working on  In the parlance of Cynefin and SenseMaker these are safe to fail probes that are you currently working on  You should be rotating in Bets as you validate invalidate the current set of Bets   Uber s Bets could include that drivers don t need to be employees  no pre scheduled trips  now allowed   network effects matter  people think about ordering food from the same app they get rides  so far unsuccessful   etc  Uber is a really large company so there are some Bets they are constantly tweaking and validating and others that they are rotating through as they fail   Bet Against  What you assume isn t right about the world or that doesn t really matter to your success  but others think is   Uber s big Bet Against is that they can ignore local transportation regulations   Actions   Processes  What the team are doing day to day to make the strategy happen  I include processes in this space since they have an impact on how a project moves forward and can change how the people you are building for experience your product  Weekly sprints with CI CD would be something I would put in this section   Uber s Actions and Processes can be seen in what they implement in public so far  This has included   Apps for all platforms with GPS to book rides  Buzz marketing to capture the attention of passengers  High bounties on new drivers that are disgruntled taxi black car drivers  Cashless payment   also tipping and other fees should be hidden from the customer  A marketplace needs to be managed for liquidity like a marketplace   thus surge pricing  Rating of drivers by passengers  and visa versa  will keep the best drivers in the market and kick the bad ones out  Pay for new users to the service  not per ride as exposure is most important in new markets  Run each city country as a separate office to adapt more quickly to the local conditions     The list goes on from here and is changing constantly as they try new Bets   Success   Survival  The upper and lower bounds of how the organization can continue to exist  How will we know that this strategy is being executed properly  How do we know it is a good strategy  What is the bare minimum for our organization to continue to exist   For Uber to be successful they need growth to keep marketshare and to have a functioning marketplace  Fluid marketplaces need the number of suppliers and number of consumers to be equal as much as possible with the ability to easily transact  As you get further and further away from equality the marketplace suffers  They are also looking to replace any other transportation services for the rider   For a minimum bar they need to see that a marketplace can be functioning against competitors and in the regulatory environment  This is probably why they made the decision to sell their China branch to DiDi Chuxing   Questions from workshopping the canvas  How do I decide what the scope of the Diagnosis is   I have found that it really depends on the stage of the organization   For startups  it is a very narrow challenge that they are trying to solve  Or at least it should be   For a group that is within a larger organization  we should assume there is a certain overall organizational challenge  It isn t always helpful for the group to rehash the particular transition from high to low level from that point  The Diagnosis should be why the group taking the strategy exercise exists within the larger organization   For consulting groups  it is really all about the strategy of the engagement  Once you understand what the main challenge is you are doing everything you can in the engagement to address it   What if I start with a lot of current Actions  Or just a Bet   When dealing with something lower level that you want to understand at a higher level you can use Why Laddering   You have gone too far in  why  laddering if you hit the equivalent of reality bedrock  As in  things are the way they are because the laws of physics apply  Interestingly this is what Elon Musk uses this as his basis for understanding what should and shouldn t be possible with the first principals method   CFAR has started work on a method called Double Crux which is a more structured way to do Why Laddering  I m very interested to see how this can help in these cases   What if I have problem breaking the Guiding Policy into Bets  Or Bets into Actions   Do the opposite of Why Laddering  which is How Laddering  This is very similar to  How might we   questioning   You have gone too far in the How Laddering for the Strategy Kernel Canvas if you are starting to plan individual tasks for someone  This should be left to whatever agile planning process you have   How often does the Strategy Kernel Canvas need to be updated   Whenever one of the sections changes  Especially the Bets   Divergence or a break in the chain from the Diagnosis to Actions is the most important thing to look for when performing a regular audit of the strategy   Should I do this instead of other canvases   No  the Strategy Kernel Canvas doesn t replace other canvases and the benefits they individually bring in workshopping  visualization  and documentation   I find that doing a Business Model Canvas  or a Lean Canvas if you prefer  and Rich Picture help set the stage for a great Strategy Kernel Canvas   You should display the Strategy Kernel Canvas for everyone to see where you would post other canvases   Align your agile teams with the strategy before you have a problem  Strategy that isn t communicated effectively in an organization is one that exists independently in each person s mind  Until you have alignment across your organization you will continue to have agile teams that go off the rails   Appendix  resources  If you would like to see the first talk I gave about the Strategy Kernel Canvas at a Product School meetup  you can watch it here    How to build a strategy in an agile environment  talk for The Product School  The slides and links referenced are also available online   If you have any questions  are interested in a Strategy Kernel Canvas office hours  or want to hear more about what Philosophie does please email me at chrisbutler philosophie is,"[1133 168 906 220 742 1339 655 17 1030 1061 962]"
1146,training-dataset/business/1228.txt,business,People leave managers  not companies  Don t let that manager be you Just look at the data to see where managers are laying blame  A survey of 5 247 hiring managers who d hired 20 000 employees said that after 18 months  46  of newly hired employees  failed and only 20  achieved success   Yet few managers ask themselves the hard questions  Am I the reason people are leaving  Was it because of something I did  or something I didn t do  In my experience  managers suffer something akin to the Dunning Kruger effect   They assume they re not the problem  but that their employees are   The data suggests bad management is a real and significant issue  According to a study by Gallup   one in two people admitted to having left a job to get away from a bad manager  In fact  70  of the factors that contribute to your happiness at work are directly related to your manager   Do people really leave managers  rather than companies  And if so  how do you fix the problem   And what was the biggest takeaway for managers interviewed  They needed better interview processes to weed out the failures before they got into their teams   To any rational person  this makes no sense  The common denominator isn t the 46  of employees  It s the managers  Is the problem really that half of the people couldn t learn or care about their new job  Or was it that a smaller number of managers overestimated their own abilities to teach  connect and inspire their new hires   I ve led teams of engineers for almost a decade but when I look back at my own management career I regularly thought I was a  good manager   at times even a great one  I attributed any problems I encountered to the people I managed rather than myself  Looking back now it s clear I was actually a blindingly naive  over confident  under skilled  inexperienced manager who made lots of mistakes   This management overconfidence is a trap I see many other falling into  but thankfully it can be avoided by following a few of the steps below   1  Always ask for advice  As a software engineer  no matter how senior you are  you always seek code reviews before deploying new code to production  YOLO code changes are only for emergencies     The same is true for managing people  You should always be asking for peer review on a people management problem before you take action  whether that s from your own manager  your HR team  etc  The bigger the potential consequence of your action  the more thorough you should be about getting help and peer review before making it   When I have a performance review to write I talk it through with my peers or my boss before delivering it  If I have someone on my team who s not performing as well as I d like I ask for help on how to coach them differently  You can do this for pretty much everything  people related or not  and have a better outcome as a result   Once you think you ve really nailed your management skills is when you re at your most vulnerable to failure   2  Don t blame  own  Ownership is one of our engineering team s values and it applies equally to managing people as it does to engineering  It s not in our culture to say  that s not my problem  or  that s not my fault    Yet as a manager it s all too easy to abdicate responsibility and blame the person on the other side of the table when they are not doing as well as you d like  The fact is every person you manage is different  Just because one management style worked with the previous three team members and it s not  working  with the person in front of me doesn t necessarily mean it s their fault  Like a good sports coach  managers aren t judged on the performance of individual players  but the team s effort  So the onus is on you to make sure the right management style is being used for all of your team   I have to constantly check myself to make sure I m taking ownership for the relationships in my team and help do everything I can to make things better  Instead of assigning blame to others when things go wrong  I try and figure out out my own role in the situation  What are the things that I have done  or not done  that have contributed to the problems at hand   If I have any trouble identifying these  I go back back to step 1 above  and ask for advice from my peers  Often after doing this exercise I discover the right next step is not to give  constructive feedback  to someone on my team about their mistakes  it s to get feedback on how I can better support them in future   3  Give feedback with empathy  Giving feedback is your most powerful tool for growing your people and your team  It s also one of the hardest to get right  Do it wrong  and you ll turn your most proactive tool into something that causes unwanted collateral damage   Before I deliver any feedback I set aside some time to understand how the other person might receive the feedback  Is it likely to be high fives all round  Or might they feel hurt or upset  Try to pay particular attention to the wider implications of the feedback you re giving  Candid feedback could be motivating for a seasoned engineer looking to step up to the next level  but crippling for a recent hire who s finding it hard to settle in  Don t give feedback in the moment if the tone or timing isn t right  Use your emotional intelligence and empathy  You can always save your feedback for another time  and a more private or less stressful setting   4  Savor your success  One of the best things about being an engineer at a startup are the feedback loops  You can prioritize  design  build  and ship into the hands of users  all within a week  often even a day or two  These feedback loops are fuel for your team s morale  they have a positive influence on your team s productivity and power each team member s happiness and job satisfaction   Unfortunately it s easy for managers to get caught up with looking forward all the time  Or to focus exclusively on problem areas  When you do this it s easy for your team s shields to drop  They feel unvalued  like just another cog in the machine   So make sure you celebrate your team s success and make sure team members know they re having impact  You don t have to hang bunting from the ceiling  It could be as simple as giving someone detailed  timely feedback on something they just did really well  passing along some positive feedback you received from your boss about your team s recent work or calling someone s work out positively in a Slack channel   Great managers build great companies  When you stay humble  ask for advice  own rather than blame and give feedback with empathy  you re on the path to being a good manager  But as we ve seen  success as a manager breeds complacency  and it s all too easy to fall into bad habits of overconfidence  Once you think you ve really nailed your management skills is when you re at your most vulnerable to failure  You need to constantly revisit what it takes to be a good manager  or risk losing your best people for good   If this sounds like a management philosophy that you d like to live and work by  we re hiring a Software Engineering Manager in Dublin,"[1146 17 315 390 391 76 375 1030 1154 1061 363]"
1151,training-dataset/business/744.txt,business,ProductSF 2016   Greylock PerspectivesIn my time at Greylock  one of the things I ve been most excited about is building a strong community of product builders across our network  In my 10  years as a product manager  I realized that I rarely had a chance to connect with product managers and leaders from other companies and learn from them  One of the things we ve done to improve this was create a product community   a group of product folks who meet quarterly to discuss what s working  and not working  on their teams and what they ve learned from it  Another thing we ve done is host  ProductSF  an event for founders and company builders to get to know each other and open a dialogue about how to create better products   At  ProductSF 2016   we invited some of the best minds in product to speak and share both tactical advice and personal anecdotes from their experience scaling some of today s largest and fastest growing tech companies  I m excited that today we ll be sharing these talks more broadly  and the speaker sessions are now available to watch on our YouTube channel   In a few weeks  we ll also make these sessions available on podcast   Below are the talks from  ProductSF this year  Whether you are a PM  founder  or someone who wants to learn more about building great consumer products  I think you will find the content useful and inspiring  Please enjoy   Musical ly co founder and co CEO Alex Zhu takes us through his journey coming from an enterprise software background to starting an education startup and then pivoting into Musical ly  He talks about how they figured out why Musical ly downloads shot up every Thursday in the early days  and why App Store optimization was a key early growth hack for them  And then we talked about how to build an influencer network   comparing it to planning a centralized economy   My partner at Greylock and LinkedIn co founder Reid Hoffman offers a candid perspective on lessons learned from getting LinkedIn going and then scaling it beyond  He explains why he had conviction for social networks in the early 2000s and gives the scoop on his first  not as successful  startup Socialnet  We then went through how he and his team navigated their financing strategy  and what he did to build his relationship with Jeff Weiner before bringing him on as the LinkedIn CEO   Nextdoor Co Founder and VP of Marketing   Operations Sarah Leary talks about the journey of pivoting from FanBase to Nextdoor  She shares both the emotions and learnings their team took away from the pivot  and how they eventually identified the burning need for a social network for neighborhoods  Sarah highlights the importance of creating a product that is a  need to have  versus a  nice to have  and why it s key to do unscalable things in the early stages of building community products   Pinterest co founder Ben Silbermann sat down with my partner Sarah Tavel to talk about the evolution of his roles as both CEO and product leader at a high growth company  I loved hearing about how Ben has evolved his process around product reviews to ensure involvement with his team  Ben shared how he thinks about distribution  hiring and scaling teams  and what makes a strong product manager   Growth expert and managing partner at NFX Guild James Currier gave one of my favorite talks I ve seen from him  He talked all about growth and implored us to unlearn what we have learned about scaling a business  He provides eight counter intuitive examples for ways to think about growing and developing an early product   Nir Eyal  the author of  Hooked  How to Build Habit Forming Products  dives into the psychology behind building technology that creates consumer habits  He summarizes his four step Hook canvas  Trigger  Action  Reward  Investment  and reminds us that it s not the best product that wins   the winner will be the product that forms the monopoly of the mind   Android is pretty dominant outside the us  We had Google Group Product Manager Ellie Powers share some of the  secrets  behind building and growing quickly on Android and Google Play  For example  Google offers a remote testing feature to try your app across many configurations of Android phones   beats having a drawerful in your office   dScout CEO Michael Winnick shares his eye opening research on how people interact with mobile technology  According to him  an average user touches their phone 2 5K times a day over 90 sessions  while a heavy user can reach over 4 6K touches a day in 300  sessions  Another interesting point  apps owned by Facebook and Alphabet account for 43  of all touches  A lot of interesting data and insight into how often we interact with our phones   We believe Augmented Reality is going to be a massive new platform over the next decade  We wanted product builders to start thinking about the implications  Scott Erickson takes us behind the scenes to the vision and design thinking that went into building Microsoft HoloLens  He demos the many applications that their untethered  mixed reality  technology can have for different industries,"[1151 1061 975 826 1241 39 1030 1220 190 63 19]"
1153,training-dataset/product/878.txt,product,Inspiring Teams with Product Vision67 Flares 67 Flares    In this in depth and inspiring talk  Keela Robinson  Founder and CEO PM Loop  unpacks what vision is  why it matters and how to find it  Crucially  she demonstrates how to communicate and reinforce vision to your team by sharing an incredible 30 practical strategies for meaningfully tying your vision to all that you do  Spoiler alert  it s not in a quarterly PowerPoint presentation   Purpose Driven People  Vision comprises your Values  Purpose and Envisioned Future  Aspiring product leaders take note  knowing your vision gives you the tools you need to inspire your team by telling the story of your product and why it matters in the world  Your best employees   the ones who are committed  high performing  autonomous and who are stewards of your brand   will be purpose driven  They understand where you are going and why you matter  In short  they are inspired and guided by your vision   Lost in Translation  Things move fast in tech and this can undermine efforts to embed company vision  Short employee tenure  team growth  mergers and acquisitions  remote working  lean and agile   all of these can spread your culture thin and make it hard to ensure that your team understands why you re doing what you re doing  You will need a wide range of strategies to engage   and re engage   your team in your vision   What Really Matters   The first step in defining your vision is to determine the values which drive your choices  What matters to your brand so much that you would hold onto it no matter what  With examples from Amazon and Volkswagen  Keela illustrates the concept of values which are synonymous with your brand  consistent over time and resistant to market change   Why Are We Here   Your purpose tells you why you matter in the world  What impact do you make and what gap would be left behind if you shut down  Talk to your customers and ask them why they use your product  And don t just ask it once   keep asking  keep peeling back the layers of their rationale and the motivations in their lives until you find out what really matters to them  and why your product has a purpose for them  For some companies  identifying and talking about purpose is easy  for others it can be much harder  Keela explains that the strongest purposes are closely tied to human needs and demonstrates how  through some thoughtful questioning  every company can identify their deeper purpose   Think Big  Strong vision requires an envisioned future which is audacious  future thinking and customer focussed  Your envisioned future will see many great products come to market  But for now  put down your product  forget your features and instead think about how people will feel and behave in the future because of your brand  And if you re thinking about the future anyway  you may as well think big   Keela shares inspiring examples from Tesla and Kindle   Tell your story  then tell it again   Keela concludes by giving wide ranging examples of how to communicate and reinforce your vision to your employees  From artwork in your office space  to celebrating wins  to writing mock commercials  she shines a light on how to bring your vision alive  to everyone  every day  Your employees really do matter   ultimately your people are your product  Great vision will be inclusive of the whole team  determine their goals  guide their priorities and behaviours  and enable you to build products that people love,"[1153 742 826 120 1030 17 906 955 1061 975 296]"
1154,training-dataset/business/1200.txt,business,A People Ops Veteran on Navigating the Gnarliest ConversationsImagine a colleague sitting across from you  She just got leveled over instead of being promoted into the role herself  She s seething  For months  her manager wasn t open with her about why she wasn t considered for the role and what she needed to get promoted  Instead  he avoided having a difficult conversation and pushed it off  optimizing for his own comfort  And now his report has come to you  the head of people operations  seeking answers or a resolution  What do you say   When you re dealing with people s livelihoods and their egos  tensions can run high  no doubt  But HR is also  in many ways  the beating heart of an organization  it s the only department explicitly tasked with making every team member more successful  People ops leaders are in fact uniquely positioned to foster a culture of authenticity a critical precursor to the agility successful startups demand   That s how Meg Makalou sees it  And as a human resources leader for startups big and small from a four year stint as Zynga s Vice President of HR during a period of hypergrowth to her current role as chief people officer for The Climate Corporation she s navigated her fair share of gnarly performance conversations  Makalou also is the people ops expert in residence for First Round s companies   In this exclusive interview  Makalou looks at three of the toughest conversations an HR leader faces  and explains how to take them from adversarial to mutually beneficial  She shares tactics for catching the most challenging performance problems before they start  And she makes a plea for the patience and clarity that Silicon Valley too often lacks  Let s dive in   Managers  your lot is the easy and hard conversations  If you value your comfort over your team s success  you are in the wrong job   THE THREE THORNIEST PEOPLE OPS CONVERSATIONS  Delayed terminations  Companies outgrowing senior leaders  Compensation rumor mills  These challenging scenarios can perplex even veteran HR leaders  While it may sound basic  the key to all of them is to find the entrypoint to bolster relationships  because the harder the situation  the more challenging it is to find it   I find that I get the best results if I come from a place of support and candor   says Makalou   I encourage anyone in an HR role whether you re the first people ops leader in a startup or a founder who s pinch hitting for now to focus on building trust    What follows are three of the biggest challenges HR leaders face and the mindsets and tactics that will chip away at them   THE CHALLENGE  You ve known that things weren t working out with a team member for over a quarter now  but avoided dealing with the problem  Now other people have noticed  too  and morale is taking a hit   If you re experiencing this one  take heart   It s very  very common   says Makalou  Simply put  it s hard to tell people they re not doing well  most people dread that conversation   Really seasoned executives need support to get it done  and get it done well  It s even trickier for startup leaders  because no one really teaches a class on how to performance manage and potentially fire someone    Makalou recalls working with the CEO of a young organization who faced this archetypal startup challenge  Manager is hired on the basis of relevant experience  a strong resume and good interviews  Despite leadership s high hopes  manager doesn t get after it the way the role demands  CEO is slammed  so he puts the problem on the backburner   The leadership team had a million things going on  as people in startups do  and so it didn t become a priority to address this issue  It s also naturally something many avoid because it s a difficult conversation that could be confrontational    Two things happened next  One  because the underperformer was a manager  his reports grew disillusioned  Several had raised concerns and seen no changes   You had people who were brave enough to say something about having a manager they were struggling with  which was followed with no action whatsoever  It was disenfranchising this whole other layer of the organization   says Makalou   Second  there was the impact on the employee s peers   They were left to think   I m working like crazy  giving everything I have to this startup  because that s what early stage organizations need  and this person is clearly underperforming  Why are they still here     Retaining an ineffective employee is never healthy for an organization  but it s particularly dire for startups  Not only is there the risk of setting a dangerous standard at a time when you can t afford slacking  every underperformer represents serious opportunity cost  too   Founders are spread too thin  You re dying for people to come and take over some of the millions of direct reports that you end up having  So when you get to the point that you re hiring a layer to manage some of that stuff  it s really painful when one of those bets doesn t play out favorably    Get Ahead of the Problem  It s a lot easier to avoid this scenario than to fix it  Makalou s first piece of advice for navigating this conversation is to do everything you can to keep it from happening   Crack what s sugarcoated  Underperformance is often a matter of overstated or misunderstood experience  Mitigate that risk by defining expectations more explicitly than you think you need to from the moment you engage with a job candidate  Spending the time to write a well thought out job description helps   this is an area that many spend little to no time on  This is handy not just for honing in on the right candidate but it also forces you to really think about the full scope of the job and what skills and capabilities you need to find   Once you re getting serious about a candidate  it s time to have an honest conversation about which expectations they re comfortable with  and where they might need some extra support  And that s a two way street don t give into temptation to sugarcoat the role  If you know there s a particularly difficult element of the job  you might even go so far as to spell it out    I m in the business of trying to make people feel comfortable being upfront  because my job is harder if they re not   says Makalou   And I need to do the same myself  The worst thing that can happen is that we re not forthcoming with each other I misstate expectations about this job  you leave  and we ve wasted each other s time    Onboard your people into your industry   not just company  You probably know the basic elements of good onboarding  integrating new hires into their team  introducing them to people who will have helpful institutional knowledge  sharing your company s values  But it s also critical that you teach them the ins and outs of the space you serve   Don t miss the opportunity to develop  right out of the gate  each new hire s business acumen about what exactly the company does  It helps put everything else into context    So often onboarding is about institutional   not industry   knowledge  Don t make that mistake   At The Climate Corporation  for example  that takes the form of an immersive two day class on the basics of agriculture  The average software engineer knows little to nothing about growing crops  But once they ve gone through the exercise of running an imaginary farm from buying a tractor to dealing with uncooperative weather they are much better positioned to develop the products their end users need   In other spaces  your training might be even simpler  Makalou was previously an HR manager for Andale  which developed auction management tools for eBay sellers   Munjal Shah  the CEO at the time  knew that people needed to get what we were doing as a company right off the bat  so he required that everyone sell something on eBay  It could be things that we had in the office  You didn t have to go find items  but you had to experience being a seller on eBay and what that required    Be visible  But the HR leader s work is not done when hiring and onboarding are complete  or  really  ever   To spot performance problems before they erode team morale  you need to stay engaged and observant  In smaller companies  that might be as simple as making it to happy hour from time to time or swinging by people s desks for casual chats   As companies get larger  pay attention to the energy of any team integrating a new manager   One of the things I like to do is round up with the team and do new leader assimilation   says Makalou   We get everyone together so they can ask questions of the new manager to get to know them  For me  facilitating something like that gives me a sense of the dynamics in the room    Ultimately  though  emotional intelligence is often your most powerful tool  You don t have to be an HR professional to know when you walk into a room and something s not right  It s okay to weigh different people s feedback differently  too   It s not that you want to read into everything people are saying  But if you re doing a check in and somebody who s normally quite reticent discloses a little more than they normally would  listen to that    When you do catch wind of a problem  whether through your own observations or others   sit down with the person in question right away   Your first conversation doesn t have to be disciplinary  but it can be a really candid one where you say   Look  I care about your success here  so I m always going to be honest with you about what s going well and what s not  Part of that is to help you be successful  and part is to hear from you where you need support   I get the best results when I approach people from that standpoint   says Makalou   When Problems Arise  Troubleshoot First  Realistically  though  it s not always possible to avoid performance issues before they start  So what do you do when a more advanced problem lands in your lap   Initially  Makalou recommends patience which is hard to come by in a company s early days   I find that in Silicon Valley we re quick to give up on people  When you re in hypergrowth or you re in crazy startup mode  working more than you should  it can be really hard to take the long view on people  The default becomes   I just don t have time for that     Don t forget  you hired this person for a reason  Patience  though  isn t leaving a problem unchecked   To diagnose the root of the issue and look for paths to a solution Makalou walks managers and CEOs through three questions   1  What s not working  specifically   Start with this straightforward query for two reasons  One  to get managers thinking in an exacting way as early as possible about where the employee is falling short  And two  because people ops leaders often have information to share that would help explain the dissatisfying performance    Not all information gets to the founder or CEO  as you can imagine  I might be able to add context that changes their point of view on whether this person is the problem or a different set of forces is acting on the situation   says Makalou   2  Is there another role in which this person could be successful    Hiring people is time consuming and expensive  If you could recast them into an existing position now that you know more about them and their skill set that s worth considering    This advice doesn t just hold true for new employees  existing team members who are outgrowing  or burning out in   their roles may also be good candidates for an internal move   3  Do you think that there s something we could do for or with this person that would help   When it comes to performance improvement plans  Makalou is of the mind that they should be used as sincere tools for improvement not just as a formality when the writing is already on the wall   Performance reviews and performance improvement plans  PIPs  are tools to mitigate risk  I don t necessarily think that you should put everybody through that  because not everybody is high risk   she says   Is there a path to success  or are you feeling like you have to go through this process in order to terminate them at the end  If that s where you are  fast forward to the end and avoid putting everyone through that process    In some cases  the question is less about can a person change and more if they want to  So if you re not sure  ask  Be direct  Candidly address where their performance falls short  and give the employee the choice to work on it or not   I usually say   Look  if you still have the energy and are excited about this opportunity  we ll head down this PIP path  This is not a construct that we put in place so that we can fire you at the end   says Makalou   It is genuine effort to help you  to get you on a path to success  and you have our commitment to do that with you  But if you don t feel like you have it in you or you don t feel like you could be successful  door number two is a conversation about how to gracefully transition you out of the company    End Things with Care  At the end of the day  termination can be inevitable  Whether a PIP doesn t work out or the employee declined or wasn t offered one some scenarios will end up at that difficult conversation  Here  too  there are a few critical steps you need to walk through   First  assess your risk  legal and otherwise   Is this someone you are afraid might do something violent or disruptive during the meeting  Nine times out of ten  the answer is no  But there are those people  There are those types of terminations  Think about it before it s happening to you   says Makalou   Choose the timing thoughtfully  Makalou recommends having the termination conversation either first thing or at the end of the day   You should do it with dignity and that s not somebody needing to pack up their stuff in front of everyone  It s just not    Keep it brief  At this point  the time for feedback and give and take is over  now  the conversation is about notifying an employee that he or she is being terminated   This is a decision that s been made  This is not the time to litigate whether it s happening or not  It is happening   says Makalou   That s not to say that people won t push back and up to a point  let them   Let them vent a little bit  then come back around to your message   I understand that  I know that there have been challenges on both sides  I understand this is not an easy job  but it s just not working  You need to move on to a place where you can be more successful  and I want to help you make that transition  But this decision has been made     Remember  everyone s watching  The terminated employee will walk out the door  but the rest of your team will not  Be mindful of the messages your words and actions are sending them   They re going to take this as how the company treats people  That s true of layoffs and voluntary terminations    Finally  don t forget that the manager doing the firing needs extra care  too   In preparation for the termination  that leader gets a ton of support and check in from me   says Makalou   I tell them   Call my phone any time you want  We will rehearse this as many times as it takes to make you comfortable     Meg Makalou  THE CHALLENGE  The company has grown beyond the leadership skills of one of its cofounders  and it s time to bring in a seasoned executive  Trouble is  that cofounder is resistant to stepping aside   Startup founders are often inexperienced that s part of the mythology  after all  But once an organization has developed and validated its big ideas  and it s time to build the team that will help it scale  inexperience can be a liability    It s a tough sell  convincing an experienced professional to come work for someone who s navigating their first gig   says Makalou   That sell is made easier when the founder is self aware about that  and when their heart is in the success of the company not hanging onto a big title or a position of control  It s hard when the founder s stuck on  No  I m the Chief Fill in the Blank Officer     Here  too  addressing the problem before it even arises can make all the difference   and provides a reference to point to for future difficult conversations   I would advise any founding team to have a discussion about how they ll handle each other when it s time to rethink their company s leadership  It s healthy   even imperative   to sit around the table and say   Look  few of us have ever done this before  If we want this to scale according to our vision and fulfill what it can be to the world  we have to understand that we may not have these seats all the way through   Still  relinquishing control is easier said than done  But while you can t lean on hierarchy or PIPs in these cases  you do have another tool at your disposal  the founder s legacy   It s remarkable to be the founder of a company that turns into something great  A legacy like that is much more important than being the VP from start to finish  Appeal to that   says Makalou   Say   You will always be breathing rarefied air where this company is concerned  because you thought of it and you built it  Don t compromise that by getting hung up on title     Your goal as a people ops lead  or as a co founder  is to help this leader see a critical fork in the road  Down one path there s a role as adviser  thought leader  cultural icon   Even if they can t manage a team  there s a role for those kinds of innovators as a company grows   Moreover  bringing in more experienced leadership is an opportunity  and a relatively low risk one  It s a chance learn a new skill set from seasoned pros  and get set up to keep the reins the next time around   You get to be a critical person in the company  but you don t have to be ultimately responsible for it    Down the other path is  well  nothing   There s not a role for a founder that can t get out of their own way and is actually slowing the company down  Those people get fired    Here  too  there are key steps that the rest of the leadership team should take to facilitate the transition and mitigate its effects on the rest of the company   Choreograph the conversation  When the time has come to ask an early leader to step down  don t skip the thoughtful planning you would do for any employee  a founder deserves that same sensitivity   I always assess the context and relationships  What is the scenario where this person will likely be most receptive and feel most supported  and most open   The best person to deliver the message may be a cofounder  Other times  particularly if there s been tension in the leadership team  the people ops lead may offer the best mix of authority and neutrality   Communicate the change directly   and with sensitivity  Founders and early leaders are much more than managers  They are typically a startup s heart and soul  They ve established its mission and crafted its culture  In many cases  other employees joined the company to work with those specific people  Keep all of that in mind when you communicate leadership shifts to the team    There s going to be scar tissue  And there are considerations around the dignity of the person who s leaving and not saying too much  too  You don t want to sit down with everybody and say   Look  he just was really bad at his job in the end   In fact  that could actually be more harmful because the reaction could be   That s somebody I really love and care about and respect  and now you re kicking them while they re down     Reconnect and rebuild  After the announcement  maybe a cursory Q A session  many organizations try to go right back to business as usual   People just throw their hands up like   No one asked questions  and I don t really know how else to manage the situation  Maybe if we get back to work  the scars will heal over    In Makalou s experience  though  the best and fastest path forward is to allow for a grieving process   Give people the space to acknowledge that a core person is gone    Enlist and empower managers to provide the outlet their teams need  Maybe that s one on ones with everyone  or simply giving people license to express sadness or disbelief  It might also be getting together for a fun offsite activity  in a smaller company  you might get the whole team together to bond over dinner or an outing   But whatever you do  you ve got to create some space to reconstitute  That usually starts with a bit of grieving and then a concerted effort to spend time as a group and knit the team back together    People will get over it  and the company will emerge stronger  It s when you force the team to move on with unnatural speed  Forget about last week   that damaging stress fractures form   Fill the gap  The now missing founder s skill set may not have been quite right  but no doubt they still brought a lot to the table  As you move on from a leadership shakeup  you need to find a way to replace the vision or charisma you ve lost   THE CHALLENGE  One of your team members didn t get an expected raise or got wind of someone who did and they re frustrated and confused   Once again  preventing this conversation should be your first line of defense  And when it comes to compensation frustration  Makalou s advice boils down to one simple preventive measure  transparency  But it takes tactics to establish it    Whatever your strategy for considering promotions  comp changes  things like that  be open about the process you re about to go through   says Makalou   Don t let it become a black box where people hear through the grapevine who got what    When people don t know how the review process works  they ll mostly fill in the blanks with something bad   Define Your Compensation Philosophy  Compensation is too often shrouded in mystery  Setting and managing it is a skill set  to be sure  and not everyone can be an expert  Everyone can and does  though  have real emotion around how their time and work is valued    No  you re not asking everybody to be a comp professional  but they re not dumb  You could certainly explain how you benchmark jobs  How you think about skill sets  How you price roles when you review employees  compensation  What are the things you look at    For an early stage startup  that exercise often feels like a waste of precious time  The important thing is simply to compete in the talent market  right  On the contrary  it may be even more important to establish clear compensation parameters early  when the frenzy to get people in the door can lead to inconsistencies that fester later   A basic comp philosophy can be a good half step before setting the  official  policy  Otherwise you ll find yourself tangled in a string of one off offers   As a founder  you know you need to have a mission statement  a vision statement  goals and objectives  But a comp philosophy  In Makalou s experience  a coherent strategy for how employees will be remunerated should be added to every startup s list of crucial founding documents  As you draft yours  address questions like   When it comes to salary  how competitive do we want to be   Where is the type of talent we re looking to attract currently working and how are they being compensated   What behaviors are you trying to drive and reward   How do we want to handle equity  Will you offer options and RSUs  and who gets what   How do we feel about shoring up a gap in salary with more equity   Do we want to have a bonus program   Realistically  startups will incur compensation inequities in the early days  That s all part of the risk reward structure of new ventures  and it would be a foolish proposition to smooth that out entirely   If you were employee number 7  you probably have a lot more stock than employee number 100  You re not going to go take that away from employee number 7  and you re not going to give those big grants to employee number 100   says Makalou  The goal is  as early as possible  to agree to a strategy moving forward that will avoid adding unnecessary lopsidedness   Fight Frustration with Education  Once the comp philosophy is in place  educate the rest of the company about it  starting with managers  They don t just need to know it  they need to know how to explain it to anyone who s asking very possibly under duress   Really spend time saying   Okay  this is what we decided  This is how it works  This is the data we use  We use the First Round survey for our comp data  or we re going to buy Radford   Whatever you use  explain that to anyone who s going to own the decision and the managing of it    Create a cheat sheet  This process can be as simple as building a tool in a spreadsheet  Just give some thought to the resources a manager would need to execute this part of their job   It s not humane to take a bunch of managers and say   You re going to have to handle making and defending compensation decisions  but I m not going to tell you anything about how it works    Establishing a clear compensation philosophy won t eliminate questions  employees may still feel like they are due something more  But it will go a long way to defusing frustration   Anchor to the market   One of the conversations that we often have after a performance review is   I ve been here a year and I didn t get a raise  What s up  How do I get one    says Makalou   In general  you can solve that with education  Say   Look  here s what the market rate is for what you do  Here s the research we use  Here s the data we use  Here s what it says about what you do and what the market pays for what you do     Zoom out from job to career  Armed with a defensible methodology  pivot the conversation from an emotional one to something more productive  It wasn t a reflection on performance  or on the employee s value  They simply didn t meet the stated benchmarks for a promotion or raise  With that matter set aside  you can and should then engage in a dialogue about their interests and career path   You can say  directly and authentically   What do you want to do next  I want this to be a great career choice for you     A manager on Makalou s team once had this conversation with a full cycle recruiter  She was very smart and capable  but not as adept at interacting with candidates and digging in during negotiations   He sat down not to talk about her performance  but her career  We could be more candid about the mismatch in her skills and current role  when we took a broader look at her career   says Makalou   As it turns out she was a superb sourcer  She excelled at finding candidates for hard to fill roles  so moving her into that role was a smart choice for her and more beneficial to the organization    Establishing a culture of honesty and transparency is often more demanding than not  it s certainly more time consuming  But push through to the other side  and you ll find your organization freed to more candidly pursue both individual and collective goals   There s nothing gained by creating mystery or not sharing what your motivations are  No one benefits from employees feeling like management philosophies are locked away in a black box    Bringing it Together  Stony faced execs across a conference room table  or a dejected employee toting a cardboard box full of personal effects  The popular conception of what an HR conversation looks like is grim  to say the least  But it doesn t have to be that way when it comes to tough HR conversations  First  don t postpone a potential termination  Get out in front of it with a more immersive onboarding to the industry   not just the company  Don t forget that you hired the person for a reason and that the fit of the role may not be the same as fit for the company  When thinking about succession plans for unwilling senior leaders  appeal to their contributions thus far  the promise of the company and their legacy in it  Lastly  define and socialize a basic comp philosophy instead of waiting to put a formal rewards program in stone  Zoom out to the broader market and a team member s career to handle any job discontent    People operations  Talent  Human Resources  No matter what you might call it  the function takes care of the engine of any organization  its people   says Makalou   I suppose that makes the HR leader the veteran mechanic  As such  she knows that any vehicle can stall and sputter  but with the right parts and frequent check ups  it can handle obstacles on the road and each hairpin turn  For startups  growing a company brings with it the pleasures and perils of a long road trip   make sure your engine is ready to take you where you need to go    Photography by Bonnie Rae Mills,"[1154 1061 17 19 190 120 1146 962 644 826 391]"
1178,training-dataset/business/794.txt,business,Lies Managers Tell Themselves to Avoid Firing SomeoneLies Managers Tell Themselves to Avoid Firing Someone  There are four lies managers tell themselves to avoid one of the hardest conversations in business  Things will improve  Someone in the seat is better than no one in the seat  Let s transfer the person to another team where things might improve  The termination will hurt morale in the company or the team  I ve told myself all of these in the past  What s the best way to move past these and execute the difficult task of letting someone go   When I moved to California  I worked for Kim Scott at Google as my first job  Kim has an impressive career from working in the diamond industry  to starting a company in the dotcom era  She became a director at Google  taught at Apple University and advised companies like Dropbox and Twitter   Kim s most impressive characteristic  though  isn t her resume  It s her relentless pursuit of becoming a better manager  and her willingness to experiment with management style and empower her teams   That s a great idea  You should do it   was one of the most frequent replies in meetings with Kim   Once  Kim emailed the AdSense team an article from HBR about the importance of creativity  and a short time thereafter  she rolled out software to collect ideas from the entire team  She appointed an Ideas team  At some point  I was part of it  We prioritized different efforts that ultimately had meaningful impact on the business  Kim had figured out how to empower at scale  But it all started with empathy for her team s ideas to improve our operations   The four lies we tell ourselves about firing people above originate from Kim s book  Radical Candor  Kim s advice for firing people underscores her compassion for people in her teams  You have to embrace the pain that the person will feel  help them come to terms with it  and point them in the direction of something that might be a better fit for their development   Radical Candor s central theme is how to deliver difficult guidance to team members with empathy  Management is an art  a blend of chemistry and style  But the book distills that complexity into three frameworks to help managers lead teams empathetically through direct feedback and encouraging open critique   I know that sounds like an oxymoron  But it s not  It s the most effective way to lead that I ve experienced  and the best way to cultivate a team  It all starts by being honest and setting aside the lies we tell ourselves to avoid having hard conversations   Published 2017 03 22 in management,"[1178 1146 390 17 1061 866 1385 1030 391 315 120]"
1195,training-dataset/business/1058.txt,business,The Rewards of Creator Driven Cultures   And The Engineers That Can Deliver ThemIf Lou Montulli could pass along a maxim for the modern software engineer  it wouldn t be from Steve Jobs or Elon Musk  He d invoke a line from American poet Walt Whitman   I am large  I contain multitudes   In the decades since becoming a founding engineer at Netscape  Montulli has seen many founders grow into CEOs of companies and product managers become de facto CEOs of products  Yet with developers  he s seen a drive toward specialization that sequesters them  In pushing forward a practice to build modularly  many have become contained themselves  Engineers should be known more for their expansive   not expensive   skill sets   An engineer himself  Montulli came of age among developers who aspired to be polymaths  He did some of his most lasting and inventive work as an engineering jack of all trades  Montulli developed two of the earliest web browsers  Lynx and Netscape  as well as browser innovations such as cookies and Fishcam  one of the earliest live cameras to broadcast online  His contributions lead to foundational elements of the web  including SSL  Javascript  and CSS   all of which he developed alongside the early engineering team at Netscape  He also held engineering leadership roles at Shopping com and Shutterfly before becoming a serial founder   In all these roles  he s built and benefited from what he calls a creator driven culture   the same environment that he s currently seeding at his new company  JetInsight  an on demand aircraft charter marketplace  In this exclusive interview  Montulli dissects a creator driven culture and outlines the elements needed to cultivate it  At the heart of its success is a specific class of engineers  programmers who are driven   and have the latitude   to work outside their functional jurisdiction to build products  Any startup in its early days of building its engineering team will benefit from the advantages of this development culture   Distribute The Problem  Not The Product   If there is one linchpin to a creator driven culture  it is the relentless practice of distributing a problem across more people  not just the product features that address that problem  It may seem like a subtle nuance  but the outcomes can be profoundly dissimilar   It s the difference between giving someone a jigsaw puzzle or a blank canvas  Even if both capture the same scene  the process and end results are distinctly different   says Montulli   In the first case  the parameters are set  the challenge is about execution and assembly  In the second  framing and addressing the task is as creative as the outcome itself  In this case  you ve been moved closer to the problem  not just charged with assembling the solution    In the context of software  the parallel holds   Creators need to avoid becoming just implementers  for the sake of the product and their own development  For example  it s easy for engineers to slip into thinking their goal is improving ad impression efficiency a quarter percent every quarter  when it s actually about delivering a better product experience   says Montulli   The way to avoid that regression is to create an engineering environment in which developers frame their work on a product level  not a feature level  But day to day deadlines and defined tasks can eventually bring them back into the weeds  So the key is to start them off with a part of the problem that the product addresses not a part of the solution that will solve it  A leader of a creator driven culture will continuously remind her engineers of the problem and bring them back to it over and over    Without this active mindset  a typical engineering culture manifests  especially as a startup grows  Problem level questions  which take an issue head on  eventually consolidate into fewer and fewer people  Most will cite scale  but it s a tradeoff   conscious or unconscious   that s to the detriment of the product   What happens is that one person becomes responsible for making a product great  so only that person thinks deeply about the problem it addresses  Engineers are then assigned to help code for that person   says Montulli   Not only is that not fun  but not the most efficient way to build a product over the long haul  What s more motivating and effective is to break up the problem that the product s addressing into different areas of responsibility  By collectively attacking it on the level of its problem   not the feature   engineers are more empowered and engaged    Mosaic of Lou Montulli  The new PM in town  While the concept of a product manager is familiar  Montulli prefers to groom a different kind of PM  a problem manager   It s not a formal title  but the way I like to think of the type of engineers I want in my organization   he says   I base it off how I got started with Lynx  I began building it on my own  so not only owned the full product  but the complete problem  It became successful   more than I would ve dreamed  I was forced to take every role  I answered all the emails  did all the packaging  builds  programming and product management  It became natural    Wearing every hat is typical for founders getting started  but the magic happens when this mindset is replicated   versus diluted   when others join in   When we started Netscape  we were a small team trying to create an expansive product  It had a very creator driven culture  product innovations really came out of engineering  We had a strong preference against being delivered features  We didn t have anything against delegation   we each tackled different corners of a bigger problem   but more an aversion to an assembly line mentality   says Montulli   Bring us problems  That s all we asked  and in turn  we d try to come up with really interesting solutions that solved not only that problem  but also a whole host of other problems that users hadn t yet encountered or considered   Optimize for byproducts  How likely will this work spin off something useful for another facet of the problem   Montulli reinforces the practice of problem distribution with everyday tools   When the engineers on my team go into JIRA  they ll find a problem   not a feature   waiting for them   he says   Sometimes there s a potential solution offered  but our default is to have the feature request articulated as a problem  For example  instead of giving a UI mockup image to an engineer and telling him to build a feature  we ll post a problem  For example   Users need to track expenses for pilots  They are currently using paper and physical receipts and need a better way    One problem JetInsight worked on in its early months was a way for operators to integrate with an existing industry database of hotels and rental cars around airports   If we had taken the feature request at face value  we would have worked on a basic integration with the existing database  Instead we zoomed out to take in the bigger problem  information in the database was very quickly outdated  It was simple to use  but was so infrequently updated and only included resources close to airports  which limited inventory   says Montulli   By focusing on the underlying problem and having the technical understanding of the Google Maps API we were able to build a more functional integration using Google Maps  which gave us access to more resources  real time updates  reviews  photos and more  The experience is ten times better than what we would have gotten by using the existing database    In a creator driven culture  problem solvers become problems solvers  Each action can induce many solutions   When engineer becomes creator  The mindset of a problem manager leads to the type of developer who absorbs the practices of a traditional product manager   Another way of thinking of this shift is that engineers absorb the purview of product management  Yes  these are challenging profiles to merge  and  yes  it requires engineers to take on different skill sets  but the effort pays dividends tenfold   says Montulli   First  when your engineers act as distributed PMs  it short circuits the slow  painful and combative exchanges that often happens between PMs and developers  Otherwise  questions morph into extra meetings   Are you sure you wanna do it this way    Why do you want to to do it this way    Let s have a meeting and discuss it  OK     The conflation of PM and engineering roles not only circumvents arduous communication processes  but more importantly gives the engineer an opportunity to address the problem at its source   Some of the most original and impactful ideas I ve helped build into reality   from cookies to the web browser   were ones in which I was exposed to a need early on and imagined what was possible from that point in time   says Montulli   So much is lost in the game of telephone between PM and engineer  Not only in terms of accuracy   some technical nuances may be lost   but also innovation  When the problem has been synthesized into a solution and broken into features on a roadmap  developers are not only two steps removed  but lose the sting of the customer s pain point  That distance is a bad thing    To truly be a creator  the engineer must have skin in the game   If an engineer is forced to develop and deepen customer empathy  you have a developer whose energy goes into figuring out how to build something customer friendly rather than how to move onto the next feature   says Montulli   This shift changes the beneficiary of coding itself  Engineers aren t handing off a feature to a product manager who gets it to the customer  they re delivering it to the customer  one they feel connected to and don t want to disappoint    In a creator driven culture  makers bring their competency to the original challenge   not to the filtered version   As engineers stretch across the value chain  their scope changes from features to problems to customers   Products that engineers use in their own life tend to be better than ones they just develop for others  So  the more they can tap into the customer s world  the better the product will fit into it  Customer visits serve to help engineers build empathy for users of a product they don t use in their everyday life   says Montulli   Set a cadence for developers to monitor and engage with customers  The ideal is to get out of the office and meet them in person  Send at least one engineer with Customer Success to meet your customers  We do that at JetInsight  at onboarding and about quarterly thereafter  In between visits  we schedule sessions with user recording tools  such as FullStory or Inspectlet  to see how customers navigate the product  This is in addition   not in lieu of   engineers joining customer visits    Here s a bit more detail on how JetInsight goes about integrating engineers into customer visits   Onboarding    Engineers rotate in to join a Customer Success person on an onboarding  They can participate  but they should be there to observe and absorb  like a scientist  Key areas to note are how the customer sees the product for the first time  how they work through sending their first outputs and the way they navigate the workflow    Quarterly visits    Even if it takes the whole day  an engineer needs to spend time with customers  In these check ins  engineers should get to know the customer personally  take note of their dislikes as well as preferences and watch them use the product    User Recording Tools   Every week  we use FullStory to take in how our customers use the product  Engineers hear sales calls and demos  which can help with sales automation features and sheds light on the relationship between sales and other functions at a company  Ultimately  it s more of a one sided conversation  but it helps us pick up insights by osmosis and keeps us current between site visits    True creators need to have time with the customer  even if that takes away from a product development schedule   Montulli recognizes that customer facing interactions are not every engineer s strong suit  but to craft a remarkable customer experience  it s an eventual necessity  For those who are reluctant  he tries to ease them in alongside other engineers or employees   If they re terrible at talking to customers  pair them up with another engineer in a visit  As a last resort  they can get that customer perspective by talking to their fellow colleagues and engineers after the fact  They don t have to get everything first hand from the beginning  but that s the goal    Increase Exposure  Not Communication  Creator driven cultures seek to streamline product development by marrying elements of product management and engineering  Yet  there is still a need to sync before conquering problems independently   As a leader  when you enable creators you give up centralized control  Management tends to be very flat in this model  which can be daunting if there are a few dozen problems at any one time that can   and need to be   tackled   says Montulli   We don t want chaos  nor a pyramid model  so the way we go about it is to create relatively frictionless checkpoints that increase exposure of what s in motion  That means that  built into their process  creators share what they are working on with key stakeholders  but that their colleagues also have the responsibility to actively opt in to stay in line and informed    As an example  take one recent problem that a JetInsight engineer was tackling on compliance for pilots   Here was one problem  The FAA restricts how much pilots can fly in a given time period and tracks their downtime between flights  There are complicated rules that every pilot must follow to stay in bounds  While pilots know and stay current on these rules  schedulers might not   says Montulli   Our challenge was to automate the tracking of those rules and tell a customer if they re going to violate any of the FAA regulations for pilot duty time  It turns out this is a big problem  as it requires extensive data input  from the specific minutes flown to flight training and other requirements that factor into these rules    The engineer tackling the problem came up with ideas  shared them internally in person or via a screen share and collected feedback  The cycle happens quickly   often in a few hours   and later with customers by sharing early mockups   Before investing time to build a prototype  fellow engineers and colleagues have seen the problem  framed by many possible solutions  They not only have the chance to comment  but are also exposed to how exactly the proposed solutions to that problem may impact their own   says Montulli   Over those hours  if there s an idea that the creators like  the engineer works on a prototype  If not  it s back to the drawing board  Either way  this process cinches the team together just enough that they can ideate with freedom  but also create in a synchronized way    In this specific instance  the engineer went back and forth with his fellow engineer on a lot of prototypes  but the winner became the next product feature   In this exchange  another engineer realized that it wasn t always clear which airplane from a fleet was actually being scheduled  So  not only did the engineer include the specs of the plane in his prototype  but as a team  we decided it was important to elevate that information into the top of the menu so it s shown on every page   says Montulli   That s the power of exposure  Communication is about sharing what you already know you want to say  Exposure surfaces observations and unknowns    Where exposure falls short  leadership steps in to pick up the slack  For small companies  this may be the technical co founder and for mid sized companies  this could be the VP of Engineering or Product   To be clear  this is not a free for all where engineers can go after any problem they want  It s the job of the engineering or product leader to monitor the mass of problems being tackled and continuously order and re order the most pressing ones   says Montulli   The leader steps in to guide how the problems should stack and sync  ideally in a weekly all hands and reinforced in 1 1s with team members  At JetInsight s all hands  I share all that I know about the market we re going after  the customers we re acquiring and the issues that those customers might face in the coming year  Only with that full context can creators feel confident that they re choosing not only significant problems  but also relevant ones    A Caveat to and Catalyst for Creator Driven Cultures  If this creator driven culture seems most possible and stable in a startup environment  it s because it is   but that doesn t mean that it can t be recreated in a larger company   Just as democracy was in its purest form in city states such as Athens or Sparta doesn t mean it can t exist elsewhere  It s just more challenging  As a group grows  its members become more specialized  which means they operate on only a sliver of the problem  That s why I ve had the most success building creator driven cultures within engineering teams of up to 20 people   says Montulli   After that mark  it becomes more difficult both from a management and execution standpoint  given the balance of latitude and coordination that has to be maintained  I ve seen others break down problem sets in a way that allow 50 100 engineers to take independent action and still have some oversight  But there s no doubt that coordination of releases gets challenging at that scale    The larger the company  the more critical it is for engineering leaders to pay attention to the seams between features and products   It s like going from a quartet to a full orchestra  It becomes more complex with so many elements in motion  which is why more attention needs to be paid to coordinating these distributive creative teams   says Montulli   Challenges usually arise with features that rely heavily on each other  leading to issues of scheduling and API interaction  Bigger engineering organizations are harder to sync because the outputs of these distributed creative teams must land around the same time  You ll never achieve perfection there  but you want to sequence them so they re more likely to deliver at a similar time    One tip is to group engineers by similar problems and product features as both scale   By clustering similar sets of problems   and engineers who are tackling them   you can reduce their reliance on constant communication with their other co creators  In this context  your goal is that they don t need to talk to everyone  but can expose their ideas to everyone  if needed   says Montulli   Modularity in projects and problem sets really enhance the ability for people to work and innovate in independent way and increase efficiency  As Netscape grew  we had to modularize our teams to keep working efficiently  We split on product bounds  like web client and web server  and on the client side by operating system versions  such as Windows  Mac and Unix  It was a huge coordination challenge   and didn t always work  but the times it did is when engineering teams had sight lines into the greater problem  even if they needed to collaborate with other engineering groups to implement the solution  In this case  modularity was better than monolithism   it was the lesser of two evils    What up levels versatility is diversity  Beyond grooming engineers into creators  one surefire way to accelerate a creator driven culture is to bring together diverse work backgrounds  Montulli saw this firsthand in his early days at Netscape  when the engineering team was determined to create better user experiences on the web   We wanted to enable content creators to produce more dynamic content  Thinking back  it was supremely helpful to have engineers who came from graphic imaging and gaming in the room  When they looked at the problem  they couldn t fathom an interaction between the user and computer that wasn t naturally dynamic   he says   Even though computers in the early 90s weren t fast  they assumed there was a world in which one could interact with a page and it d change    Collectively  the group s expertise   and instincts   led to new browser innovations  including Javascript  the DOM and interactive HTML   Each engineer brought his own assumptions  expertise and perspectives  That allowed us to imagine and build new things   says Montulli   Granted  it was a very gifted group  We had different backgrounds  but we each made a choice to gravitate to products at the problem level  That larger scope along with our collective technical acumen allowed us to see solutions that someone less technical  who may not have been super familiar with the data model underneath  might have missed    Tying it All Together  Creator driven organizations build better products by distributing parts of a larger problem for engineers to tackle  not features for them to build to spec and implement  Key to the success of this culture is the functionally flexible engineer  who can stretch to take on traditional product management responsibilities and customer facing interactions  all while having the skills to translate this firsthand intelligence into code  This culture rewards versatile engineers  who not only feel more empowered  but also stay more engaged with what   and for whom   they re building  While this model s suited for startups  with some coordination it can thrive as a company scales    To me  the best part of a creator driven culture is it s just a hell of a lot more fun to work on the root of a problem and not just be a cog in a machine  It s why I like to build these types of environments  When makers can take true ownership and receive outstanding feedback from a customer they recognize  there s little else that s more satisfying  They connect to something more enduring than the product itself  the customer experience   says Montulli    I am large  I contain multitudes   Those six words were from Whitman s major work  which he published with own money and kept revising until his death  He was not just determined to produce a masterpiece  but to connect to his fellow man through an American epic  That s the drive you want to unleash in your engineers  You ll be astonished what they ll build as creators,"[1195 1061 190 826 517 694 363 116 315 1385 115]"
1207,training-dataset/product/1088.txt,product,On Writing Product Specs   Gaurav OberoiOn Writing Product Specs  Most people groan when they hear  product spec   They think of weeks spent writing docs that no one reads  How can one be agile  and pumping out code like a ninja rockstar  if one is encumbered with documentation  After having spent over a decade building software products used by millions of people  I think this view is misguided  In my experience   Effective product specs are a critical part of building great software  They force critical thinking up front  scale communication  and raise accountability   all leading to higher quality  lower schedule risk  and less wasted time   In this post I ll walk through an example  and share some general advice  This will be most useful for product managers in mid to large companies  200  people    First  an Example  Suppose you work at   A company that runs a vacation booking site  like Hotels com or AirBnb com but smaller   Your checkout conversion is low  and one idea the team wants to try this quarter is live chat during checkout   Your ticket story roadmap says   Try adding live chat to checkout to increase conversion   Checkout conversion is only 18   whereas the industry standard is 30   Let s test showing customers live chat during checkout to see if we can improve it  Customer ops has agreed to lend us 1 head for a month   And you execute without a spec   Let s say you decide that action is paramount  and jump right into it   You chat about this with your team in the sprint planning meeting  Then you simply pick a reasonable chat vendor  like SnapEngage   Update the ticket to ask a developer to slap in some Javascript  And have a meeting with Support to make sure they re all set   Bam  Why do we need all that spec fuss anyways  Well if you re a small startup  you don t   because there are fewer moving parts  and fewer people involved  But if you re in a larger org  or have a more mature complex product  the details will appear at some point  and they ll cost more to address later  For instance   A dev marks the ticket as done  but on giving it a spin  you realize it doesn t work on mobile    Doh  You forgot to mention that mobile is key   The customer ops manager wants to have a lengthy vendor review to pick the right chat tool    Ugh  Schedule a meeting to explain this is only a test   An hour after launch  support says they are getting live chat requests in Spanish    Yikes  Do an emergency release to limit to English only   A designer spends days crafting the perfect slide in animation to display live chat    UX gold plating  Did you set expectations that this is a test   After a week of testing  BI realizes they can t build the report you need because the right metrics weren t logged    Epic fail  Restart the test   Without a spec  you might not have a disaster on your hands  this is a relatively simple project   but you will likely waste time and opportunity   Now suppose that you wrote a spec   To illustrate  I ve written up what early notes might look like  as well as a completed example spec   so you can see what the evolution might look like  Take a few minutes to go and read these before coming back   Read example notes   2 min read   This is a bulleted brain dump of what you know  and questions you want to answer  Write this up front by yourself  It should take about an hour  This is your straw man to vet with your team and stakeholders   Example of notes you might take to get the process started   Read the example spec   6 mins   You ll only feel confident writing this after vetting your assumptions and ideas by your team  in small focused meetings  over coffee  or on a foosball break   Once that s done  this spec should take 1 3 hours   Example of a completed spec   Aaah  doesn t that feel more solid  Writing a spec may seem like extra work  but it s not  Effective specs will help you and your team save time  and deliver with confidence,"[1207 949 391 190 1061 1339 826 168 497 296 1265]"
1218,training-dataset/product/646.txt,product,Q A  How should product managers prioritize their time We were recently asked how product managers divide their time at Intercom  so we sat down to discuss everything from how we plan our daily goals  to where a product manager s responsibilities begin and end   The biggest challenge is balancing two very different modes of thinking   the need to execute and the need to think strategically  at the same time  It s about making sure you re taking care of the here and now  while still maintaining the long term vision of a product   The gravitational forces of product management  You have to fight for the time to plant seeds in your head  which will germinate and grow over time  Brian  If you re working in a company like Intercom who ship frequently  one of the biggest challenges for a product manager is to escape the gravitational pull towards execution  This pull is a good thing  it s a sign of a healthy company   it means you re getting things out the door  But it also means your focus is likely on today and the next couple weeks   It s important for any product manager to be able to balance that gravitational pull with strategic thinking  What have you learned recently that should factor into your 6 month roadmap  Have you had time to think what tectonic shifts are happening in your product s landscape  to think out towards the next few years   If your team is in constant execution mode  putting some forcing functions in place are a good way of creating time for strategic thinking  But if you put a block of two hours in your calendar every week for  strategic thinking   it s just not going to work   That time will inevitably get eaten up by execution  there will always be some task that feels critical and essential to do now  A commitment to another person to discuss strategy is a much better forcing function   We have standing weekly meetings with our researchers and our analysts to ensure we re getting thinking about and pulling in all the critical inputs  These meetings are good opportunities to frame   Are we asking the right questions  Are we asking big enough questions     Daily and weekly goals are also important to help us prioritize  The volume of stuff that comes into a PM  added to the gravitational pull of seemingly meaningful distractions  makes it essential to have your weekly and daily goals  To put it bluntly   what s the stuff I m willing to ignore to get this done today   Finally  I think it s important to make time for tasks that have no immediate payoff  You have to fight for the time to plant seeds in your head  which will germinate and grow over time  So things like research  talking to customers etc  Solving the most immediate problems usually feels rewarding  but it won t lay the best foundations for your future thinking   Colin  What really helps me prioritize different types of work are the rhythms and cycles we have embedded in our work  As Brian said  daily and weekly goals are great for prioritizing tasks when you re in execution mode  when there are tasks that need to be done quickly   But in the last few months we ve introduced a six week cycle into our engineering team which I ve found an extremely useful time frame to actually fit in all the activities that a PM needs to take on   It s a longer cycle  but a more considerate one  It gives you a good rhythm to plan more strategic tasks  You can devote chunks of time to think deeply about your long term plan in the six week cycle   Keeping the door open  Brian  The other huge challenge for a PM is figuring out what distractions can be ignored versus what looks like a distraction but is actually something you should really jump on   A PM s job is often a hostile environment for all types of incoming requests   There s no science to that  It s about building that ability to say no  while at the same time having the flexibility to say   Hang on  my plan for tomorrow is totally wrong  I need to focus on this new thing that s only just come across my desk    That s a really hard thing to do  but the PM s job is not one to shut the door and say   Here s my week  This is what I m doing all week   The PM s job is to be reasonably open to what s going on around them   A big part of keeping the door open is being open and available for impromptu chats  Those unplanned chats while getting a coffee in the canteen can be incredibly valuable  Sure  some of them are throwaway chit chat  but I ve consistently been surprised at how frequently they are valuable  A part of the PM s job is to be visible   Colin  When we were building our composer  people talked about it as something that had to operate in a hostile environment  It s an environment that has to handle all types of input   you write in it  cut  paste  and copy text  etc   I feel like a PM s job is like that   a hostile environment for all types of incoming requests  They can come from anywhere and you can be sure they re all going to come in at one point or another  It s about figuring out what one is important to deal with  while still making sure you re making some progress towards the goals you re setting yourself   Something we have used successfully is having three tasks each day to get done  or three objectives each week to achieve  At the start of each day I will allot time specifically to get those done first and then fill the smaller tasks around it  It s like when you put the big stones in first when you re filling a container  and let the little ones fall in around it   Being deliberate vs being reactive  Colin  What I ve learned from being the only product manager to Intercom  to a team of 10  product managers  is that you really need to try to bake some structure into your day   Earlier in my PM career  I definitely prioritized the urgent but ultimately less important tasks  By continually adding a little bit more structure to my day  I can accomplish the more important but not necessarily urgent tasks as well   Brian  It comes to a question   are you being deliberate or are you being reactive  It s so easy to be reactive because it easily justifies itself as important  You need to be deliberate enough to say   Even though I know this incoming stuff is important  I m going to say no  because I know I need to focus on the other stuff   If the more strategic and longer term view continues to suffer  then ultimately it will be worse for the team   Being deliberate also means being realistic in your daily and weekly goals  The constant temptation is to make a long list of shit to do and choose five or ten items to do  not one or three  That s still hard for me  I still have to restrict my goals for the day   Colin  I think it s crucial to understand how the PM role fits into your particular organization  to better understand what you should prioritize  For example  if it s a design mature organization  you might be doing no wireframing  But if there s no designer you might be the primary person looking after design  so obviously you ll need to spend time there  Figuring out how the PM role fit to your organization is going to help you figure out what s the pieces you need to prioritize   Brian  Yeah  I think the PM role very much feels like   What does your team need  what does your company need   In the earliest stages of your company  that usually means everything  QA  a little bit of design  some research and some product management stuff thrown in   Then as your company grows and gets bigger you can actually focus on what s seemingly core PM stuff  But from my perspective  and from yours as well Colin  you do what s needed  not what theoretically a PM should be doing   Colin  I think it s also worth spending time defining that  and being in agreement with the company or your boss  to say   These are the seven things I m going to concentrate on  and the others may not get done   Otherwise stuff will come at you all the time  That design is not right  or this technical specification doesn t make sense etc   Our own definition has changed for us over the years  Early on  Intercom hired design orientated PM s  and we tended to get too involved in the design stage   Over the past few years  we ve created clearer responsibilities  For example the product manager is responsible for the problem definition  and the designer is ultimately responsible for solution definition  You re very much involved in the solution definition stage  but the areas of ownership are much more clearly defined,"[1218 333 116 315 17 769 363 190 826 391 1061]"
1220,training-dataset/product/308.txt,product,Building a cross platform productOur product teams pride themselves on working in small  autonomous units   Each team has their own roadmap  their own weekly goals  and their own ways of collaborating  Traditionally  this has worked really well for each of our products  But when building product that spans mobile and web  this process can quickly break down   Working across platforms isn t just a technical challenge  it s an organizational one too   For the past few years  our mobile team has been horizontal  moving across teams  This meant that when it came to products such as our messenger  the fundamental part of the Intercom product  we had a separate process for web and mobile   Most of the time  web wagged the tail and mobile followed  This wasn t a conscious decision we made  the main reason was because mobile was physically separate from the rest of the team   With limited contact with the designer and product manager on the web team  by the time the mobile team got around to building feature X  all the decisions had already been made  In some cases  designs were literally handed off from web to mobile   the exact opposite of how we like to build product   The technologies are different  but the problems being solved are the same  To build a truly world class  multi platform product  the first step is to break the silos between web and mobile down  So when we started rebuilding our messenger from the ground up  we tried to rebuild our team from the ground up too  We found the best way to achieve this was to work as one team  across platforms  Sure  there s implementation differences across iOS  Android and Web  But at a foundational level  we were solving the same problem   What we didn t realize was that the logistics of having one team were a lot more difficult than imagined  One of our first mistakes was that even though we had one team  we still had separate product managers   one owned the mobile messenger  and one of them owned the web  This caused the same problem as before   not everyone was on the same wavelength   A deliberate choice we made early on was to have just one product manager for all three platforms  It meant that if mobile was implementing a feature that the web built two weeks ago  we could learn from the challenges they faced right away  rather than waiting for weeks to run into a similar problem ourselves   Managing a large group without the bureaucracy  A challenge for any growing product team is keeping more and more people on the same page  but retaining the same speed  efficiency and lightweight process that lets you ship fast  This challenge is particularly true for cross platform teams  With more voices and more technologies to consider  slowing down seems inevitable   On paper  our 15 person standup was the antithesis of what a good stand up should be   a quick  lightweight way for teams to share daily and weekly progress  It also breaks pretty much every rule around team size at Intercom  The last thing anyone needs to start their day is 15 people shouting over one another   In fact  our 15 person stand up increased the signal to noise ratio  If an engineer is working on a feature for web  and I m working on a feature for iOS  we can take it offline after the standup and learn from what we ve accomplished so far   Surprisingly  when we scaled a 6 person mobile stand up to a 15 person cross platform one  the time stayed the same  Time is a forcing function   it forces you to take action and produce a result  So with only five minutes allocated  our standups were kept to quickfire updates of what was absolutely necessary   Learning from other platforms to build a better product  As a company grows and teams scale  product engineers tend to keep their head deep into platform specialism  Do Mobile engineers really care about what s going with Web  Do the iOS engineers really need to know what s going on with Android  In reality  learning from other platforms can help open your eyes to different possibilities you didn t even know were possible   We found this out in user testing sessions we held for our messenger  With day sessions across all platforms  a day session for iOS  a day session for Android etc    product engineers could sit in on sessions that went beyond their respective specialisms  For an iOS engineer to watch people using the product on web forced us to take our heads out of the sand  Things we hadn t even thought of on mobile were slowly revealed  and vice versa   For example  a core part of our new messenger was the team and teammate profiles  We spent many  many months designing  building and polishing these in order to make the messenger feel as personal as possible  However  user testing taught us that users simply didn t discover this new feature  as it was in a collapsed state by default   This wasn t just a discoverability problem on mobile  We witnessed users ignoring our new profiles feature across iOS  Android and Web  Being exposed to all three platforms in user testing meant the whole team could confidently proceed towards a solution across platforms   When most people think about working across platforms they think about the technical implications and the complexity of optimizing for each one  But working across platforms isn t just a technical challenge  it s an organizational one too  With so many additional voices and vested interests  the danger for today s product companies is that you end up shipping product at a glacial pace   What we found was that having a common objective  a clear sense of ownership and accountability  and a strong culture of learning from one another  working cross platform was something we could celebrate  not something that slowed us down   Editor s note  This is fourth of five posts explaining the thinking behind our new messenger   Part 1  Reinventing messaging all over again  Part 2  Making messaging human again  Part 3  The right kind of disruption  Part 5  Closing the gap between data and product development,"[1220 1003 975 408 826 955 190 116 1195 949 389]"
1223,training-dataset/product/68.txt,product,Measuring MagicMeasuring Magic How we turned an elusive vision into a functional product    How can we measure magic   That was the first question I was asked when I joined Airbnb as an Experience Researcher more than a year ago  At the time  I was part of a scrappy team pursuing a deceptively complex goal  Our CEO Brian Chesky had a vision  Make travel magical and easy  Now it was up to our team of 10 people to translate that idea into reality  We felt confident that we could develop a robust  quick  and user friendly travel booking app  But  magic   We weren t even sure what that meant yet   In November  Chesky announced our solution  Airbnb trips  a platform where you can reserve a place to stay and book unique experiences like truffle hunting with a Florentine and his dog  painting with a San Francisco native in her home studio  or shopping for records with a Motown expert in Detroit  The idea to empower people to host experiences  not just their homes  may seem obvious now  but it took careful research and collaboration to get there   Along the way  I was punted outside of my digital comfort zone  Since travel is inherently offline  I could no longer just look at how people interact with screens  I had to figure out ways to study how they interact with others in the real world  which is an unpredictable  scary  and ultimately beautiful thing  Not surprisingly  I learned some lessons along the way   Lesson 1  To ground a grand vision in reality  listen to your research participants   First  we had to discover what magic was  Before I joined the experiences team  they created the most crazy  cool experiential trips to San Francisco for travelers from around the world  One of the first guests was Francisco  a gay Chilean man  Francisco felt like he didn t quite belong in his home country  so we brought him to the Castro  the epicenter of gay culture in the US  Three people spent around 600 hours planning his itinerary  which included meeting locals who brought the city to life for him  The trip was literally life changing  Francisco quit his architecture job  moved to Australia  and credits his experiences in San Francisco with making him feel like he could be himself in the world   Clearly  the team had achieved some success  and it did feel magical  But they soon realized that they didn t know exactly what made these trips magical or how to scale that magic  That s when I was brought on  Several months after the initial guests returned home  I interviewed them on video calls and transcribed what they said  A pattern soon emerged  Everyone talked about gaining perspective and the most satisfied guests all mentioned that they grew as a person  One man said that meeting the local hosts had shifted his perspective on the world   By carefully listening to our guests  we were able to shift our perspective  too  We began to realize that itineraries packed with expensive meals and exciting activities didn t necessarily lead to magical trips  What made a trip magical was people   interesting community elders  engaging historians  friendly neighbors   We had tracked down magic s source and grounded it in the real world  Now we could focus on connecting travelers with locals in a meaningful way  In retrospect  empowering this new type of host unlocked the product development process  but it definitely didn t feel like an epiphany at the time  Which leads me to my next lesson    When working on a project with a high level of pressure and potential  researchers often wait for an aha moment  But for better or worse  that isn t how most products are actually forged   Lesson 2  Don t hold your breath for a big aha moment   When working on a project with such a high level of pressure and potential  researchers often wait for an aha moment  We want to reach a place where we feel like we ve figured it all out  But for better or worse  that isn t how most products are actually forged   Refining the product required a phase of rapid iteration  This wasn t sexy work  It took perseverance and repetitive testing  During this phase  I worked hard to represent the voices of the people I talked to  I ran a test trip almost every week  and on each trip I had the guests try out different technology and offline activities  We tried small groups  large groups  solo travelers  We tried dropping people mid way into a group experience  We tested trips with story arcs  Basically  we tested every possible permutation of a trip  After each one  I debriefed the guests to try to understand what we should integrate into the final product   As a team  we were learning more and more each week  Looking back now it would be easy to claim that we had one big aha moment  But instead we were deep in a process of accumulating a million little tweaks as we figured out what was working and where the momentum was leading us  At the time this didn t feel quite so satisfying  There was no moment where we thought   This is it  Everything s perfect  We ve got it   But over time  each of those small learnings helped get us to where we needed to be   Lesson 3  Be prepared to reconnect with the larger company   Eventually  the big moment arrived   it was time to scale and launch the product  We now faced new questions  How do we merge experiences into the main Airbnb app  How will people find them  Luckily  we had colleagues who had already researched similar questions for other products  We didn t need to reinvent those wheels   However  we did need to figure out how to bring those colleagues on board  For a year  we had been a team of 10 people  working in a little garage  Our co workers hadn t seen us  our project wasn t on their roadmap  and now we were back saying   This is what we re doing now  Trust us   This transition can be tricky   Airbnb s greater research team is a mix of 47 Survey Scientists  Product Specialists  and Experience Researchers  During this phase  I spent a lot time both sharing with these researchers and ultimately learning from them  And I found that the collaborative spirit inherent in research can help set the overall tone for functions  including engineering and design  Researchers with a wide range of expertise stepped up to help shape the new product  For example  a researcher who had spent a year studying how people search for homes was quick to help study how people want to search for experiences  And another Product Specialist  who had worked on launching Airbnb business travel  created a system for capturing feedback before  during  and after our launch   Our incubated team had been focused and fast  I had been the only researcher in the room for many months  But it was time to shift from being the research pilot to becoming more of an air traffic controller  The style of work shifted from hyperfocused iteration to more sharing and comparing notes  This work is often easy to ignore  but ultimately crucial to the success of research and the product  Once it s time to plug into the rest of the company  you need to slow down and find out where people are coming from on a human level  Find out what your colleagues know  how they can help  and take time to patiently share what you know   The power of human centric research  This is the most human centric project that I ve ever been part of  Every piece of it was built by people  in cooperation with people  Personally  it forced me to step outside of controlled lab studies and the reassuring constraints of digital experiences  and jump into the messy  unpredictable real world  When you put four people in a room together   let alone on a bike trip in a new city   the guard rails just aren t there  The group might not get along  It could start pouring rain  Something you never thought of might happen   But with all that can go wrong and the setbacks that can follow  this human centric approach leads to deep insights  and maybe a bit of magic  too  I can confidently say that the product is stronger than it would ve been without this approach in the mix  We weren t doing precision experiments  but we were learning  We just had to be open to the lessons being as unpredictable as people can be  I am proud of the product we have created  but I will be the first to tell you that I expect to be researching  iterating  and learning about it for years to come   championing people  not just technology,"[1223 826 1061 320 1385 1421 17 19 77 973 190]"
1241,training-dataset/business/230.txt,business,Starting and Scaling Your Growth Team   Greylock PerspectivesStarting and Scaling Your Growth Team  I get a lot of questions about how to start and scale growth teams  Growth teams need to spend as much time thinking about how to scale themselves as they do on scaling the product  In this post  I ll outline how I ve seen growth teams start and evolve  define the ideal end state  and describe some of what you work on at each stage along the way     The first question to ask is why you need to start a growth team  Why not just have traditional product and marketing teams  It s a good question  and not well understood  Traditionally  product teams make the product  and marketing is in charge of getting people to try and continue using the product  Marketing can include traditional efforts like events  advertising  and PR  and perhaps some branding efforts and some online marketing  Of note  online marketers and traditional marketers have historically been very different  so depending on the manager  all of the budget and team allocation typically went to either online or traditional   not evenly split     However  the best startups grow super fast not because of traditional marketing or online marketing  but because they tune the product to drive growth  This is why growth teams matter  Marketing teams typically don t have access to the product roadmap to make changes to things that will impact SEO  conversion  optimization  or virality  nor the expertise to work with engineers and designers on making these changes  And product managers often prioritize new product features over engineering that will drive more people to the existing value  Growth teams are the connective tissue between product  marketing and engineering   Starting a Growth Team  Focus On One  Easier  Problem  Goal  Improve one area important to the growth of the business  Team  PM  Designer  Engineer s   Analyst Data Scientist  sometime PM or engineer assumes this role as well early on   It can be overwhelming to consider all the problems you need to solve  When you start a growth team  do not to try to solve all those problems at once  A growth team should start by going deep on one carefully chosen problem   Pick a problem the company is not currently working on  to prevent turf wars   Pick one of the easier   not harder   problems to improve  to build up credibility and drive toward early wins   Since growth teams are typically treated with a healthy dose of skepticism by other teams when they start  carefully choosing your first area of focus will help maximize the growth team s chances for success  Let s say a growth team starts with a hard problem  Trying to increase activation of new users  It takes a month to measure increases in activation rates  and it has one of the smaller sample sizes in the traditional growth area  You run an experiment  It doesn t work  You run a second  and another month goes by  and it still may or may not work  Now two months have gone by without a growth team win  People on the growth team are questioning if this is the right team to be on  and other teams in the company begin to question your purpose   Hat tip to Andy Johns from whom I am blatantly stealing this example      There are common growth problems where you can likely show quick progress  One is conversion optimization  Another is returning users via email and notifications  Still another is improving referrals or virality  These areas allow you to run multiple experiments quickly because the metrics will move immediately  they don t take time to measure like activation   and because they have high sample sizes  all new users or all existing users opted in to communication      Last note  When starting a growth team  it s important that they sit together and not with their functional team members  The collaboration between the different skill sets and short feedback loops is how the magic happens   Growing a Growth Team  Own the Growth Funnel  And Some Real Estate   Goal  Improve metrics across the growth funnel  Team  PMs  Designers  Engineers  Data Scientists Analysts  As a growth team grows  the team can start looking at multiple problems  These problems are typically across the AARRR framework by Dave McClure   however revenue is frequently a separate team in an ad supported business   The growth team separates into sub teams who have their own meetings  and entire growth team meetings become less frequent  PMs  designers  and analysts may work on multiple teams  At this point  the growth team assumes ownership of certain areas of the product  including  but not limited to    The logged out experience  which can involve both SEO and conversion  All emails and notifications  sometimes coordinating with marketing   The onboarding flow  sharing flows  et al   Owning these areas creates easy swim lanes between teams and prevents turf was with the core product team  Growth leaders have to determine how to allocate people to work on the most impactful problems across the growth stack  and if a sub team does not have enough support to make an impact  the growth leader should consider whether to support that problem at all  Growth teams also have to own goal setting  which means understanding historical performance and setting absolute goals     At this point  teams start to work on both improvements in infrastructure and experiments  For example  at Pinterest  I was managing both the acquisition and retention teams  The retention team was struggling to grow because of an unwieldy email infrastructure  The infrastructure was built to support triggered  social notifications  but our strategy had evolved to more personalized  content based recommendations  These jobs were taking days to run and would send automatically when complete  even though someone might have received a social notification five minutes before  So we spent nine months rebuilding it to allow us to scale more effectively  The retention team saw a step change in its performance and actually hit its Q1 goal in the middle of January after it was complete   Evolving a Growth Team  A Special Forces Team Operating Across Borders  Goal  Reduce friction across the product that prevents people from connecting to product s core value  Team  PMs  Designers  Engineers  Data Scientists Analysts  Researchers  Marketers  Operations  As the growth team continues to grow  it involves more stakeholders and expands its scope  Instead of having clear areas of focus separate from the core product  the team shifts to analyzing the entire product and trying to figure out the biggest obstacles that are preventing the company from growing faster  At this point  the growth team has built up enough credibility that it doesn t fight turf wars   it is laser focused on finding and solving the biggest problems that prevent people from connecting to the current value of the product     Usually  the problems at this stage are deep inside product features and go beyond improving SEO  signup  viral and on boarding flows  and sending the right emails and notifications  though growth teams still work on those too   The growth team is now identifying the friction that prevents people connecting to the core value elsewhere in the product  A lot of this work is simplifying product flows or building country specific optimizations for slower growth countries  Growth teams can also become service organizations to marketing initiatives around this time  and I ll talk about that in another post     At Pinterest  we migrated to this phase rather recently  As we started to look at friction in the entire product  we saw in qualitative research that new users were getting bombarded with so many concepts it confused them  what a Pin is  where they come from  how to add your own Pins  what a board is  group boards  profiles  etc  The growth team made a list of the core things new people needed to know to get excited and start to build an understanding of the service  Then  we started experiments to remove everything else from the new user experience and only introduce it back once the core concepts were clearly learned  This helped improve activation rates     What I described above is an amalgam of what I ve seen in the market that works best  Of course  you should always tweak your approach based on the talent of your team and your company s culture  I would love to hear what you think of this approach  and any additional insights you think would be useful to share with other growth leaders,"[1241 39 1385 1030 826 190 17 1061 115 975 116]"
1243,training-dataset/business/996.txt,business,The Three MachinesLately  I ve been stewing over increased complexity being generated by companies around their organization approaches  While this activity varies by stage  in many cases the leadership team expands to a large  greater than six  number of people  there become two executive teams  the C Team and the E Team   the CEO gets sucked into endless distractions and working  in the company  rather than  on the company   and I could go on with a 1 000 word rant on the challenges and complexity   Recently  I saw a structure rolled out by a CEO at a company I m an investor in that made me pause because of its simplicity and brilliance  I didn t like the labels the CEO used  but I loved the intellectual approach   It coincidentally had three categories  Three is my favorite number and has been since I was three years old  While I can carry more than three things around in my head at a time  when there are only three attached to a specific thing I find that it s second  third   nature to me and requires no additional processing power to remember and organize my thoughts around three things   If you recall my post on Three Magic Numbers  this will immediately make sense to you  Or if you ve ever heard my story about struggling with clinical OCD in my 20s where the number three was one of my key anchor points  you ll have empathy for my relationship with the number three   I abstracted the structure I saw from the CEO recently into what I m currently calling  The Three Machines   While this can apply to any size company  it s particularly relevant to a company that is in the market with its first product  or a company that is now scaling rapidly with a set of products   The three machines are   1  the Product machine   2  the Customer machine  and  3  the Company machine   If you step back and think about all of the activities of a company in the phases I described above  they fit in one of these three machines  However  most leadership teams don t mirror this  Instead  in a lot of cases  there is a traditional leadership team structure that has a CEO and a bunch of VPs  VP Engineering  VP Product  VP Finance  VP H R  VP Sales  VP Marketing  VP Customer Care  VP Operations     which are often title inflated with CxO titles  CTO  CFO  Chief People Office  CMO  COO  CRO     or artificial demarcations between VPs and SVPs  and EVPs    Regardless of title structure  the CEO has a span of control that gets wider as the company scales  often with more people being added into the hierarchy at the VP or CxO level  As this continues  and CxOs are added  you end up with the C team and the E Team  which includes the non CxOs   The focus of each person is on a specific functional area  finance  marketing  sales  and traditionally scoped   In a few cases  big organizational experiments ensue  often after the organization dynamics hit a wall  Holacracy  which is still bouncing around  was a relatively recent trendy one  I disliked holacracy from the first time I heard about it and resisted even experimenting with is  preferring to watch what happened when others tried it  In 2013  Nick Wingfield wrote an often citied article in the NY Times titled Microsoft Overhauls  the Apple Way that is liked to a now famous graphic of different org charts for Amazon  Google  Facebook  Microsoft  Oracle  and Apple   I ve wrestled with hundreds of conversations around this in the past few years  I never have felt satisfied  or even particularly comfortable  until I landed on the three machines recently   My current hypothesis is that if you are a CEO  focus your organization on the three machines  Product  Customer  and Company  Then  have a direct report own one of them  If you have a sub scale leadership team  e g  you are three founders and four other employees   as CEO you can own one  but not more than one  As you get bigger  probably greater than 20 employees   hopefully how you have enough leadership to have one person own each  but recognize that if someone is being ineffective as a leader of one of the machines  you will have to replace them in that role  either by firing them or re assigning them    Let s assume you have enough of a leadership team that you have a key leader who can own each one  Organize the company leadership around each machine  The titles don t matter  but the hierarchy does  Naturally  you will have a product or engineering leader for Product  you will have a sales  marketing  or operations leader for Customer  and you will have a finance or admin leader for Company   But  this does not mean that your VP Engineering is your VP Product and Engineering  That rarely works   you want to separate these two functions  But your VP Product  or your VP Engineering  or your CTO could be responsible for the Product machine  with the other VP functions reporting to her  You probably also don t want to merge your VP Sales and VP Marketing and VP Customer Care function into a VP of Sales  Marketing  and Customer Care  But  if you have a Chief Revenue Officer  you may have done this  While that can work  recognize that it works if the CRO realizes he is in charge of the entire Customer machine   I m still in the first few weeks of really building a theory around this so there s a lot of sloppy thinking on my part so far  For example  I don t think this necessarily means that the CEO only has three direct reports  But it might  Or  in some cases  at certain scales it might  I haven t focused on what it means in terms of the overall hierarchy  I haven t really thought about how multiple different product lines come into play  I don t know if there needs to be dramatic retitling at the top   I do  however  have several companies that are very clearly focused on these three machines  Yet  they are at different scale points and have different formal hierarchies  Over the next few months  I m going to use this lens across every company I m an investor in as I poke and prod at how it might  can  and should work  And  determine if it s a valid hypothesis   Feedback of any type is welcome   Also published on Medium,"[1243 19 1061 962 694 679 1357 1273 190 1292 826]"
1244,training-dataset/product/601.txt,product,How to fix Runaway Project Timelines54 Flares 54 Flares    We ve all been there  two months into a two week project and the end still isn t anywhere in sight  Sometimes a good project goes bad  you learn your lesson  and move on  But sometimes the issue is deeper than that  and it s not a one off fluke  but an institutional issue that keeps repeating itself  It s so frustrating to see teams at other companies pull off seemingly unbelievable feats where nothing goes wrong in magical two week sprints  Why can t your team do that   The Blame Game  You start by blaming the people on the front line  This developer never takes deadlines seriously  that designer is constantly late  maybe it s time for some changes  You hire some talent  you let a few people go  everything is going to be better  right   But the problems still persist  What gives   It s not you  it s me  As much as we d all like to point the finger elsewhere  chronic deadline issues are often the result of poor management  not poor execution  it s easy to spot the latter and totally miss that it s caused by the former   If you find yourself in this situation  you need to examine the culture and framework of your project teams   Why it s so Hard to Change Deadline Culture  If your culture isn t already deadline focused  then it s extremely difficult to suddenly make shipping quickly a priority that everyone works towards   You can probably relate to a few of these hurdles   It s trendy at the moment to have a chill corporate culture  Many managers want to be the antithesis of the hard ass boss who constantly pushes everyone to work harder and faster  Setting deadlines is hard  Will that new feature take three hours or three weeks to code  As a product manager  it s often difficult to tell  People hate providing time estimates for their work  Ask a team member how long it will take to build something and they ll talk for 10 minutes solid and never mention a real timeline  Dig deeper and ask for a ballpark figure and that s what you get  a random number and a shrug  Feature rich product work is tricky to quote  especially when you have an existing code base that never fails to offer up surprises as you dig into it  Even the best talent will struggle with this  Deadlines are difficult to enforce  Should you punish people for missing deadlines  Your team will push back and say that great product work takes time  There are often trade offs between speed and quality  but this shouldn t be a get out of jail free card for every missed deadline   Overcoming these hurdles is difficult  but not impossible  Let s explore some steps you can take to tackle your deadline culture issues   Decide On a Timeline Before Choosing a Solution  If you re in a culture with runaway project timelines  you may be thinking about project scoping all wrong   Here s how far too many people scope a project   Identify a problem Figure out the best solution Guess how long it ll take to implement that solution  This seems to make sense  but it leaves out a critical variable  the value of solving the problem  You could be working on a project that affects a small percentage of users  but you dream up a solution that will take months to implement  Is the solution really worth that much time and effort   Try this instead   Identify a problem Figure out the value of solving that problem Decide how much of your team s time and resources you can justify dedicating to that problem Explore solutions that you can pull off in the time allotted to solving the project  Using this model  you can more easily scope out solutions that are appropriate  It s tempting to chase every single problem with the best possible solution  but the simple truth is that some problems only merit a one week fix   This process works perfectly with project sprints  Identify a problem  then ask   How many two week sprints can we justify dedicating to solving this   From there  you can scope out a solution that fits your timeline   Try using an impact vs  effort matrix to compare your project ideas and make sure you re focusing on the right things   Stop Juggling too Many Projects  Do you give your team dedicated  heads down time on projects  Or are you constantly pulling team members off of one thing to put them on something that s suddenly more urgent  If you find yourself assigning  out of the blue and suddenly due  tasks regularly  then you can stop looking elsewhere for your deadline issues  they re your fault   Multitasking is an enticing strategy for product managers  Why work on one project at a time when you can queue up three  Unfortunately  this often leads to messy  half baked projects with extended timelines and questionable results   Context Switching is a Very Real Threat  Product work is cerebral  Whether you re writing up project specs  working on a comp in Photoshop  or writing code  you have to get into the right headspace  If you pull your team members out for constant meetings and fires that need to put out  this can totally destroy their productivity  Even if the interruption is quick  it s not easy just to jump back in   This is well trodden territory with lots of great articles and research   The tricky part for product managers is breaking the habit  It s one thing to acknowledge that context switching isn t great  but another to commit to implementing organisational changes that reduce its occurrence  Until you have a bulletproof plan for how to deal with these situations without messing up existing project resources and timelines  you ll never stop falling into the multitasking trap   More Responsibility  not Less  If the people on your team constantly miss deadlines  a natural assumption might be that they re irresponsible  So you dig in  You put them on probation  micro manage their every move  and reprimand every mistake   Of course when you treat people like they can t be responsible  it becomes a self fulfilling prophecy  Try this instead  give them more responsibility  Let them share your burden of leadership and see how it affects your deadlines  This starts with scoping   Everyone Scopes  When I first started as a product manager  I thought it was my job fully to scope out projects  so that s what I did  I d plan out every little piece of the project  then hand it off to be built  I found out pretty quickly that this didn t work well  The result was always the same  UX holes that I didn t spot  technical hurdles that I couldn t have foreseen  leading to extended timelines   and low job satisfaction from team members who felt like they had a lot more to offer   The people building a given project often hadn t even heard anything about it until a finished scope popped up in a task assigned to them  Is it any wonder that deadlines were being missed  Why should teams to feel ownership over project timelines when they have no ownership of the projects   The simple answer was to stop doing everything myself  I now lead a cross functional team where everyone is involved in every step of the project  I guide the process but I rely on the expertise of everyone on the team to decide up front how the project will be structured   Under this model  I ve seen commitments to deadlines drastically increase  When we all share a vision for a project and we all set goals for completing it  we all work much harder to make it happen   Delegating Means Trusting  This doesn t stop at scoping  it affects everything you do  The more I learn to delegate and trust my team members with critical tasks  the more they rise to the challenge   This all hinges on trust  The primary excuse I hear managers giving for not delegating is a lack of trust   I just can t trust anyone else to do it right   I think too many product managers imagine themselves to be the only people in the organisation capable of doing anything correctly  In reality they re failing to set up and empower their teams for success   Publicly Commit to Deadlines  When deadlines are missed across the organisation  they can be tricky to start enforcing  You can t simply fire everyone  The best incentive I ve found for this is simple  public commitment  If project teams are failing in private  there s little reason to improve    Publicly  committing to deadlines means both with each other  in the core project team  and with everyone else   Daily Standups With Your Core Project Team  Just about everyone does standups  and everyone I ve found uses a variation of the same three questions   What did you do yesterday   What will you do today   Is anything blocking your progress   I found that these were a good start  but they re sorely lacking communication on deadlines  This opens the door for team members not only to miss deadlines but also complain that they were never aware of them in the first place   Worse  I found that team members often knew very early in the week that they weren t going to make a given deadline  but failed to communicate that to the team   To address this  I added two questions to our daily standups   What deadlines are you working against   How confident are you that you re going to meet those deadlines   Every single day  everyone on my team  including me  has to acknowledge publicly the deadlines they re working towards and whether or not they think they re going to hit them  If anyone says that they don t have a deadline  that s a call out to me that I need to fix that  and I work with them to set one up right away   In terms of having a huge impact with a tiny effort  you can t beat this in my experience  I highly recommend that you add these questions to your daily standups  It will quickly start to change your team s attitudes towards deadlines   In Larger Team Meetings  If you have a weekly or monthly meeting with your organisation or sub group  make sure you mention all of these   The projects your team is working on The deadlines you ve set as a team for those projects Whether or not you met the deadlines you talked about in your previous meeting  This puts both you and your team on the spot  No one wants to go back next week and tell everyone they dropped the ball  and everyone loves reporting on their successes  Do both with your team and you ll start to see people working harder and pulling together to keep their commitments   When your team works hard and does the impossible  call them out in front of everyone  specifically and by name when possible  When a project slips  absorb the impact and use the word  we  a lot   We didn t hit our goal of launching last week  but we re digging in and doubling our efforts to make sure we launch before the end of the month    Keep Your Eyes on the Prize  Remember that you re not pursuing deadlines just for the sake of checking a box  remind yourself and your team what you re working towards  Whether your team is motivated by competitive pressure  pushing out a new feature before a big event or demo  or making a positive impact in the lives of your users  working both quickly and efficiently helps you to meet those goals,"[1244 17 1030 769 1385 1146 77 390 116 1003 315]"
1265,training-dataset/product/1305.txt,product,Slack s Judy Watkins on improving customer support as you growWith growth comes growing pains  and there are few places that feel those pains more than customer support  As your product and company scales  it can become hard to maintain the high standards for customer support you initially aspired to  and to make sure you re helping your support team grow and improve  I recently sat down with Slack s Judy Watkins  where we discussed how our teams have evolved and the challenges presented for support as our businesses scaled rapidly  Interested in joining our next webinar  We ll be hosting another next week  on March 1st  where we ll be sharing insider tips on how best to use Intercom for customer support  Sign up here  What follows is a lightly edited transcript of the interview  but if you re short on time  here are four key takeaways  Growing fast means getting comfortable with reviewing  experimenting and adjusting your processes every few months  even throwing them out if you have to  What works for a team of 10 won t work for a team of 100  Use your own company and team values to define what high quality support looks like for you  Many customers don t get a great customer support experience from other companies  so their bar for quality might be lower than yours  Regular  structured reviews are crucial for improving the quality of your support  Teams only get good at giving and receiving feedback when forced to practice it all the time  As your team grows  it becomes more important to define a standard  and make sure there is clarity across the team about what you define as  good  support  Jeff Gardner  Thanks for joining us  I m the Director of Customer Support here at Intercom  Our support team is currently a little over 50 people  We are spread across three main offices with quite a few in other locations around the planet  It s a pretty complex beast   we can t hold meetings with everybody on the team because at some point during the day  somebody is going to be asleep  In 2016  we saw a lot of growth  going from around 20 people to over 50  Judy is the Senior Manager for Customer Experience at Slack  It s a great product and it s great to have you here with us talking about this today  What is the size and scope of the support team at Slack  Judy Watkins  There are about 135 people globally in our support team  Slack launched three years ago and back then we had one person on support  When I joined two years there were 14 of us  which gives you some idea of how big our company has grown in a short space of time  Our support team is also based around the world  across four of our Slack offices   Vancouver  San Francisco  Dublin  and Melbourne   as well as a few people working remotely as well  There are now around 800 people working at Slack  which is a lot of growth in three years  Jeff  That speed of growth can break things over time   what works at smaller scales can really quickly break down  You had mentioned that you felt like about every four months you had to revamp everything and redo all your processes   Judy  Yes  for processes definitely  What works for a small team of two or ten is not going to work for a team of 100 people  When you re going through high growth periods or if something significant changes then things can break every couple of months  This year we ll be looking at internationalization  which brings a whole new set of challenges  Measuring support Jeff  As you grow  you have to become more metric driven  and find a way to keep leadership in the know about what s going on  on the ground  The main way that most teams do that is through metrics  The two big parts of measuring usually are  how fast you re getting back to customers and what type of quality responses and interactions are you having with those customers  How do you think about measurement at Slack  If you really believe in the product and the value it brings  you re going to be excited to help people  use it Judy  What s most important to us is speed and accuracy  Part of that is a quality review and part of it is simply how quickly  as a team  we re getting back to customers  We don t look at individual metric  we re unique in that way  We re not looking at how many tickets an individual agent is responding to  for example  It s much more on how the team is performing  Jeff  Faster responses are always better  without a doubt  But quality is an interesting one  because there can be a dichotomy  There s quality as measured by your customers  the people that that are on the other side of the interaction  and then there s quality as measured internally against what you believe  what your company stands for  what your mission is and what you re trying to achieve  At Slack  do you have a set of values that you use  Judy  We do look at CSAT scores and they re consistently high  above 97  month on month   which that s great  but we hold ourselves to much higher standards than our customers would expect  Customers  on the whole  don t get a great customer support experience from many companies  so their bar for quality is not necessarily as high as our own is  When we were looking at quality of our support  we decided to measure against our company values  it was important for us to mirror that  We have a set of six values at Slack  but the four that we chose that were relevant were empathy  courtesy  craftsmanship  and solidarity  Part of our ticket quality process was defining what that means  in terms of support  What does it mean to be empathetic  What does it mean to show solidarity  So the first thing we had to do was define what they are  Jeff  There s one thing that is really interesting about metrics like CSAT and even NPS that begets the reason for needing to start to dig into values and what that means for customer support  There are two scenarios where these sorts of metrics fail that are pretty interesting  One  as you were saying  is that customers are not used to being treated really well  so they have a different bar than you may have for yourself  But it s also not always clear what they re rating on  It s possible that they could rate an interaction poorly  but it s unclear whether it s the interaction they are rating  or they simply didn t like the fact that your product didn t do something  Judy  Unless they leave a comment  Judy  Comments are great  What we often find with negative ratings is that it s reflecting people s frustration with the product  not with the support  They could say  I really want your product to do this   and we say   Really sorry  our product doesn t do that   and they get frustrated  They show that through the CSAT  but it doesn t mean the support is not good  Jeff  The other scenario is the reverse of that in a sense  where it s possible for people to get great scores consistently  but be completely off brand or off your company s values  It s important that you don t stop at just measuring CSAT  isn t it  It s important to think about your values  Judy  And the hard thing about that is  it s not something you can measure automatically  It s largely a manual process  Jeff  Everybody wants to find the silver bullet that can be measured automatically by some background process on what s happening from the customer s perspective  Where you re going to get the most value is when you put the time and the work into really digging in and deciding  One  what are your values  Two  how can we measure this  even if it s really manual and time consuming  And then three  later on perhaps  how do we make this a little faster  How do we automate this  Judy  And at Slack  we appreciate that great support is expensive  That s just how it is  But it s absolutely worth paying for  Some people are not used to a feedback culture  and it can be hard  Jeff  It s an investment  Broadly in the industry  we re seeing a big shift  Companies nowadays are pretty bought into the general philosophy that customer support is not something you can outsource and have really great outcomes from  It is something you ve got to invest in and any part of that investment really has to be figuring out how to do it well and how to improve over time  How Slack do it Judy  The most important thing to remember when you re doing this reviews is that it s very much a coaching opportunity  It is an opportunity to improve your support and develop your team  We chose four of our values   empathy  courtesy  craftsmanship  and solidarity  Empathy is about always seeing things from the customer s point of view  Are we being friendly and humble  Those are things we really value at Slack  Solidarity is more about processes  Are we following our internal processes  Are we putting Slack at risk  Craftsmanship is about asking  is it accurate  And that s  in some ways  the most important one  Are we giving good information to the customer  Is it right  That s the one where I think most people can learn from  Do we need to provide more training in a particular area  And the last one is courtesy  Are we getting back to our customers in a timely manner  We mustn t assume that they re not as busy as us  Their time is valuable  too  That s roughly what we focus our quality reviews on  which our managers do   that s important for us  We see managers as learning coaches  They have to be close to the product  they have to know what our customers are going through  From a mechanics point of view  we use Zendesk and all of that ticket quality information is kept within the ticket itself  Jeff  Is there a regular review process  when a manager sits down with their report and they go through things together  Judy  Yes  we have weekly one to ones with our reports where we go through the tickets that we review  We re doing about five per agent per week  We ll talk about every ticket  Great feedback on tickets that are great  opportunities for learning  Things that aren t right or that were right and can be leveraged into something really great in that ticket  Jeff  Do you find that when people join Slack from other companies that it takes them a little while to get used to the idea that they are going to get feedback regularly on their work  Judy  It depends where they ve come from  Some people are not used to a feedback culture  and it can be hard  It s something we work on constantly  It s part of the career description at Slack   you ve got to be really comfortable giving and receiving feedback to everyone  both peers and managers  Practicing it on a weekly basis is very valuable for us to help develop everyone  Jeff  We re huge on feedback here at Intercom  One of our team values is  be radically candid    I love when I receive feedback on what I could have done better because it s a good sign that things are working and that people are comfortable giving feedback  How Intercom do it Jeff  We got into this a little more than a year ago  and we started the way we do most things at Intercom   we started as small as we possible could and tried to just figure out if we could make it work   One of my leads wrote a script that picked ten random conversions from people on the support team and sent everybody on the team an email each week with ten conversations  Every single person  from manager to rep  would get this email  You d go in  you d click into every single conversation  leave feedback and they would get a notification that you left a comment so they could read back over that  It worked really well as a way of testing the theory out  but was pretty deficient in a couple of ways  One  it was quite slow  Two  because of the way the random conversations were pulled  sometimes you d get conversations that simply didn t need to be reviewed  And we weren t happy with the fact that it was simply qualitative  there wasn t a way for us to track improvement over time  and it made it harder than necessary to keep up with how somebody was doing or how many of these reviews somebody was doing each week,"[1265 296 76 277 17 1146 1030 973 19 391 363]"
1273,training-dataset/business/662.txt,business,Functional versus Unit Organizations   Learning By ShippingFunctional versus Unit Organizations  Famous parody of org charts  http   www bonkersworld net organizational charts  via ma nu  Company organization structure defines both how and what a company builds  It is also one of the few decisions that a CEO can clearly make  Because organization  org  structures appear to be easily distilled down to simple graphs  it is frequently the case that when a company is doing well a given org structure serves as a model for others to follow  and when things are not going well there s a chorus to change to some obvious alternative  Reality is far more complex  unfortunately   A recent post by Matthew Yglesias  Apple may have finally gotten too big for its unusual corporate structure  clearly describes two main types of org structures and also explains how a new structure will address some perceived problems at Apple  Stratechery s Ben Thompson also wrote about this topic earlier in the year  Apple s Organizational Crossroads  I wish things were as straight forward as these posts imply  If you re not sure what it means to organize by function or unit  sometimes called a division  then please read those two posts for background   Reading these posts and a diagnosis of Apple brought back memories of a Microsoft executive retreat many years ago where some high brow consultants were arguing for Microsoft to be business unit  rather than function  organized  Oddly at the time we were clearly organized by  product  and hardly by  function  so I was always confused by the advice  as were many people   But the memories of this time and my own history of working through basically every size and shape of organization over the years provided some motivation for this look at what works and does not work in the seemingly binary choice between functional and unit organizations   This post is in four sections  some personal history  the two Golden Rules of orgs  a collection of pros cons for each of the two ends of the pendulum known as functional versus unit organization shape  and then the universal truths of org design   OMG this post is long  Sure it is long  but this is a really tough topic  In human centric companies  how CEOs and leaders organize is as important as how Henry Ford innovated in factories  In doing something big at scale  the organization influences  and even determines  much of what gets built  As a CEO or big company executive  organization is one of the very few things that is entirely your doing and responsibility  So a lot of words follow    Going Functional   Like any org structure in practice  one almost never sees a pure expression of the ends of the spectrum referred to as functional and divisional  The conglomerate model of running things as seen by Berkshire Hathaway or in industrial companies like GE is close to a pure expression of unit structure and strategy  but pretty rare  Likewise  almost nothing is a pure functional organization except for single product companies  It could be that Apple is reasonably close to a pure expression of a functional org  though as with an example like GE one should have visibility to more levels of detail and operations to know for sure   It turns out that the details and shades of grey of this spectrum matter and matter a lot  Generally  the more you dive in the more you realize that most all companies are in the broad middle of org structures  They try to have a best of all worlds approach  because they know that the pure models are fraught with unappealing trade offs   For example  almost no companies that claim to be organized by units or divisions allow global sales teams to managed from within business units  which would be a key part of actually controlling your destiny  Likewise  most all companies centralize finance and talent  both of which are often the hallmarks of  running a business    this is even the case when they report sales earnings by business  Similarly  most functional orgs rarely have a total lack of general management  i e  a single manager overseeing a variety of job functions   In fact  most functional orgs have plenty of small  autonomous teams working away on products or go to market initiatives   Purity in org structure makes for great caricatures of orgs  but operationally rarely exist  That is why I used the now infamous diagram at the start of the article   a great caricature but far from the truth I worked in  though I totally understand why people love the image   This reality just offers another reason why it is so common to think of org structures as a pendulum  Once you characterize an org one way  then it is easy  when facing challenges  to want to swing the other way   The Office team at Microsoft had long been known as the place where much thought went into management structure  owing this to the legendary Mike Maples Sr  who had experienced everything imaginable in organizations at his IBM career prior to joining Microsoft   His thoughtfulness and wisdom influenced the evolution of the organization years beyond his immediate tenure   In the early days of  apps   in the 80 s it was really called it that   the team was a pure expression of a functional organization just as you would expect a startup of a couple hundred people  There were single leaders for engineering  testing  documentation  marketing  localization  and so on  There were dedicated engineers for apps  like word processing and spreadsheets  but everything else was for the most part single threaded on the next app to finish   Through Mike s incredible leadership  the organization then morphed into Business Units  with a long series of catchy names like ABU  EBU  OBU  GBU  DABU   BU for business unit being the operative word  along with Analysis  Entry  Office  sic   Graphics  Data Access  etc  for Excel  Works  Word  PowerPoint  Access  etc    These teams were  units  in that they owned all the R D and marketing necessary to run the business  Well almost  some things were difficult to spread out such as the global sales organization   It is worth noting that upon introducing this  Mike remained hardcore about minimizing the notion of P Ls across these groups  His  impossible to argue  logic was simply that one could not reasonably account for the costs side of a P L because  a  most costs were not under the control of a business unit and  b  business units relied on each other for much of their business success  This latter point could be illustrated by a favorite saying of the leader of the Word team who used to say  our best feature for competing with WordPerfect is Excel    Mike s experience at IBM clearly influenced this point of view as he spent many years watching people fight to move expenses to other teams  claim revenue for their own team  or even fight against the price of shared corporate services  This  allocation  dynamic is extreme  finance gymnastics  that grows exponentially complex as the business cross dependencies grow  Ultimately the meaning of P Ls derived from allocations becomes the undoing of most rational thought in an organization   hiring  investing  marketing and more all become influenced by mythical numbers that few really understand  The real downside of this is that it removes accounting as a tool to make strategic decisions  which is why accounting was invented in the first place   The business unit structure worked very  extremely  well until the main business transitioned from single apps competing with separate companies to a category defining suite with about  1B ARR  Once the suite took hold then the idea of centralizing marketing became very important because it would solve problems such as ads for Word being totally different than ads for Excel or for confusing the sales force about what was important   Given this challenge the transition was made to  Product Units  which reflected a unit organization for  making  products but a functional organization one level up  split by  makers  and  marketers   It is worth noting  that there was still no clear ownership of sales  finance  talent  or many other significant parts of a business   This refinement served us well for a short time until it became clear that the engineering team also needed to solve some of these same synergy issues  but in the product itself  In particular  the marketing message of  Office  needed to be supported by the product  It is never a good thing to be marketing and selling a value proposition that the team is not actually building  This led to taking a more functional approach to the engineering team as well  piling more and more resources into senior leaders for engineering  test  and product management to build massive amount of shared code and infrastructure  Yet  the organization was also somewhat of a hybrid because it was felt that having  product  champions was still important  so there were  unit  leaders for the apps as well  It did not fit neatly in a picture but it worked reasonably well  At some level this is still what Office 365 looks like today still   After a dozen years and 6 product cycles of Office I moved to Windows  The cultural differences that I had long observed  or participated in  moved to center stage for me  The thousands of people in the Windows organization at the time reflected the style of organization that had dominated  Systems   what the other half of Microsoft was called  for years which was to have many  units   These units were far more granular than say Word within Office  This  unit  organization was favored by Windows for many of the reasons outlined below   Windows had units for each of the subsystems you might name if you were to describe the product   file system  kernel  shell  core networking  graphics  and the even more granular such as CODECs  FAX Scan  DRM  and so on  Actually  I did an exhaustive project to catalog the number of product units and there were 142 of them across everything Windows and related online services  Each of these units consisted of a general manager  or product unit manager   some number of engineers  called software engineers   testers  and product managers  called program managers   To put a number on it  most of these teams had fewer than 15 engineers and were on average about 30 people   Of course  none of these units  as we saw in Office  had sales  marketing  finance  talent  etc  But they did operate with all the attributes of a business in terms of deciding what to work on and how to allocate resources within the product unit  There wasn t any central coordination of these efforts  which made for quite an interesting project management effort   As was well documented back around 2006  things had not been going well in developing the next release of Windows and so naturally one might ask if the organization caused the problem  if there was just a leadership management problem  or the problem was in some process that could be addressed  That is always the issue with an org centric view of execution problems  Is it the physical structure of the org  the logical representation  the strategy  or the people   and where precisely is there a mismatch  Business and consulting books tend to quickly draw causal arrows and drive to solutions  and often if you ve already swapped out some people then the next thing to do is a re org   see these dozen or so Dilbert cartoons   My view is that so many of the seams experienced in Windows   different API strategies  varying support for languages and runtimes  inconsistencies in enterprise management  multiple models addressing the same problem  and so on   were fairly directly attributable to this org structure  The difficulty in coordinating architecture  experiences  schedules  teams  and more came out of this org structure that  arguably  was optimized for specific innovations   So  we did a re org of the Windows team   I knew we would need to make changes but it took about 3 months of 100 s of meetings and learning to really understand what might need to change and why   The change became known as  going functional   and not said in praise  It was big and traumatic as it was basically unwinding about 20 years of  unit  organization and displacing a lot of general managers  I think in this post I will spare the gory details of change management  The legwork that led to this change  however  was focused on several challenges that were clearly articulated broadly across the team and at every level   Missing clarity of product goals and ownership of those goals  Reduced quality of engineering work  Little collaboration across teams  Inflexible allocation of resources  Lack of agility in product development  Inefficiency of core processes  Yep  you can read these and apply them to just about everything that ever went wrong  but this is a summation of what so many on the Windows team were feeling  One must start with a recognition that Windows is effectively a single product  with a single release date  finite set of customers  PC makers   and very broad end user base  and so on  Given that  the unit organization probably never made much sense  Below we will show why unit orgs can be so seductive in a fast growing and complex product line  At the same time  the challenges outlined are almost a perfect reflection of the product that was shipped around that time   For most of the people involved  going functional  represented a pretty big change   not just a change in the current org shape or reporting structure but also in their own career journey and expectations  As it happens  most of Microsoft had long been organized by product business unit and thus the most immediate career goal of most managers was to make the leap from a manager in a job function to being a multi disciplinary manager  MDM   or product unit manager  PUM    In times of major changes like this  most people necessarily become quite concerned with their own path and worry less about the company overall  That s natural  but adds to the challenge   While I learned many lessons during this transformation one has stuck with me because it speaks volumes about how org shape can influence the overall growth of talent on a team  In thinking about this  if you have a large organization where the best performers are pulled from the ranks of line discipline management to managing several types of jobs then there s a definite  yet gradual  erosion in the quality of skills in core disciplines  More than any aspect of the change  the most distinct memories of going through such a transformation were  discovering  that we had 100  general managers but we lacked leadership across core job functions such as product management  software engineering  and testing  Those that would have been the future leaders of 30  40  or 60 engineers were drawn to manage much smaller teams of 20 30 people made up of 10 15 engineers  plus test and product    One might be tempted  as many pointed out  that functional organizations thus fail to grow general managers or business leaders  While there is an obvious truth to that  the reality is that if you believe that you have general managers when you truly have a business then you need far fewer of them  so the ability to identify them amounts to picking 1 out of 500 1000  for example   That s very different than needing 40 50 leaders capable of leading teams of 40 50 engineers  testers  or product managers  which numerically was what we ended up needing in Windows    If you re really interested in an even deeper level of detail  much of the communication with the team is detailed in the selection of internal blog posts I wrote during this time which are in the book  One Strategy  co authored with Marco Iansiti of Harvard Business School   Golden Rules  Business is a social science which leads to lots of crazy advice that arises from doing whatever seems to be working at a given moment for a visible and successful company  For example  in the early days of Google they shunned managers and insisted that a manager could handle 40 50 direct reports  here s a post I wrote on how crazy I thought that was  What do managers do and how big should my team be    That didn t last but a lot of companies thought that was worth considering   Conversely  if something isn t going well then it won t be long before the collective wisdom concludes that you need to go with the other end point of the pendulum  That is pretty much what happened at that executive offsite when the consultants told us to have more business units  Of course it is also what I did  or what people said I did  when we re organized Windows   In practice  there are few hard and fast facts that govern the sociology of organizations  I would go as far as to say that anything can be made to work for any structure  In fact  since there is no optimal or perfect organizational structure  if there was  then this post would be unnecessary  then the most important thing is to know the weaknesses of your structure and to compensate for them  The biggest mistake in organizing is a belief that a new organization would be free of problems  simply because you haven t yet discovered or experienced them  Rumsfeld s taxonomy of unknowns comes into play    That said  these are the two Golden Rules of organization that I ve come to respect   Golden Rule of Orgs   Don t ship the org chart  Much has been written about this going far back so I don t claim to have invented this  see Stevey s Google Platforms Rant  or this HN thread   HN captures my view  which is the rule is aspirational in that you always ship the org chart  Therefore  when you create an org chart you are creating your product   the seams in the org get reflected in the product  the depth of feature work gets reflected in resource allocation  the coordination across job functions gets reflected by the leaders you choose  and so on  When Office wanted to build a suite  we organized the team to build a suite  When Windows needed to ship one Windows product on time we removed product units and went functional  and when we wanted to elevate product design and quality we also elevated leaders of testing  product management  and design  When we wanted to build a computer for the first time we created a singularly focused organization with a leader to do just that  and so on   Golden Rule of Re Orgs   Know the problem you are solving  If there is one thing that consistently amazes me it is that org changes are made without clearly and deliberately identifying what problems will get solved by the new structure  new leaders  and new resource allocation  In fact  most every org change I ever saw that didn t work started off not with a problem statement but with a goal of putting a certain person in charge or a boss centric perspective of grouping some things together or separating some things  This becomes clear when you read the re org mail and finish not quite sure what just happened  which also explains why most people ignore re org mails or simply jump to an org chart  Pro Tip  do not include an org chart in re org mails and see if you can explain things without the chart yes that s a test   Therefore  the easy golden rule is to clearly identify the problems that lead to the change and start there  You then owe it to the team to immediately follow this with an understanding of what just got more difficult  in reality or perception  and how that will get resolved or managed  For example  I spent a lot of energy articulating career path and opportunity because many viewed functional orgs as lacking relative to unit orgs   Functional versus Unit  Pros and Cons  No organization is purely functional or entirely unit based  nevertheless in any given company of size  more than one product or more than about 100 engineers  there is almost certainly a dominant shape   There is no general answer to the question of  functional or unit  absent the context of a specific set of people  at a specific company  working on a specific product plan  There are some well understood pros and cons to each of these org structures  In fact  it is likely that a given manager  loves  an org shape or knows why a shape will  fail   Managers are always products of their own experience   In this list  which will be updated over time  updates will be indicated   I wanted to offer the love fail aspects of functional and unit org structures   Why love a functional org   One product  one org  This is the most obvious basic truth to a functional organization and why most startups remain this for quite some time  But even at the scale of Windows  6 000 full time people  if you re building one product then you just don t really need  units   As we saw in the transition of Office over time  once customers were buying a suite it made sense to build a suite   Better develops skills for each functional area  Functional orgs optimize for creating depth of skills at functions rather than breadth of generalist skills  This is simply because a majority of senior people in the organization are engineers  testers  or product managers and not general manager  In a functional org  the most senior technologists become the leaders creates a management team of increasing depth and experience in technology   and new hires can aspire to leaders in what they were hired to do and fewer people work for someone who has no idea what they do for a living  My view is that for technology companies this is a hugely important point since the future of a technology company is never the current product  but the ability to lead technology change over many years and that only happens with depth of technology skills   Creates critical mass for every discipline  Even on very large product organizations  there are some required skills that don t have a lot of people  In a functional organization  disciplines without a lot of headcount still get brought together and create a center of gravity  This holds for both job disciplines or for specific technology skills within a discipline  Back in 2000 when Office needed to build out online services  that s what the web was called back then   the first thing we did was recognize we would need operations skills and created a functional leader for those efforts rather than expecting each unit to try to hire and train their own experts   Easier to be less hierarchical  It is much easier for managers to manage people doing work they  understand  and have done themselves  perhaps not literally  than to manage people doing something they have no personal experience with  It follows that you can have fewer managers and therefore less hierarchy  in a functional organization  One statistic  when I came to Windows and the 142 product units  the team overall was over 35  managers      But the time we were done  going functional  we had about 20  managers   One meeting brings together all perspectives  In any project of scale  the biggest challenge will be to make sure all voices are heard   and in making product those voices mean engineering  product  design  quality  localization  operations  and more  In a functional org  you don t need to have every general manager either  represent  those voices or worse bring 3 or 4 people to every meeting  Instead  at one table all the job functions for a business can be represented   Embraces synergy across product s   A larger organization working on multiple things seeks  by definition  synergy across those things  Even if customers must purchase multiple products there is almost always a requirement to have those products work well together and ship at the same time  In addition  sales and marketing almost always want to tell the story of 1 1 2  A functional organization is geared towards synergy across efforts because it removes the management layer that might interpret strategy or synergy uniquely   Easier to resource load balance  Things get planned and then change  The way to respond to change is to shift the work around or to move resources to where they are needed most  A functional org is perfect for this because all the discipline resources are under one  roof  and it is much smoother and easier for a discipline leader to see the potential for change and ramifications of making a change  In a project with high variability  a functional org is almost always better   Where could functional orgs fail   Difficult to scale to multiple products  The first criticism of a functional org is that it is difficult to create multiple products from within the team  It is important to separate multiple products from multiple go to markets  GTM   A suite is made of multiple products but is really a single GTM  so a functional org structure can generally work well  Products with different GTMs  wildly different customers or sales channels  or just different ship dates are extremely difficult to manage as a functional org  More than anything  very different targets among one of more of date  segment  channel  etc  is a red flag for a functional org   Requires a discipline leader that can scale to lots of people  One of the less obvious challenges of a functional org is that it magnifies your need for strong leaders across disciplines  Where you could once have two people each capable of managing small teams  you now want one leader capable of managing a bigger team   and everyone knows management doesn t always scale linearly  If you lack senior leaders  before bailing on a functional org you want to make sure you are adequately prepared for the challenges you are taking on by hiding your shortage of talent under unit leaders   Potentially diffuses accountability  I m not a big fan of this becoming a challenge but because of the notion that unit orgs are so strong at accountability  it is almost necessary to mention that discipline orgs can have the feeling of less accountability  Ultimately accountability is much more about the entire team than any one leader  but suffice it to say it is easy for engineering to point to product to point to quality to point to marketing when those feel  far away  or there is not an obvious single leader  Many working with Office or Windows orgs over the years were frustrated by the presence of multiple engineering contributors  whereas those leaders were equally frustrated by unit managers that never seemed to know what was going on   Requires collaboration from the outset  A functional org is by definition about collaboration   across and within disciplines  People often feel that if you don t share a manager than wires will get crossed and signals mixed  making collaboration impossible  As always  if the organization feels that to get something done right well requires a manager to force people to do so  then the problems are much larger than can be solved by the org structure  It is the case  however  that unit orgs can force cross discipline collaboration sooner at a very significant expense of cross unit collaboration   Challenging to manage physically separate people  If you have a team that is geographically dispersed to a significant degree  a functional org can be challenging because it pushes each of your functional leaders to become skilled in managing people from a distance  Often as remote sites grow companies face the challenge of  rolling up  those people to leaders at HQ or creating a remote  unit  org  If you have a small number of remote people or they are concentrated in one discipline then a functional org is manageable   People tend to feel less opportunity because there is  one  leader of a functional area  As people grow and want to expand their scope of responsibility  there can be a feeling of limited opportunity  managing within a discipline  compared to  managing across disciplines   With a single discipline leader  it can feel like a tenure track problem to more recent hires on the team  The focus for me regarding this challenge was to optimize the disciplines around depth of skills and breadth of experience within the discipline as measures of career progress   Why love unit orgs   Easier to scale to many products  If the company is building many products or just products very different timelines  GTMs  architectures  and so on then a unit structure often makes sense  One area worth considering is how multi platform product development is handled  Quite often these are viewed as  products  because any one customer rarely uses both and because of the different product development skill sets  and often  the intentional necessary lack of code sharing   It is worth being cautious of using platform or engineering skill sets as unit org boundaries because of the downstream need for strategic synergy from a customer market perspective   Requires one decision  not n to staff  The unit org is a favorite of executives who face many  problems  needing to be solved because it is a single decision   one person gets hired to solve a problem  This is the famous  or infamous  BOL argument  butt on line  very often made in the Systems world in my time at Microsoft   The simplicity of a single hire is rather attractive especially if the hiring manager lacks experience in disciplines beyond their own career path   Caters to notion of  tiger team  created to focus on specific market challenge  Closely related to BOL is the idea of assembling a small  focused  and even isolated team to attack a problem  By doing so you free a team to go after the market need  solve the problem  or build a product unencumbered by being part of a larger organization with other work  This  tiger team  approach can be attractive  so long as there is an idea for how the potential strategic and GTM issues can be resolved once the team is successful  The unit org is almost always employed in a response to a disruptive technology threat  and yet consistently the inability to scale this new org before getting clobbered by the existing org is also routine   Clearly defines the work  obvious to rest of company  Unit orgs make the mission clear from the outset  especially with one leader  and are a good tool to communicate that to the rest of the company   Decision making authority is obvious  A unit org  when set up as intended  is super clear about who is in charge and how to make decisions about the mission  As a reminder  if there is a need for  deciding  then there are likely additional issues to wrestle with in the org  team  and people   Initially teams are smaller and everyone loves small teams  Unit orgs  especially when created within existing companies  always start off small and focused  It is exciting and many people want to join  very early in my career I tried super hard to join one of the few small unit orgs that was being created for this very reason  but alas I didn t get the job   It is also the case that people chosen to lead unit org often are exactly the people that create a draw to a new team  In practice  teams rarely remain small over time   Where could unit orgs fail   Unit as problem versus business  By far the biggest failure risk of a unit org is that the unit is created to solve a problem rather than create a business  While problems deserve attention  the unit structure implies much more than a technology or GTM problem but a focus on all 4 P s of bringing something to market  Invariably  a unit that is a problem will struggle to  define itself  and rarely finds a purpose or calling  Yet time and again  most units are formed to solve a problem so caution is advised   Overlapping strategy execution always follows  The biggest myth of unit orgs is that they leave the impression that the newly formed unit is going to be the only place a given technology or product area will receive focus within a larger organization  That is  with certainty  never ever the case  As strong as that statement is  it is even more the case if the area is new and hot  I can t count the number of times at Microsoft new units were created to go after something hot and how difficult it was to keep others from innovating in that area  either by adding to their existing product or GTM or by just doing something new   From email clients  photos  collaboration  mobile  and more this strategic confusion and redundancy always followed the creation of a unit  In fact  the larger the company the more likely the creation of a unit is a signal that everyone should be working on this new area  By definition  units are self contained so also taxing them to be the collaborator or supplier to other units goes against the mission given to a general manager   Collaboration doesn t happen  Unit orgs  not matter how big  eventually everything is a unit  make collaboration very difficult   but that is by design  The general manager of a unit is focused on that unit and solving the business problem they were asked to solve  They are likely working on a very big problem  on a short timeline  without ample resources  Also  additional resources almost always have a priority to solve more of the existing problem rather than collaborative  cross org problems  Using other code  fitting within positioning frameworks  relying on same branding  and more are all much more difficult with unit orgs   Resource allocation is difficult  If the executive managing multiple units sees a need to re allocate resources across units  doing so also requires re visiting accountability  schedules  and commitments  This is because a unit is a unit  General managers put up a fight if resources are removed from the unit   Constantly revisit  or  innovate   where it doesn t matter  One of the more interesting potential downsides of a unit within an existing company culture is that over time units tend to revise or revisit most every company process and approach  I ve seen units that say to be successful they need to recruit differently  need different beverages  need different performance appraisal  hire a different PR firm  different furniture  and more  The most famous unit innovation I recall was a team acquiring their own domain name and mail setup along with separate card key access  Engineers will almost always use unit creation to revisit tooling and approaches  Where general managers can innovate and where they should spend those cycles are important boundaries to establish with a unit  Sometimes this is exactly why a unit is created but most often this is just burning calories   Units require more resources  In general units require more resources  not just beyond the general manager layer that gets created  Every unit requires leaders across disciplines and often the first leaders put in line managers  which you need at least 3 to make a team   Resources that are generally scarce often get hired and are under utilized in units  such as design  One interesting statistic from moving Windows from unit to functional was that the number of administrative assistants was cut in half  even though the overall headcount remained the same initially   Rarely able to staff disciplines leaders across many units  Units create an illusion that the number of senior people grows because of the number of general managers and also the number of discipline leaders in each unit  Because of the scale of units  the reality is that unit orgs stunt the growth of leadership at the discipline level  On the one hand  the incentives for the company are for everyone to become a generalist and on the other hand  assuming the same number of resources  fewer are able to manage at larger scale   Difficult to find general managers  The source of general managers is something to consider  At Microsoft  most GMs came out of program  ne product  management  This made logical sense  but also had challenges in two dimensions  First  these orgs tended to grow new product managers poorly because the GM was often the de facto product leader  and this created a shortage of product leaders down the road  as we discovered in Windows   Second  hiring and managing for a job you never did is super difficult and requires a good deal of mentoring  observation of best practices  and more  but if you create many GMs this problem is amplified across the company   Practical accountability does not increase  While unit orgs have the general view that they increase accountability  in most companies a true unit org remains elusive  Units rarely have accountability or influence over sales or geographies  and certainly in most companies decisions about pricing or support are not unit level accountabilities  For this reason  most units and related accountability is rather less than the theory  The recent creation of the Enterprise group at Google is a unique and rare exception to the creation of units within large companies  People who think of Microsoft as having many focused business units and P Ls would do well to see how sales  marketing  and geographies are managed  and the associated accountabilities    Scaling units is challenging  Units do not scale particularly well  either in terms of the unit itself  because of the challenges of hiring or growing leaders  or because at some point if you have 1000  people then you end up with a lot of units and need to have units of units as a management structure   Universal Truths  Like everything in business  org design is a social science and highly dependent on context   the problems faced  history  people  and more  Since there is never a single right answer it is always worth thinking through as much as possible the implications and second order effects of a chosen path   The apparent ends of a spectrum of org design between functional and unit alignment  lead many believe this is a pendulum that swings back and forth over time  A company oscillates between orgs  changing as things in the current state seem unworkable or just because there s a new leader  Perhaps there is a zeitgeist that prefers one org type over another  simply because of a visible success or failure   The reality is that there is subtlety and nuance to this problem  CEOs and executives can rarely have direct and immediate impact on large scale challenges  org design is one of the more important tools  since a single choice can have a profound impact   Regardless of the type of org in play  there exist several critical factors that are near universally true  When designing an org  it is very difficult to work around these realities   Synthetic P Ls are  always  evil  Going back to the history of accounting  a P L is a tool used by executives to inform decisions around resource and capital allocation  pricing  etc  In a large organization  it is very difficult to assign revenue and costs to a specific unit within a company and even more difficult to offer true span of control or accountability to a unit leader  The creation of P Ls that attempt to represent a portion of a business inevitably lead to an excess of internal focus  accountability shifting  and infighting  It is never a good idea to work with two sets of books  so unless a P L truly represents control and accountability to a leader then it is far more likely to impede innovation  collaboration  and sharing than it is to facilitate well informed decision making  I would love to document positives with regard to synthetic P Ls but I ve yet to see that work in practice   at worst it accelerates internal focus and at best it leaves one with a false sense of success   Sales and geography  In a global  enterprise company with several products lines or businesses it is almost impossible to effectively partition  manage  or provide accountability for sales and geography to specific business units  Customers demand a single  face  for a vendor  no matter how large or diverse  and so by definition org design must account for the reality that an extremely important aspect of a business is almost certainly centrally organized  goaled  and managed  The implication of this is that sales quotas and motions  GTM  and even more upstream marketing and branding for many business units will go through a globalization filter and not likely represent the ideal as envisioned by a unit leader  The benefit of this is that a unit immediately achieves global scale with little incremental effort   Resources not generally fungible  A primary role of an executive is resource allocation  The unfortunate reality of allocating resources is that it is way harder than simply using a pivot table  People  for a variety of reasons  are not entirely fungible  Products have technical constraints  legacy code  tool sets  architectures  that require certain people  Some people don t want to work on some products or for some people  Some projects require more resources than seem to make sense  There are many reasons  Therefore  org design will always need to factor in reality and ultimately will have some level of compromise from ideals   Innovation in process v  outcomes  In building an org and creating accountabilities  one must always be aware of the tendency to be innovating in the process of work versus the desired outcome  The larger a company the more org design begins to reflect how versus what  and likewise the newer or smaller an organization the less likely it is that process will be considered  A major part of designing an org is knowing that new orgs tend to start off innovating in process  just by nature of being new  and so setting both boundaries and expectations on this dimension will be critical   Mixed messages get mixed results  Executives strive for the middle ground   say and structure one way for an outcome and then also overlay some extra outcome that runs counter to what was just said and structured  A classic mixed message would be to create a unit organization and then expect the unit  spontaneously  to strategically align  share some code  integrate with another team  and so on  Ultimately starting off with a mixed message will yield mixed results  but unpredictably so  because how the compromises are made will not be decided up front  You get what you optimize for  and everything else is a bonus   Functional and unit orgs both work  Because there is no right answer to the perfect org  it is likely that any company of size will employ both functional and unit organizations  Overlaying product lines  GTM  or geography on a single executive will likely result in a mixture or even a hybrid of org design  The desire for uniformity or clarity can be the enemy of the practical   Golden Rule  Ship schedule is everything  I intentionally saved this for last because it is the only point in here that I don t believe is a pendulum  a grey spectrum  or contextual  The most important thing to consider in org design is that when it comes to execution  collaboration  and alignment ship schedule is everything  Execution means that having a date and hitting it is the most important thing for a well functioning team  editorial note  a ship date is a date  like January 15  not a quarter or month  which are 90 or 30 ship dates   Collaboration between products or units can only happen when schedules are aligned  otherwise planning is an exercise in the futility of each team waiting for the other team s  to be ready to produce or consume the other s plans  Finally  alignment from a customer perspective of messaging  sales  and overall GTM can only happen when products make it to customers  in pre release and final form  at the same time  As difficult  or perhaps  impossible   as schedule alignment appears to be  it is the tool  way more than org structure  that defines the ability of a company to scale to many products that are aligned and related in a positively reinforcing way     Steven Sinofsky   stevesi              PS  I welcome reports of typos or mistakes via DM,"[1273 826 17 1061 19 1385 190 1030 975 363 1243]"
1276,training-dataset/business/283.txt,business,Forget Technical Debt   Here s How to Build Technical WealthAndrea Goulet and her business partner sat in her living room  casually reviewing their strategic plan  when an episode of This Old House came on television  It was one of those moments where ideas collide to create something new  They d been looking for a way to communicate their value proposition   cleaning up legacy code and technical debt for other companies  And here they were  face to face with the perfect analogy    We realized that what we were doing transcended clearing out old code  we were actually remodeling software the way you would remodel a house to make it last longer  run better  do more   says Goulet   It got me thinking about how companies have to invest in mending their code to get more productivity  Just like you have to put a new roof on a house to make it more valuable  It s not sexy  but it s vital  and too many people are doing it wrong    Today  she s CEO of Corgibytes   a consulting firm that re architects and modernizes apps  She s seen all varieties of broken systems  legacy code  and cases of technical debt so extreme it s basically digital hoarding  Here  Goulet argues that startups need to shift their mindset away from paying down debt toward building technical wealth  and away from tearing down old code toward deliberately remodeling it  She explains this new approach  and how you can do the impossible   actually recruit amazing engineers to tackle this work   RETHINKING LEGACY CODE  The most popular definition of legacy code comes from Michael Feathers  author of the aptly titled Working Effectively with Legacy Code  It s code without test coverage  That s better than what most people assume   that the term only applies only to really old  archaic systems  But neither definition goes far enough  according to Goulet   Legacy code has nothing to do with the age of the software  A two year old app can already be in a legacy state   she says   It s all about how difficult that software is to improve    This means code that isn t written cleanly  that lacks explanation  that contains zero artifacts of your ideas and decision making processes  A unit test is one type of artifact  but so is any documentation of the rationale and reasoning used to create that code  If there s no way to tell what the developer was thinking when you go to improve it   that s legacy code   Legacy code isn t a technical problem  It s a communication problem   If you linger around in legacy code circles like Goulet does  you ll find that one particular  and rather obscure adage dubbed Conway s Law will make it s way into nearly every conversation    It s the law that says your codebase will mirror the communication structures across your organization   Goulet says   If you want to fix your legacy code  you can t do it without also addressing operations  too  That s the missing link that so many people miss    Goulet and her team dive into a legacy project much like an archaeologist would  They look for artifacts left behind that give them clues into what past developers were thinking  All of these artifacts together provide context to make new decisions   The most important artifact  Well organized  intention revealing  clean code  For example  if you name a variable with generic terms like  foo  or  bar   you might come back six months later and have no idea what that variable is for   If the code isn t easy to read  a useful artifact is the source control system  because it provides a history of changes to the code and gives developers an opportunity to write about the changes they re making    A friend of mine says that for commit messages  every summary should be the size of half a tweet  with the description as long as a blog post  if necessary   says Goulet   You have the chance to tightly couple your rationale with the code that s being changed  It doesn t take a lot of extra time and gives tons of information to people working on the project later  but surprisingly few people do it  It s common to hear developers get so frustrated about working with a piece of code they run  git blame  in a fit of rage to figure out who wrote that mess  only to find it was themselves    Automated tests are also fertile ground for rationale   There s a reason that so many people like Michael Feathers  definition of legacy code   Goulet explains   Test suites  especially when used along with Behavior Driven Development practices like writing out scenarios  are incredibly useful tools for understanding a developer s intention    The lesson here is simple  If you want to limit your legacy code down the line  pay attention to the details that will make it easier to understand and work with in the future  Write and run unit  acceptance  approval  and integration tests  Explain your commits  Make it easy for future you  and others  to read your mind   That said  legacy code will happen no matter what  For reasons both obvious and unexpected   Early on at a startup  there s usually a heavy push to get features out the door  Developers are under enormous pressure to deliver  and testing falls by the wayside  The Corgibytes team has encountered many companies that simply couldn t be bothered with testing as they grew   for years   Sure  it might not make sense to test compulsively when you re pushing toward a prototype  But once you have a product and users  you need to start investing in maintenance and incremental improvements   Too many people say   Don t worry about the maintenance  the cool things are the features    says Goulet   If you do this  you re guaranteed to hit a point where you cannot scale  You cannot compete    As it turns out  the second law of thermodynamics applies to code too  You ll always be hurtling toward entropy  You need to constantly battle the chaos of technical debt  And legacy code is simply one type of debt you ll accrue over time    Again the house metaphor applies  You have to keep putting away dishes  vacuuming  taking out the trash   she says   if you don t  it s going to get harder  until eventually you have to call in the HazMat team    Corgibytes gets a lot of calls from CEOs like this one  who said   Features used to take two weeks to push three years ago  Now they re taking 12 weeks  My developers are super unproductive    Technical debt always reflects an operations problem   A lot of CTOs will see the problem coming  but it s hard to convince their colleagues that it s worth spending money to fix what already exists  It seems like backtracking  with no exciting or new outputs  A lot of companies don t move to address technical debt until it starts crippling day to day productivity  and by then it can be very expensive to pay down   FORGET DEBT  BUILD TECHNICAL WEALTH  You re much more likely to get your CEO  investors and other stakeholders on board if you reframe your technical debt as an opportunity to accumulate technical wealth   a term recently coined by agile development coach Declan Whelan    We need to stop thinking about debt as evil  Technical debt can be very useful when you re in the early stage trenches of designing and building your product   says Goulet   And when you resolve some debt  you re giving yourself momentum  When you install new windows in your home  yes you re spending a bunch of money  but then you save a hundred dollars a month on your electric bill  The same thing happens with code  Only instead of efficiency  you gain productivity that compounds over time    As soon as you see your team not being as productive  you want to identify the technical debt that s holding them back    I talk to so many startups that are killing themselves to acquire talent   they re hiring so many high paid engineers just to get more work done   she says   Instead  they should have looked at how to make each of their existing engineers more productive  What debt could you have paid off to get that extra productivity    If you change your perspective and focus on wealth building  you ll end up with a productivity surplus  which can then be reinvested in fixing even more debt and legacy code in a virtuous cycle  Your product will be cruising and getting better all the time   Stop thinking about your software as a project  Start thinking about it as a house you will live in for a long time   This is a critical mindset shift  says Goulet  It will take you out of short term thinking and make you care about maintenance more than you ever have   Just like with a house  modernization and upkeep happens in two ways  small  superficial changes   I bought a new rug    and big  costly investments that will pay off over time   I guess we ll replace the plumbing       You have to think about both to keep your product current and your team running smoothly   This also requires budgeting ahead   if you don t  those bigger purchases are going to hurt  Regular upkeep is the expected cost of home ownership  Shockingly  many companies don t anticipate maintenance as the cost of doing business   This is how Goulet coined the term  software remodeling   When something in your house breaks  you don t bulldoze parts of it and rebuild from scratch  Likewise  when you have old  broken code  reaching for a re write isn t usually the best option   Here are some of the things Corgibytes does when they re called in to  remodel  a codebase   Break monolithic apps into micro services that are lighter weight and more easily maintained   Decouple features from each other to make them more extensible   Refresh branding and look and feel of the front end   Establish automated testing so that code validates itself   Refactor  or edit  codebases to make them easier to work with   Remodeling also gets into DevOps territory  For example  Corgibytes often introduces new clients to Docker  making it much easier and faster to set up new developer environments  When you have 30 engineers on your team  cutting the initial setup time from 10 hours to 10 minutes gives you massive leverage to accomplish more tasks  This type of effort can t just be about the software itself  it also has to change how it s built   If you know which of these activities will make your code easier to handle and create efficiencies  you should build them into your annual or quarterly roadmap  Don t expect them to happen on their own  But don t put pressure on yourself to implement them all right away either  Goulet sees just as many startups hobbled by their obsession with having 100  test coverage from the very beginning   To get more specific  there are three types of remodeling work every company should plan on   Automated testing  Continuous delivery  Cultural upgrades  Let s take a closer look at each of these   Automated Testing   One of our clients was going into their Series B and told us they couldn t hire talent fast enough  We helped them introduce an automated testing framework  and it doubled the productivity of their team in under 3 months   says Goulet   They were able to go to their investors and say   We re getting more with a lean team than we would have if we d doubled the team     Automated testing is basically a combination of individual tests  You have unit tests which double check single lines of code  You have integration tests that make sure different parts of the system are playing nice  And you have acceptance tests that ensure features are working as you envisioned  When you write these tests as automated scripts  you can essentially push a button and have your system validate itself rather than having to comb through and manually click through everything   Instituting this before hitting product market fit is probably premature  But as soon as you have a product you re happy with  and that users who depend on it  it s more than worth it to put this framework in place   Continuous Delivery  This is the automation of delivery related tasks that used to be manual  The goal is to be able to deploy a small change as soon as it s done and make the feedback loop as short as possible  This can give companies a big competitive advantage over their competition  especially in customer service    Let s say every time you deploy  it s this big gnarly mess  Entropy is out of control   says Goulet   We ve seen deployments take 12 hours or more because it s such a cluster  And when this happens  you re not going to deploy as often  You re going to postpone shipping features because it s too painful  You re going to fall behind and lose to the competition    Other tasks commonly automated during continuous improvement include   Checking for breaks in the build when commits are made   Rolling back in the event of a failure   Automated code reviews that check for code quality   Scaling computing resources up or down based on demand   Making it easy to set up development  testing  and production environments   As a simple example  let s say a customer sends in a bug report  The more efficient the developer is in fixing that bug and getting it out  the better  The challenge with bug fixes isn t that making the change is all that difficult  it s that the system isn t set up well and the developer wastes a lot of time doing things other than solving problems  which is what they re best at   With continuous improvement  you would become ruthless about determining which tasks are best for the computer and which are best for the human  If a computer is better at it  you automate it  This leaves the developer gleefully solving challenging problems  Customers are happier because their complaints are addressed and fixed quickly  Your backlog of fixes narrows and you re able to spend more time on new creative ways to improve your app even more  This is the kind of change that generates technical wealth  Because that developer can ship new code as soon as they fix a bug in one step  they have time and bandwidth to do so much more frequently    You have to constantly ask   How can I improve this for my users  How can I make this better  How can I make this more efficient   But don t stop there   says Goulet   As soon as you have answers to these questions  you have to ask yourself how you can automate that improvement or efficiency    Cultural Upgrades  Every day  Corgibytes sees the same problem  A startup that s built an environment that makes it impossible for its developers to be impactful  The CEO looms over their shoulders wondering why they aren t shipping more often  And the truth is that the culture of the company is working against them  To empower your engineers  you have to look at their environment holistically   To make this point  Goulet quotes author Robert Henri   The object isn t to make art  it s to be in that wonderful state which makes art inevitable    That s how you need to start thinking about your software   she says   Your culture can be that state  Your goal should always be to create an environment where art just happens  and that art is clean code  awesome customer service  happy developers  good product market fit  profitability  etc  It s all connected    This is a culture that prioritizes the resolution of technical debt and legacy code  That s what will truly clear the path for your developers to make impact  And that s what will give you the surplus to build cooler things in the future  You can t remodel your product without making over the environment it s developed in  Changing the overall attitude toward investing in maintenance and modernization is the place to start  ideally at the top with the CEO   Here are some of Goulet s suggestions for establishing that flow state culture   Resist the urge to reward  heroes  who work late nights  Praise effectiveness over effort   Get curious about collaboration techniques  such as Woody Zuill s Mob Programming   Follow the four Modern Agile principles  make users awesome  experiment and learn rapidly  make safety a prerequisite  and deliver value continuously   Give developers time outside of projects each week for professional development   Practice daily shared journals as a way to enable your team to solve problems proactively   Put empathy at the center of everything you do  At Corgibytes  Brene Brown s CourageWorks training has been invaluable   If execs and investors balk at this upgrade  frame it in terms of customer service  Goulet says  Tell them how the end product of this change will be a better experience for the people who matter most to them  It s the most compelling argument you can make   FINDING THE MOST TALENTED REMODELERS  It s an industry wide assumption that badass engineers don t want to work on legacy code  They want to build slick new features  Sticking them in the maintenance department would be a waste  people say   These are misconceptions  You can find incredibly skilled engineers to work on your thorniest debt if you know where and how to look   and how to make them happy when you ve got them    Whenever we speak at conferences  we poll the audience and ask  Who loves working on legacy code   It s pretty consistent that less than 10  of any crowd will raise their hands   says Goulet   But when I talked to these people  I found out they were the engineers who liked the most challenging problems    She has clients coming to her with homegrown databases  zero documentation  and no conceivable way to parse out structure  This is the bread and butter of a class of engineers she calls  menders   Now she has a team of them working for her at Corgibytes who like nothing more than diving into binary files to see what s really going on   So  how can you find these elite forces  Goulet has tried a lot of things   and a few have worked wonders   She launched a community website at legacycode rocks that touts the following manifesto   For too long  those of us who enjoy refactoring legacy code have been treated as second class developers    If you re proud to work on legacy code  welcome     I started getting all these emails from people saying   Oh my god  me too    she says   Just getting out there and spreading this message about how valuable this work is drew in the right people    She s also used continuous delivery practices in her recruiting to give these type of developers what they want  Loads of detail and explicit instructions   It started because I hated repeating myself  If I got more than a few emails asking the same question  I d put it up on the website  much like I would if I was writing documentation    But over time  she noticed that she could refine the application process even further to help her identify good candidates earlier in the process  For example  her application instructions read   The CEO is going to review your resume  so make sure to address your cover letter to the CEO  without providing a gender  All letters starting with  Dear Sir   or  Mr   are immediately trashed  And this is just the beginning of her recruiting gauntlet    This started because I was annoyed at how many times people assumed that because I m the CEO of a software company  I must be a man   Goulet said   So one day  I thought I d put it on the website as an instruction for applicants to see who was paying attention  To my surprise  it didn t just muffle the less serious candidates  It amplified the folks who had the particular skills for working with legacy code    Goulet recalls how one candidate emailed her to say   I inspected the code on your website  I like the site and hey  it s what I do   There s a weird artifact that seems to be written in PHP but it appears you re running Jekyll which is in Ruby  I was really curious what that s about    It turned out that there was a leftover PHP class name in the HTML  CSS  and JavaScript that Goulet got from her designer that she d been meaning to getting around to but hadn t had a chance  Her response   Are you looking for a job    Another candidate noticed that she had used the term CTO in an instruction  but that title didn t exist on her team  her business partner is the Chief Code Whisperer   Again  the attention to detail  the curiosity  and the initiative to make it better caught her eye   Menders aren t just detail oriented  they re compelled by attention to detail   Surprisingly  Goulet hasn t been plagued with the recruiting challenges of most tech companies   Most people apply directly through our website  but when we want to cast a wider net  we use PowerToFly and WeWorkRemotely  I really don t have a need for recruiters at the moment  They have a tough time understanding the nuance of what makes menders different    If they make it through an initial round  Goulet has a candidate read an article called  Naming is a Process  by Arlo Belshee  It delves into the very granular specifics of working with indebted code  Her only directions   Read it and tell me what you think    She s looking for understanding of subtleties in their responses  and also the willingness to take a point of view  It s been really helpful in separating deep thinkers with conviction from candidates who just want to get hired  She highly recommends choosing a piece of writing that matters to your operations and will demonstrate how passionate  opinionated  and analytical people are   Lastly  she ll have a current team member pair program with the candidate using Exercism io  It s an open source project that allows developers to learn how to code in different languages with a range of test driven development exercises  The first part of the pair programming session allows the candidate to choose a language to build in  For the next exercise  the interviewer gets to pick the language  They get to see how the person deals with surprise  how flexible they are  and whether they re willing to admit they don t know something    When someone has truly transitioned from a practitioner to a master  they freely admit what they don t know   says Goulet   Having someone code in a language they aren t that familiar with also gauges their stick to it iveness   We want someone who will say   I m going to hammer on this problem until it s done   Maybe they ll even come to us the next day and say   I kept at it until I figured it out   That s the type of behavior that s very indicative of success as a mender    Makers are so lionized in our industry that everyone wants to have them do maintenance too  That s a mistake  The best menders are never the best makers   Once she has talented menders in the door  Goulet knows how to set them up for success  Here s what you can do to make this type of developer happy and productive   Give them a generous amount of autonomy  Hand them assignments where you explain the problem  sure  but never dictate how they should solve it   If they ask for upgrades to their computers and tooling  do it  They know what they need to maximize efficiency   Help them limit their context switching  They like to focus until something s done   Altogether  this approach has helped Corgibytes build a waiting list of over 20 qualified developers passionate about legacy code   STABILITY IS NOT A DIRTY WORD  Most startups don t think past their growth phase  Some may even believe growth should never end  And it doesn t have to  even when you enter the next stage  Stability  All stability means is that you have the people and processes you need to build technical wealth and spend it on the right priorities    There s this inflection point between growth and stability where menders must surge  and you start to balance them more equally against the makers focused on new features   says Goulet   You have your systems  Now you need them to work better    This means allocating more of your organization s budget to maintenance and modernization   You can t afford to think of maintenance as just another line item   she says   It has to become innate to your culture   something important that will yield greater success in the future    Ultimately  the technical wealth you build with these efforts will give rise to a whole new class of developers on your team  scouts that have the time and resources to explore new territory  customer bases and opportunities  When you have the bandwidth to tap into new markets and continuously get better at what you already do   that s when you re truly thriving,"[1276 1061 190 363 1385 601 17 1195 19 441 1154]"
1292,training-dataset/business/1056.txt,business,What CEOs Do   Brian Armstrong   MediumWhat CEOs Do  Sometimes people ask me about what the CEO does   Before doing this job I had a visions of CEOs being sort of like military generals  motivating the troops before they went into battle  There was a lot of bravado and barking commands in my head   The problem was that this didn t seem like me  My style was more to listen and find consensus  I didn t feel confident giving orders to a large group  I was more comfortable building things  Could I even be a CEO   Later I realized that there are all sorts of CEOs  and many different styles can work  More importantly  it was better to double down on your strengths rather than trying to be something that you re not  Me trying to be the military general was going to come across incongruent and awkward  Instead  I could embrace my strengths  listening  building consensus  writing   Finding successful role models that match your style also helps  Page  Zuckerberg  Musk  and Gates are all classic  nerd  CEOs   The basic job of the CEO is three things   Set a clear vision  Get everyone rowing in the same direction  Get the right people on the bus  Recruit and retain a great team and board  Make sure there is enough money in the bank  Ensure the company is financially healthy   Once these areas are taken care of  many CEOs specialize in one area where they have a strength   Types of CEOs   Product focused CEO  Make the best products  Innovate  Be the easiest to use  Have a technological breakthrough  You ll tend to spend a lot of your time internally working with the product team instead of externally doing media  investor meetings  etc   An example here would be Larry Page or Elon Musk  Operations focused CEO  You re focused on process  scaling  and ruthless efficiency  You ll spend time holding your vast network of people accountable  tweaking the playbook  and running things by the numbers   An example here is probably Travis Kalanick at Uber  Sales focused CEO  You ll spend your time on the road evangelizing the product to customers  and building relationships  You re the rainmaker  bringing in new deals and revenue   An example here is probably Aaron Levie at Box  Marketing focused CEO  You ll spend your time telling your company s message  over and over again  to employees  candidates  media  government  and the world to create the change you want to see in the world  You inspire   An example here is probably Brian Chesky at Airbnb   Note  Consider the description of any of those example CEOs as an oversimplification  They each do much more than that one thing   Each approach is valid  and one is not necessarily better than the other  Great CEOs have a variety of areas where they are competent  but they choose to focus on where they are excellent  Then they build a team that complements them   For me  I m primarily a product focused CEO  When I go to bed at night and when I wake up in the morning  I think about the customer experience  The product is never good enough  It often causes me physical pain to think about the state of our product  when it s slow  buggy  inconvenient  unavailable in your country  etc   It s an obsession   People sometimes are surprised to see that I decline media interviews  investor meetings  and public speaking invitations  While I can do these things  I don t get energy from it  And there are people on our team who are better at it than me   Hopefully this gives a good sense of how to think about the different types of CEOs and some insight on how to best work with me,"[1292 19 63 1061 962 679 17 624 826 1243 190]"
1339,training-dataset/product/322.txt,product,Three Superpowers of a Product ManagerAs a product manager it s not uncommon to feel pulled in a million different directions as you work to meet the needs of your customers  developers and company stakeholders  While there are a large number of tools which claim to help you to create value  for me  quite frankly  it boils down to only a few secret weapons which do not  most of the time  involve buying fancy software or subscribing to the latest project management doodads   The practices I describe are not an exhaustive list of tools and methods  But they are good examples of what my team and I have developed together over the last four years at Zalora  They show what has worked for us successfully day in day out  and demonstrate that the powers of a PM boil down to communication  documentation and data   Communication Powers  Stakeholder Meetings  I meet my business stakeholders once a week  We meet at a regular time   which we block out in our calendars   specifically to sit and talk   There are times when we are done after a five minute check in with each other because everybody is pretty much up to date  At other times our meeting can span over an hour because there are lots of different topics to cover or we want to discuss the battle plan for one specific project in depth  The important message here is that you reserve time for each other and that everybody knows that this is the place and time to show up and discuss things   I have seen many honest attempts and promises between both parties to  meet more often  or to  keep each other in the loop   But in reality both the PM and the stakeholder are so busy that this can be easily neglected  Without this weekly meeting  you can find yourself lost between feature releases that your stakeholder doesn t know about yet and email threads which talk about new projects that you ve never heard of   If you have several stakeholders to take care of  schedule a meeting with each one of them  If you feel like meeting once a week is too much  in some cases fortnightly or monthly check ins are enough   Retrospectives  Retrospectives are a great way to check in with your development team  Although you don t have to be the initiator to organise a retrospective  you should certainly make a move to organise one if this has not yet been adopted by your engineering team   At Zalora we let every development team decide for themselves how often they want to hold a retrospective and who should be a part of it  It is open for PMs to join and for those who are working very closely with the team it is mandatory to participate   Slack  This one doesn t need much introduction  Just about every IT team I ve come across in the last 12 months has adopted Slack as their communication tool  Since it comes with a fantastic range of customisations  it helps to notify a group of people in real time and in a more meaningful way than an old school email inbox ever could   We have adopted Slack as the main communication tool for the Zalora engineering team  Some of the business teams have also adopted it and created their own channels for collaboration   Release Notes  This is particularly important in large scale organisations or when you build a customer facing product  There are thousands of ways the rest of the company can find out about the new stuff coming out   word of mouth  asking for an update on chat  stumbling over a new feature when using your website  Give your stakeholders and users the comfort of announcing new stuff via release notes   Make sure you notify them proactively   no one will go to a static web page of release notes and hit the refresh button every day   and present the information in a way that is easy and fast to digest  But please note that release notes are not meant as a user guide   level up your documentation powers for this weapon of choice   At Zalora we send out a nicely designed email for every major release to a large number of people in the organisation to reach as many people as possible  And we store every release note in a company wide shared Google Drive folder to make sure people can go back to one place in case they missed out on it   Templates to Report Issues  Are you flooded by a ton of issues  And for every poor soul who encountered a bug you need to write another five questions back to find out how to reproduce it  You can empower your stakeholders by giving them a template to fill out whenever they find a problem   Google Forms is your friend here  Letting people fill out a form will speed up time to resolution  It creates fewer communication loops and forces people to send you all the relevant information in one shot  You should spend some time and thought into how to design each field the stakeholder is supposed to fill out  You can even customise the form depending on the type of issue being reported by the stakeholder   Documentation Powers  Write a Handbook  Internal stakeholders need to know how the products you build work  So make sure you have a company Wiki or similar in place  somewhere people can learn about the inner workings of your platform  This should not be confused with technical documentation  Your stakeholders will be intimidated quite easily if they have to fish for information in between the code samples that can be found in a tech document   We use Atlassian s Confluence for how to articles on specific features that are targeted for an audience which is already using Jira since both can work nicely in conjunction with each other  For a complete handbook on how to use a certain software product we use Wikipedia s open source MediaWiki to create our own company Wiki as a knowledge base accessible to anyone within the company   Strategy Paper  Never heard of this one  Let me explain  In a strategy paper you lay out why a certain topic is important to the company  You explain the business opportunity  the challenges that come with it  the measures you plan to take to overcome them  The paper should cover a larger initiative which can then be broken down into separate experiments and features in order to execute the strategy laid out in the paper   Examples might include your product recommendation strategy if you are an ecommerce company  your payment strategy if your game app offers in app purchase or how you plan to reduce manual workload with automation in your company s warehouse   there is no limit to the range of topics that you can cover with such a paper   At Zalora  we choose a very simple structure for this document   The Vision   The vision lays out the target audience  what they need  and how you plan to deliver a unique offering  The vision can  but doesn t have to  include details of the market opportunity  size of target customers  positioning  competitive analysis  and goals  as well as open questions you have before starting the journey   The Goal   The goal is defined by of a list of output KPIs which measure whether you attain your goal  These are then broken down into input KPIs which contribute to reaching your output KPIs   Strategy and Actions   This describes the strategy and the actions you plan to take to execute it   Milestones   Milestones can be used to link back to the product roadmap and can even point to tickets with the detailed specifications for development  List the features that you plan to develop so that stakeholders can refer to them and have an overview how many resources you need to deliver the strategy   The strategy paper can be a living document that is edited along the way  It s very hard to know upfront which of your actions will be fruitful  Sometimes you will not get the result you expect and you will have to change course  After all  if the problem is easy to solve you wouldn t need a strategy paper to guide you   Tickets  There is a large range of ticketing tools available and I won t go into evaluating them here  Rather  I want to highlight why such tools are important to document your thoughts and expectations for any given development task   For me a good ticket is one that has a structure which is easy for anyone to understand   even if the reader is not aware of the context or doesn t have a deep domain knowledge  In larger organisations especially you need to be able to explain why a ticket is important as well as what you plan to achieve with it  Not everybody can have the same topic expertise as the product owner  so keep that in mind when writing a ticket   Once this is nailed down  a developer is much better prepared to follow your thoughts and contribute effectively to what you plan to achieve  That s why all of our tickets at Zalora  including bugs  start with a section called  Motivation  where this is explained  For bugs you can then explain how to reproduce the issue and what the expected behaviour should be   When you develop a new feature  you can explain what the feature will look like and how the end product should behave  This topic alone is probably worth another post so just remember that the structure of a ticket is important and that it is worthwhile defining a template that the whole team agrees on   The Power of Data  Big Data  We all want reliable data to guide and justify our decisions  And that s why you must make sure you have enough data  the right tools in place to collect it and that you take the time to analyse it   There is an abundance of tracking software available  If you are starting out fresh I would advise you to explore Google Analytics and Google Firebase  Both tools allow you to make sense of what is going on and either confirm your assumptions or visualise problems you were unaware of  Data can give you an abundance of inspiration for your development process and confirm if you are on the path to a successful product   Small Data  If you come from a data driven organisation then this is a tricky one  Small sample sizes will be shut down easily since they lack the statistical significance of big data samples   there is some good news here  User research studies show that 85  of usability problems are discovered after interviewing and observing a sample size of as small as five people   I think this good news for anybody who cannot get access to large samples of data  User research and user interviews are your friend when you test new waters and want to know not just what is happening but also why it is happening  My message is that both small and large data sets are important   so get familiar with both of them and use them as the third superpower in your arsenal of product manager skills   I practise all of the above tools and methods myself and they have been a great help in building a strong product organisation  Each one of them is easy to pick up and can work alone as well as in conjunction with each other  What do you consider to be your superpower  I am curious to find out in the comment section below,"[1339 168 116 1093 17 1061 19 190 826 742 441]"
1357,training-dataset/business/609.txt,business,Why You Need Two Chiefs in the Executive OfficeInfluitive CEO Mark Organ was feeling haggard  He d just raised a seed round for the 12 person marketing technology startup and was rapidly building out his sales department  As the company grew  Organ was becoming increasingly frazzled  He d forgotten his third meeting in a row and was missing deadlines left and right  His associates told him that he seemed unfocused and wasn t attending to their needs  They gently suggested he get an assistant  But that didn t feel right  Organ needed to be several places at once  What he really needed was to be superhuman   Then it struck him  He d once seen LinkedIn cofounder Reid Hoffman s chief of staff Sarah Imbach in action  She d ran meetings with grace and agility  asking the right questions and ensuring that every attendee had a chance to talk  Organ didn t just need someone to book his travel  He needed someone like Imbach  Someone who could substitute for him in meetings  Bring him the inside scoop from other departments  Take over projects he was too busy to do  Excited  he began to search for a hire  In the four years since  Organ  who previously founded the IPO d and Oracle acquired startup Eloqua and serves on the board of Mobify  has gone on to hire three chiefs of staff  CoS   Alums have transitioned to executive level roles at the company  Influitive  which now has 125 employees  is thriving   and so is Organ   The chief of staff role is starting to catch on in the startup world after decades of being common practice in the military  politics and at Fortune 500 companies  Here  Organ breaks down the three types of of people you can hire for this role  and how to scope and choose the best person for this critical job  He lays out pitfalls to avoid in the process and gives a step by step approach on how to most effectively manage your chief of staff  Organ also spells out when you need a CoS  and and when you don t need one   and explains how to help transition them when their tour of duty is over  Let s get started   Scoping the Job  Let s kick off with the basics  what s a chief of staff  exactly  It sounds like an elusive title  and that s because  well  it kind of is   there s a lot of variability in the type of person you can hire for the role and what that person will do   The chief of staff role is an intensely personal one  This is a position scoped for the CEO  and it has elements of both an executive assistant and a COO  Like an EA  a chief of staff works only for the CEO and doesn t have direct reports  except maybe an intern or executive assistant  Like a COO  a CoS works on strategic and critical items  working with employees as well as customers and board members  To be very clear  while the CoS makes many important decisions and has strong leadership skills  this is a service role  The job is to make me a superhero  That means I m front and center   Organ says   I can make better and faster decisions thanks to their work  I ve got a lot more of the insight I need  I ve got a greater ability to drive high performance by developing deeper relationships with my team  I m better able to hold people accountable to their commitments  I ve got this person whispering in my ear every day  telling me what to focus on and giving me key insights  They help lead the company from the shadows    While it can and will vary  here are a few high level responsibilities your CoS will have   Ensure the CEO is working on the most important items for the company   Help complete priority items for the CEO to an appropriate level of quality   Keep the CEO accountable for commitments  while helping keep reports accountable for results   Keep the CEO accessible and open to new ideas and proposals   Unique to this particular hire is its rotational status  A typical tour of duty for a chief of staff is 18 months at Influitive  After that  they can transition to another role within a company  often in a position of leadership  One former Influitive CoS is now the company s director of market expansion  while another alum became the VP of Europe after serving as VP of talent   Your chief of staff s background can span a range of experience and seniority levels  so know the different packages this role can come in  Organ gives these three points on the spectrum of hires you can make   A manager level hire  This person would be responsible for typical administrative tasks like calendar management and booking travel  but he would also make important judgment calls on how the CEO should best spend her time and what meetings would be most valuable for her to attend   A mid career  director level hire  This person may have 6 12 years of experience  He would be in charge of tasks like running town halls  preparing speeches and prepping the CEO for leadership meetings  He s unlikely to take on any strategic responsibilities  however   An experienced VP level executive  This person is already an experienced executive who s looking to become a CEO one day  She may meet with department heads to talk through goals and targets  and work on developing tactics for various parts of the business   Here are broader responsibilities carried by a stellar chief of staff   Ensure the CEO is prioritizing the right things   They do that by understanding what s really going on in the business  internally and externally  I m more of an externally oriented CEO   I like closing deals  interfacing with customers and hosting events  So my chiefs of staff spend more time understanding the internal dynamics and where I need to focus my attention  though they ve also done customer tours and reviews of our satellite offices when I ve needed to spend more time at headquarters   Organ says   They ve played a critical role in internal matters  Earlier on  we had a management team that wasn t gelling very well  My CoS at the time  David Axler  did a phenomenal job of helping me build a cohesive senior leadership team  He initiated daily lunches and coffees with every employee in the company to gain insights on how the team was performing  He organized team building offsites where the senior leadership team was coached on how to be more open  vulnerable and direct with each other  Then he followed through to see that the changes that were initiated were sticking  The impact of gelling a new senior team like this is impossible to overstate  and I couldn t have done it on my own    Level up the executive team   A great CoS enhances and raises the game for the entire leadership of the company  They do that by providing effective feedback on ideas and proposals from team members  Sometimes they push back when the analysis has not been well thought through  In those cases  they pitch in and help make them better  They also let me know when someone is doing an exceptional job so that I can praise them specifically and effectively   Organ says   You need someone who can help you tune in internally  You need someone to be your eyes  ears  hands and feet in terms of developing and hiring the right people  I needed a person to identify rock stars to invest in and uncover mis hires earlier to get them off the bus faster  A good CoS is constantly monitoring the health of the organization and making specific recommendations on how to improve it    Amplify and improve the CEO s communication   A CEO spends most of the day communicating  so effective communication is a big part of the job  Presentations need to be comprehensive and crisp  particularly for important communications to boards  town hall meetings  critical customers and analysts  A little effort can improve the effectiveness a lot  I look for storytellers when I hire chiefs of staff   Organ says   I recently had a board call  and usually I prepare a small deck that I send to my board members  But this time I had my current chief of staff Bronwyn Smith do it  I expected to have to spend two hours editing her work  Turns out I had to do exactly zero work on this deck  It was unbelievable  She said everything that I would have said   and that she had heard during our time working together  Her analysis was spot on  and it saved me an immense amount of time and trouble  equipping me to effectively communicate at an important meeting    Act as a stunt double   A chief of staff creates accessibility and availability in a CEO s schedule  He must be an effective substitute for when the CEO is needed   whether that s at key internal meetings or client onsites  Train them to think the way you would think by sharing the logic behind your decision making  Seat them in your office and muse out loud  They should know at all times what s important to you   Organ says   As the chief of staff gets more comfortable in this role  you ll start to see that they start to shine at this  People will start requesting them to facilitate meetings  or sit in on important customer calls  I ve seen this happen with all three of my chiefs of staff  and it s not only a great feeling to see them grow  but it s also a huge relief to know that the company is in good hands when my back is turned    Do whatever needs to be done   It really takes a can do  will do attitude to do this job  Some people can t handle that  It s not all glitz and glamour  While I would never have a chief of staff do a job that I haven t done myself  the tasks you assign them can range from high level to basic   Organ says   One memorable example is when I decided it would be a great idea to shoot plush unicorns out of an air cannon for a talk at a startup festival  David rented the cannon  bought the stuffed animals and got them shipped to Montreal  It was a big hit  but someone had to handle the nitty gritty of coordinating the stunt  That person was my chief of staff   Mark Organ shooting plush unicorns out of a cannon at a startup festival   As CEO  I m the one on stage  I m doing the tap dancing  If my chief of staff is doing her job  I get an encore   When You Need a Chief of Staff  It can be hard to know whether you need this particular role  It s possible you only need an executive assistant  or you may need a different executive level hire entirely   According to Organ  here are some signs you need a chief of staff   Your team is getting bigger and harder to manage   You re growing after raising a seed or Series A   You re wishing you could multiply yourself and be everywhere at once   You re harried and burnt out because too much is on your plate   Your employees are pressing you for decisions or deliverables that you aren t hitting   You want to be more effective but aren t ready for a COO or second in command   Here are some signs that you don t need a chief of staff   You re very price sensitive   this hire could cost  75 000  200 000    You re pre product market fit   You re not ready to scale your company   Your executive team configuration doesn t allow for an effective chief of staff   for example  strong personalities that might prevent a CoS from getting her job done   Ultimately  though  it s a judgment call   This is a high risk  high reward hire  Most likely you ll know when you need a chief of staff  You ll feel that void where you wish you had someone helping with certain aspects of your job  Don t confuse that need for a different executive hire   Organ says   I ve seen startups hire COOs when really they needed a CoS to augment the CEO s capabilities  In a small company  senior leadership team members join because of the CEO and want to report to the CEO  not a COO or second in command  Use these guidelines to carefully determine what role is most needed on your team  The more thought you put into it  the higher your chances of making the correct call    Scoping Out the Role  If you ve chosen to bring on a chief of staff  then it s time to kick off your hiring process  Begin by determining where you need a chief of staff to be especially strong  Perhaps they have strengths that are your weaknesses  or they re particularly talented in an area that s currently important at your company   You ve got to analyze  What are the key things  Do I need strong communication  I might need someone who s talented in that area  like Reid Hoffman s former CoS Ben Casnocha  who s now a renowned author and speaker  Do I need somebody who can run a department  Do I need somebody who s really strong in organizational behavior and gelling the team  an executive coach type   Organ says   When I was hiring my second chief of staff  I realized I needed someone with really high EQ  who could help my leaders gel better  We had new hires who weren t completely aligned  and disagreement was frequently bubbling to the surface  So I hired David  He d done organizational design and managerial effectiveness in his previous work  He d once handled a project co led by a European company and a American company  The operating model was completely ineffective  and both sides essentially hated each other so much they couldn t be in the same room  Within three months he had everyone committed  smiling  working well together and back on track to the critical path  I heard that and said   That s my guy     Organ has a few tips to kickstarting your search  First  ask yourself these questions   What s the vision for myself as a CEO  Where do I want to go   What do I most need help with   What don t I want to do that I d like to delegate   Am I prepared to give someone access to every corner of my professional and personal life   Once you ve scoped out what you really need and want in this role  put the word out for candidates  Market the job as a fantastic way to gain hands on management experience   Our belief is that this is a strict 18 month tour of duty  Usually by that time they re such effective leaders that it s useful to the company to have them run something else while recruiting a new chief of staff   Organ says   Being a chief of staff is a way to accelerate your career growth  If you leave the company  the world is your oyster   you can become a founder  CEO  COO or a VP  It s very versatile training    At the beginning  Organ likes to do an initial interview screen  In the past  he s also hired a consultant to screen candidates  Because he s looking for someone who s decisive and can motivate people  he designs the interview around that characteristic  Here are some questions Organ likes to ask at the start   What s the most difficult decision you made over the last year  How did you make it   What s the worst decision you ve made in the last year  How did you recover   Tell me about how you ve been able to motivate somebody who wasn t particularly motivated  How do you make that work   How do you know that a project is well thought out  What kinds of questions do you ask   If you have a proposal that s missing some key elements  how do you deal with that  When do you dive in and help a person produce better work  When do you push it back and say   You really haven t thought this through   come back when you ve thought through this some more    Dig for answers  but don t put too much stock in an interview  Your next step is to assign them a project   It s very effective  Simulate the job  and have them do it  That s particularly important in the chief of staff role  For my first CoS hire  we designed an assignment  put together an event for determining Influitive s product direction  The winning candidate  Fraser Stark  worked with one of our managers to put together this event  After that  we knew he was great  He pushed back on the right things  He asked all the right questions  People on my team who worked with him said   This felt really natural  We produced a much better product with him    Organ says    A project is a better way to evaluate somebody than asking a bunch of canned questions  One of my other candidates that I thought quite highly of didn t really enjoy the assignment  He d been a CoS in politics  and thought it would be really fun to go to a startup   says Organ   We quite liked him  but he came out of the assignment and said   This is way too ambiguous  I didn t really enjoy this   I said   You re not a good fit for the job then  because we do this all day long  We deal with an incredible amount of ambiguity  and we re looking to you to create order out of that chaos   The assignment helped us suss that out    Managing Your CoS  Once you ve made your hire  it s time to manage training and build your day to day rapport  The relationship between the two of you is crucial  so make it as close as possible   I interact intensely with my CoS  First  they sit in the same office with me  listening to my musings about our challenges  They listen in on my phone calls and attend my one on one meetings unless specifically dismissed by the person I am meeting with  which doesn t happen often  They can also read my emails   Organ says   We probably Slack 10 to 25 times per day  I don t hold back and I tell them everything  They have to know me and how I think  The goal is for the CoS to be able to predict how I would make decisions    Organ provides the following tenets to create the best relationship and workflow possible between your chief of staff and you   Write a roadmap for your 18 months   In the first six months  it s a good idea to limit  stunt double  work  where they re basically subbing for you in meetings  It takes time for the CoS to develop the knowledge and credibility to be effective in both internally and externally representing the CEO  If you throw them in the deep end too early  they may not have the consensus needed to lead   Organ says   Months 6 12 you should be in high gear  At this point they ll have built the relationships they need with other executives  and have enough experience to be flying more solo  Then  after 12 15 months on the job  it s time to think about the next tour once the 18 month term is over  Start talking about what they want next  Once you know that  make sure they re developing skills relevant to their next job in their final months  Finally  task them with finding their replacement around the 14 month mark    Organ s suggested timeline for how to manage your chief of staff   Structure your time intentionally   Every Monday morning  my chief of staff and I have a half hour meeting to go through the week together  We decide which meetings we will attend together or alone  when it makes sense to travel  who we need to spend time with and the goals for these meetings  In general  if it s an external meeting where there s a prior relationship  I need to attend the meeting personally   Organ says   We also go through the various projects we are working on  get sideways projects on track and figure out what we can delegate  We discuss performance of team members   who should have direct recognition and who is unhappy  All of this creates smoother sailing for you and for your company    Present the chief of staff role in a way that sets them up for success   People generally won t be offended when you hand them off to a high caliber chief of staff  Sometimes it s even preferred  There tends to be better follow up than when an absent minded CEO is taking the meeting   Organ says   It s all in how you present it  The language that we use is that the CoS  job is to prioritize the effort of the CEO  Let everyone know that this person is the one who has your ear  controls your schedule and prioritizes your work  The better you communicate that  the more people will warm up to the idea    Your chief of staff is your ambassador  He s your stunt double  He s the next best thing to you   Open up so your CoS can best assist you   You have to trust this person completely  so hire someone you feel completely safe with  You have to have to be secure and confident in yourself  Then be super open and vulnerable  You must want to see your chief of staff succeed  Tell them what s on your mind  I spend a lot of time with them  Sometimes we just talk about random stuff  other times it s more focused   Organ says   I ve logged at least three hours talking to Bronwyn over the last month about all the different board members  What are their issues  What are their fears about me  She knows my deepest fears about my board members  She knows what I m excited about  She knows everybody s personality  That s because I talk to her constantly  She s a key confidante  If you want your chief of staff to succeed  don t hold anything back    Don t be threatened by their success   Bronwyn has blown through all of my ridiculously high expectations  She s been with me four months but is performing as if she s been here a year  If you re an insecure CEO  and unsure about your place in the world  having a powerful  effective chief of staff might actually make you nervous  You d be like   Man  she wants my job    Organ says   If you find yourself in this scenario  check yourself before you wreck yourself  My job is to surround myself with the best possible people  I m not threatened at all by Bronwyn being able to produce a deck for my board of directors  Those are my bosses  and she produced a better deck than what I d ever do alone  Instead of frantically making a board deck for the last two days  I ve been with people  I ve been walking the floor  I ve had a couple extra calls with customers that I would not have had  because you know what  She produced something that normally only I could do    Listen to your instincts   I still am what I am  Every now and again I ll still tell Bronwyn   With all due respect  I know you want me to do X  I don t feel like doing X  I m going to go visit some customers  Bye   I do have good instincts  and I respect them  That s an important thing that a CEO learns   when to listen to that inner voice   Organ says   At the same time  your chief of staff will have a powerful voice  too  And that s to your benefit  It s fine to disagree at points  but for the most part  your CoS and you should be a well oiled machine  Bronwyn and I are practically a two headed monster  I trust and listen to her input  but there are times you have to make a call that goes against their assessment  and that s okay    A stunt double is still not the real thing  Sometimes people just need you   really you   in the flesh   I got some sharp feedback the other day  A colleague said   Mark  Bronwyn is not a replacement for you  She does a great job  and we like her  but sometimes we need you   actually you  I took that to heart and now I ve set up weekly lunches with different departments  Bronwyn actually helped me come up with that idea   Organ says   I always felt that having a chief of staff made me way more accessible  There s some truth to it  but what we re learning more how to answer is  when do people need me in the flesh  and when should Bronwyn take it  It takes a lot of trial and error  but it s important to nail    Influitive s current and former chiefs of staff with CEO Mark Organ  From left to right  David Axler  Mark Organ  Fraser Stark and Bronwyn Smith   Transitioning Your CoS  Finally  at the end of 18 months  it s time to start transitioning your chief of staff   While it may be hard to let go of someone who s been so critical to your success  it s for the best  At this point they ll be antsy  It starts to get confusing after awhile  For Fraser  he often facilitated meetings  and people became unsure of his role  Is he my representative  my proxy or is he Fraser  After a while  Fraser didn t even know who he was   Organ says   About 12 15 months in  your chief of staff will likely have an identity crisis  If they don t  you probably don t have somebody who s going to be a future leader in your company  They ll be gaining more confidence in themselves  In this case  others were gaining confidence in Fraser  People were asking him for advice  not because he was a sort of psuedo me  but because he s brilliant in his own right    While there s no formal roadmap for the transition  Organ s chiefs of staff have gone into executive positions   Usually at the 15 month mark  I start taking my chief of staff to dinner  Over the course of three or so dinners we ll talk about their interests and what they hope to become  Fraser was interested in talent  so we made sure he was picking up skills in that area  The same went for David and general management responsibilities   Organ says   The best chiefs of staffs do the job because they re attracted to the rapid career development that s possible  It is the fastest opportunity to grow because they learn from the CEO s vantage point   even senior VPs don t get to see that  Chiefs of staff are massively overrepresented in the top echelons of the Fortune 500  the military and politics  The same will happen for startups  people who have done the chief of staff tour of duty will disproportionately become the most successful founders and CEOs    After 18 months of being your stage manager  it s time to let your chief of staff lead  It s her turn to take the stage   Be Chief of Your World  A chief of staff takes control of a CEO s schedule and priorities  She ll whisper hard won insights and instruction into your ear and work to help you lead the company from the shadows  Start to look for a CoS after your seed or Series A  Determine where your needs land on the spectrum between an advanced EA and a VP  Hire the right person by giving them a real assignment  but first define a vision for yourself as a CEO   and suss out what strengths your company needs most at this time  Build the closest relationship possible with your CoS by opening up everything from your email to your deepest fears  A good chief of staff will be a trusted confidante and advisor  but always listen to your own intuition  Let them wrap up their tour of duty by finding their replacement  Transition them to a great role in your company that aligns with your needs and their desires  and then get ready for your next CoS hire    My level of focus has completely shifted in the past four years  Before I had a chief of staff  I d float  saying   I feel like talking to some customers   or  I wonder what s going on in product  I m just going to go mosey over there and see what s going on   Now  there s much more purpose and intent  I ve got somebody who really knows what s going on  who tells me  This is what you should be doing right now    Organ says   It s brought me a firm feeling of calmness and security  I m giving better service to my customers and my employees  It s my job to provide a great experience for others  and now I know I m doing that  That was always my intention as a leader  but not always the reality as a human steering a fast evolving company  My catalysts have been my chiefs of staff    Photography courtesy of Influitive,"[1357 19 1061 679 1154 962 190 17 960 1243 624]"
1371,training-dataset/product/1436.txt,product,Scaling Lean Principles by Jeff Gothelf315 Flares 315 Flares    Coach  lean advocate  and author Jeff Gothelf talked about scaling Lean principles at this year s London  mtpcon  Lean methodologies work well for a single team observes Gothelf   A lean startup reduces risk by regular and continuous experimentation  When you take the concept of lean and combine it with agile you start to build a practice of continuous learning  and at the core of continuous learning is experimentation and humility  For lean and agile thinking to work we need to have a humble mindset  we work in software  which is complex and unpredictable  and it requires the organization from the top down to embrace a position of humility    Experiment Or Die  For start ups it s  experiment or die   says Gothelf  You know your choices  their consequences  who you have and don t have to do the work   Most importantly you know how much runway you have and you know that if you make the wrong decisions a couple of times in a row you re out of business    In bigger companies this all changes  With a larger scale comes more responsibility  access to more money  larger teams and a seemingly endless runway  There s the ability to keep spinning out products and services and extending their lives without any humility or experimentation and learning   And yet  with my clients it s all agile and lean   everyone wants to be like a start up   Gothelf says  But  it turns out when you take the concept of humility  of continuous learning  to larger organizations it starts to break   This happens for any number of reasons   business case  short term business needs  process  approvals  silos  concerns about the impact on the brand  deadlines  targets  and so on   A Framework For Big Companies  So how can big companies move past these hurdles  Gothelf suggests looking at lean at three different levels in a large organization   project  program  and portfolio   and says there are specific challenges to scaling lean at each level   At a Project level  most teams are incentivised to get product out the door as fast as possible  They struggle with making product discovery and delivery work together  and they have no autonomy to make decisions  They have an incremental mindset  and the perceived risk to brand and current is always front and centre of their thinking   most teams are incentivised to get product out the door as fast as possible  They struggle with making product discovery and delivery work together  and they have no autonomy to make decisions  They have an incremental mindset  and the perceived risk to brand and current is always front and centre of their thinking  At a Program level  here the problems get a little bigger  How do you coordinate teams and manage their knowledge  What about offshoring and distributed teams  It becomes even more difficult to build a continuous conversation about what is being learned and how to change course   here the problems get a little bigger  How do you coordinate teams and manage their knowledge  What about offshoring and distributed teams  It becomes even more difficult to build a continuous conversation about what is being learned and how to change course  At a Portfolio level  it becomes even more complicated  You start looking at discipline and business unit silos  IT as a service provider  short term business value  annual planning cycles  incentive structures which are focused on delivery  and governance   There is no shortage of frameworks available for lean startup at scale  says Gothelf   As a place to start they re fine  But these frameworks are not end points  In order to evolve them into something that makes sense where you work you should start to think about principles  not the processes you want to scale  In other words  how do you want to work  Not what are the rituals you want to practise every day    Four Principles That Scale  Gothelf sets out four principles that he believes can help product managers apply lean at scale   1   Customer Value And Business Value Are The Same  If you build a product that makes your customers successful  that respects their time  is easy to use and solves their problems  then they will reward your business with loyalty and longevity  says Gothelf  And a tactic to achieve this  he adds  is to manage to OKRs  OKRs  objectives and key results  are outcomes  so they are measures of customer behaviour  The objectives are qualitative  inspirational  time bound and actionable by the team  The key results are quantifiable and cascade down throughout the organization   For example  a portfolio level objective might be to become the dominant platform for car dealer inventory management by Q4 2016  Key measurable results are as follows  50  of all independent dealers are customers  six out of 10 car manufacturers mandate the platform for their dealerships and 40  of car auction houses use the inventory API  These OKRs are all customer measures of success  says Gothelf  and they can be used to reduce planning horizons  This means that decisions can be made based on evidence from a short time frame and also based on customer success metrics   2   Value Learning Over Delivery  One tactic to ensure the success of this principle is to build momentum with pilot teams  says Gothelf  A pilot team s goal is to learn not necessarily to ship product or make money  The team s velocity naturally will be slower  he says  but they are working out how to operate within the confines of the organization  Give the pilot team sandboxes  both organizational and digital  says Gothelf  and encourage creative experimentation   3   Radical Transparency  People get scared whenever there is change in an organization  so the more transparent you are the less fear there is  Gothelf suggests that rituals are an effective way to introduce transparency   Get people to practise things like stand ups  demo days  progress reports  anything that exposes the work you re doing  People don t think they re learning anything  and it s this transparency that gets you to a level of trust and a continuous learning mindset    Access to customers also brings transparency  comments Gothelf  as customers are the ultimate test of whether a product is valid or not   The more we can give product teams exposure hours to customers  the more transparent we are about why we make certain product decisions   Access to data is also fundamental to transparency  he adds   don t make analytics difficult to get to    4   Humility In All Things  Just because we ve always done things one way doesn t mean that it should continue  says Gothelf   approach your work with strong opinions but be willing to change your mind in the face of overwhelming evidence   Product discovery is a great way to put humility into your work  he adds  it regularly challenges your assumptions and makes you think about what you re trying to learn   As we scale continuous learning we have to start looking at staffing with a new lens  Gothelf adds  There may be jobs that we carry with us simply because they ve always been with us  He says   As you build autonomous  empowered  self organizing teams there may be some jobs that may need to be transitioned into new roles  Are they roles we truly need with continuous learning teams or do they add process for process  sake    He also advises that organizations look at whether they provide a tech stack that is modern enough to allow teams to build continuous learning into their work   Carve out a Safe Space  It s a top down effort  summarises Gothelf   You already want to work this way  We need executive support  We need humility at the executive layer to say we re running a software based business and it s different  If you re not that executive  then you need to find them  Seek out the executive with the clout to carve out a safe space for you and you teams to try out continuous learning  lean startup and product discovery,"[1371 901 441 1061 190 826 115 19 1384 120 220]"
1376,training-dataset/product/432.txt,product,The Four Villains of Product Management   Product CoalitionThe Four Villains of Product Management  Product Lessons from Decisive  part 1   The new book Decisive from Chip   Dan Heath  Switch  Made to Stick  helps you think about making decisions more effectively  Even better  the lessons they share are directly applicable to making great products   These two articles are an attempt to distill the information they share and help you understand how to apply their ideas to developing and building products  Hope you enjoy these great lessons  and check out the book for tons of examples and stories   The Heaths start out identifying the saboteurs to good decision making  They call these the  Four Villains   and explain what they are and how to avoid them   Hook  the embodiment of Overconfidence  The  Four Villains   Narrow Framing Confirmation Bias Short term emotion Overconfidence  Narrow Framing   Yes or Not Yes  is an immature decision making process  The Heaths say this is the type of reasoning teenagers use  which might explain some of those bad decisions I made in high school   It turns out  most organizations use  Whether or Not  reasoning frequently  When your team starts heading into a decision that is framed like   should we do this or not   start sounding the warning bells  Your options are often wider than you think   One useful tool to widen your scope is to imagine that the options you think you have aren t available  What else is there   Consider the opportunity cost of any decision  If you decide not to do what you had planned  what other projects could you use the resources on  This is an important test for feature development  since you always could build something   If you decide not to do what you had planned  what other projects could you use the resources on   The best decisions are made among 2 3 choices  Though it s good to widen your horizons beyond  should we do this    too many options can also pose a problem  You may know about the study that tried offering some shoppers 24 types of jam compared to presenting three types to other shoppers  The group with 24 options bought jam 1 10th as often as the ones who were offered three   It might seem like users want the freedom to customize your product in every way possible  but evidence suggests that fewer options  when well designed  lead to greater satisfaction  This paradox is referred to as choice paralysis  The Heaths make suggestions of how to get the best limited options to choose from  which we ll look at in the next post   Confirmation Bias  We tend to gravitate towards ideas that confirm our existing thoughts  Sometimes  knowing this can help you be a better negotiator  if you can make others believe your solution matches their idea   However  to make great decisions  you need to develop techniques to spark constructive disagreements within your team  Ask disconfirming questions that help to get people to consider their biases  Consider taking on the opposite viewpoint from the one you are promoting and create a list of supporting points  so you can understand how other ideas can add value  and potentially come up with new ideas that solve more issues  Make deliberate  mistakes  or consider the outcomes that might arise if the mistakes were made   Using anonymous polling can help quieter voices be heard   Notion Team Poll   In situations with status dynamics  ask more open ended and less confrontational questions  You want to make sure you hear great ideas from people who might not have as loud a voice or be as comfortable speaking up  Using anonymous surveys or team polls can help to uncover your team s silent opinions   Short term emotion  Fleeting emotions tempt us to to make bad long term decisions  In particular  the feelings of  comfort with familiar things  and  loss aversion   when you imagine not having something you have or have planned for already  can lead to status quo thinking   There are a couple of techniques to deal with short term emotional thinking  Imagine an observer s perspective or what your perspective will be like as a  future you   Use 10 10 10 analysis  where you imagine what the results of your decision will be like in 10 minutes  in 10 months  and 10 years  Of course  if you are making software products  thinking about ten years away might be looking into the mouth of the Singularity  so try imagining the decision in five years if ten is impossible to imagine   Use a roadmap to think about the far future   Product Plan   Another suggestion  imagine what you would advise a close friend to do if they were making the decision  Try and release yourself from some of the personal fears and ego investments that can block your vision   Overconfidence  Many poor decisions can result from overconfidence  even though that same overconfidence can help to drive you to attempt ambitious goals  If you don t consider negative or alternate outcomes  you may be blindsided  This is important for product managers and owners  who need to assign a limited amount of team resources to building features that increase user happiness   The first technique they suggest to combat the perils of overconfidence is to  bookend the future   Compare a dire scenario versus a rosy outcome  What are the realities of each one   Another great method to bring yourself into a realistic mindset is a  premortem   Much like doing a retrospective at the end of a sprint  but in reverse  a premortem works by having you imagine if  in a year  quarter  or even at the end of the next sprint  what would happen if you utterly failed to achieve the goals you set  Then  consider what your situation would look like if you were completely successful  Would you be prepared for success   If  in a year  quarter  or even at the end of the next sprint  what would happen if you utterly failed to achieve the goals you set   A premortem can help you to identify some of the factors you might otherwise be blind to in making product decisions  and can also help you to contextualize your decision for your team and stakeholders   The last suggestion the Heaths make to avoid the effects of overconfidence is to build in a safety factor or  buffer factor   The idea here is to plan to get more done or make a feature more bulletproof than you think you actually need  There are risks with this for software teams  you don t want to reduce morale by putting more than your team can actually handle on a regular basis  On the other hand  building in more feature testing and QA than you think you need may end up uncovering bugs that could cost you time and customers later   To bring this all together  avoiding the Four Villains can help you to reduce some of the cognitive bias you naturally bring to any decision  But if you re not relying on these old methods  what should you do,"[1376 77 938 17 1387 839 1146 190 116 1061 1093]"
1384,training-dataset/business/859.txt,business,How A B Testing at LinkedIn  Wealthfront and eBay Made Me a Better ManagerOver his career  Instacart VP of Product Elliot Shmukler has seen the interplay of people and products unfold across many industries  For instance  the former Wealthfront and Linkedin product leader knows that much of what takes people sideways with money and career involves emotions  He s also seen the same dynamic at play as product managers make decisions to pursue ideas  essentially their currency at a startup  Bake into the equation different product management styles with shrinking launch windows and the pressure compounds  That s why Shmukler champions A B testing not only as a sound product development practice  but also as an effective management tool   While at eBay  Shmukler pioneered the use of A B testing to improve eBay s Search experience and helped launch eBay Express  its largest product bet at the time  At LinkedIn  he led a 15 person product team that was responsible for nearly half of LinkedIn s page views  While he was the VP of Product at Wealthfront  Shmukler not only helped the startup grow from  150 million to over  3 billion in client assets  but also launched Direct Indexing  Single Stock Diversification Service and its first mobile app  Over his career  he s learned to extract the full benefits of A B testing for his products and team   In this interview  Shmukler shows why he uses A B testing as a management framework  illustrating how it works to not only accelerate decisions  but also empower the teams making them  He outlines the framework s benefits and challenges  as well as how to implement and scale it a startup  Any product or growth leader will learn from his data driven approach to product and team management   A Tale of Two Decisions  At the heart of any management framework is the goal of making better decisions  As people naturally gravitate to the different permutations of better   quicker  higher quality  cheaper  etc    they neglect to take a nuanced look at the distinct types of decisions that a company makes  In an annual letter to shareholders  Amazon CEO Jeff Bezos speaks of two varieties of decisions  the irreversible  Type 1  and the changeable  Type 2   Here s how he describes them   Type 1 decisions    Some decisions are consequential and irreversible or nearly irreversible   one way doors   and these decisions must be made methodically  carefully  slowly  with great deliberation and consultation  If you walk through and don t like what you see on the other side  you can t get back to where you were before    Type 2 decisions   But most decisions aren t like that   they are changeable  reversible   they re two way doors  If you ve made a suboptimal Type 2 decision  you don t have to live with the consequences for that long  You can reopen the door and go back through  Type 2 decisions can and should be made quickly by high judgment individuals or small groups    As a company grows  there s a tendency to broadly apply the Type 1 decision making process to every choice  including Type 2 decisions  To paraphrase Bezos  what results is a slowness and an unthoughtful risk aversion that leads to a failure to experiment and diminished invention  If Type 2 decision making is applied indiscriminately  he argues that most companies will go extinct before they get large  having used a lightweight process for irreversible choices   Shmukler believes universal A B testing is an ideal way to focus an organization on using Type 2 decision making for most choices  He says   In the traditional sense  A B testing is about having at least two versions of the product live  an A version  typically the original implementation or control  and a B version  which you think might be better   says Shmukler   Thus when A B testing is applied to Type 2 management decisions  it s very easy to walk back through the door as Bezos suggests by simply turning off B and returning to A  Universal A B testing may even highlight when a Type 1 decision is needed  If you re having significant trouble coming up with a way to test a direction or sense you won t be able to roll back the test without consequence  you might be dealing with a Type 1 decision    While Bezos warns of  one size fits all  decision making from the helm of Amazon  Shmukler has seen similar pitfalls at early stage startups  especially in the product management function  The notion of PM as CEO of her product is well known  but when it comes to decision making  there s a real truth to it  The path to shipping a product takes an acute ability to expertly triage different types of decisions along the way  To complicate matters  product managers naturally bring their own management style to how they make the decisions   Elliot Shmukler  A Case For A B Testing as a Management Framework  Early in his career  Shmukler co founded Sombasa Media  which he eventually sold to About com  It was at his startup that he first noted two different product management styles of making decisions  the way of the visionary and the data driven PM   The visionary product manager reads the tea leaves and decides more on gut feel  while the data driven PM uses experimentation and analysis to make calls   he says   There are many effective decision making frameworks out there  but I wanted to use one that would simultaneously surface the best choice for the product while still encouraging the inherently different approaches to ideation among my product managers    For visionary PMs  a lot of power is generated when they know something works and they want to bring it to the rest of the world  Shmukler admits that many of the visionary PMs that he s known have been or become founders or CEOs  because of their deep belief in taking something personally relevant to scale   Reid Hoffman built LinkedIn to reflect how he approached professional networking and his vision for how it should work online  Obviously  the product has evolved over the years but the site is still largely true to his original vision  which was right on the money    Data driven PMs develop their insights methodically and are less headstrong before making decisions   I d characterize these product managers with the phrase   strong opinions  held weakly   Data driven PMs come to their stance not so much from how they re living their life  but by looking at and collecting new data  As more information comes in  they re much more likely to refine those insights   says Shmukler   It s more of a challenge to give recognizable names for these types of PMs because the data is at the forefront  But you ll find them working on growth teams and gravitating toward roles where data already has a very strong role    Given these vastly different styles  it can be a challenge as a leader to reconcile these different approaches to product management  For heads of product  this scenario may sound familiar  a visionary PM says   We need to do X   Then  a data driven PM responds   No  X is wrong  It won t work  We need to do Y   Shmukler faced this countless times   and on a daily basis as his team grew   It s draining and very hard to resolve without seeming to favor a side   says Shmukler   Instead of giving a verdict  test both theories and let data be the judge  At first pass  this method may seem to favor the data driven people  but it empowers each PM to push ideas forward  They learn independently rather than feeling that a decision was made for them    Your team s undoubtedly better with diversity of thought  but trigger the relief valve when tension mounts   To illustrate its simple effectiveness  here s how Shmukler has applied A B Testing as a management practice   A group of visionary PMs wanted to change how we talked about the company  specifically in the language on our homepage  The more metrics driven PMs said they had run those experiments before and that it hadn t had an impact on sign ups   he says   To resolve that situation  someone has to make the decision to deploy time and headcount to do the test or not  Either way  someone will think you re making a bad decision  Visionary PMs will say you re too data driven and not being grounded in the bigger goal and data driven PMs will say it s a waste of time  Universal A B testing solves this  as no such decision has to be made  Instead  there s an understanding that any idea from a trusted team will be tested in a lightweight way  The results   rather than a single arbiter   decide if ideas should be pursued further    In this case  Shmukler asked the team to work together to put the theory to the test to gauge impact   The visionary PMs wrote the new content for the homepage and the data driven PMs took point on structuring the experiment  It took a day or two to implement and we collected data over a month   he says   All the tests  results are public on a dashboard that the entire company can access  Both camps are happy  the data driven PMs got to use data to experiment and determine results  and the visionary PMs got their idea out there  In this specific case  the new homepage language did not have a significant impact  There were no hard feelings  The visionary PMs recalibrated and redirected their energy to new  different ideas    Universal A B testing also allows Shmukler to say  yes  to multiple product ideas   with the only restriction being that they need to tested   It s a great way to implement a Type 2 decision making process and prevent the team from getting bogged down with a Type 1 approach unnecessarily   says Shmukler   It not only helps the team steer clear of the  one size fits all  trap that Bezos cites  but it increases experimentation  autonomy and learning throughout the organization  Most critically  it fosters goodwill among smart   but very different   PMs who want to try out their ideas    Regardless of which idea wins  there isn t a lot of conflict among PMs because the results come from an authoritative test  not an authority  The key is that it s done quickly and transparently to everyone  Here s a summary of this method s benefits and challenges   Benefits  Autonomy    One thing I found pretty valuable in running things this way is everyone basically gets their ideas to come to life  regardless of rank or tenure  As a manager  I am less a dictator and more an arbiter  stepping in only to help refine future ideas    Lower risk    Once there s a tool to quickly run tests  the company bears very little cost to experimentation but the act of doing experiments reduces overall risk  If an idea is a bad   or potentially damaging   one  we ll know quickly and not move ahead with the idea  If it s a good idea  there may be benefits that would not have been discovered without testing    Employee engagement    This approach keeps product managers on my team a lot happier because they know there s a channel to get their ideas out there and to prove that their ideas work  They ve told me they learn and develop at a faster clip because they can try a bunch of ideas and learn from the results    Changes actions  not styles   This system allows data driven PMs to evaluate ideas rationally and lets visionary PMs more quickly hone their instinct by literally  experiencing  more of their ideas faster  It embraces   not alters   their styles    Challenges  User sample size    At the very beginning  startups need to operate more in visionary mode  To run this system effectively  you ll need a bit of traction and some user base  There s no airtight rule of thumb  but if you re trying to test around a particular action that your users take   signing up  clicking a button or sharing a post   you probably want hundreds of people taking that action a week at a minimum  Ideally  you re testing in the thousands for faster results and to run multiple tests concurrently  Of course  companies that throw millions of users into an experiment have significant advantage in leveraging these approaches    Legacy decision making methods    In one of my jobs  my company didn t know about A B testing  Instead they required each person to prepare a detailed financial and impact analysis on how each idea would move the needle  To me  that s a surefire way to kill ideas and manufacture models with gobs of assumptions  But some companies still take this approach    A culture of metrics  but not around experimentation   I was at one company that was very good at monitoring its business metrics every day  but didn t do A B testing or small experimentation  It put its faith in those high level metrics  but when things went south  it couldn t isolate the problem quickly  One time  it had launched seven releases   all without an A B test   when a major issue surfaced  The team had to roll back most of the changes in order to A B test and find the issue    Get ahead of complaints from crestfallen colleagues about squashed ideas  It s so easy to test  Soon you ll have a dozen A B tests running   How to Implement and Scale A B Testing  Through the years  Shmukler has heard all the objections around implementing A B tests not just for product development  but as a management tool   For growth and later stage companies  it nearly always takes a crisis  At scale  people get stuck in their ways and it s hard to convince them otherwise merely on theoretical merit   he says   But for startups  the protest is always around time and cost  I ve used this system at a startup when it was 20 employees and barely retrofitted it as it grew past 100 people    Shmukler has worked at both large companies and startups  and has found that  regardless of size  this testing framework produces very little friction to launching an experiment  because its not a drag on time or cost  Here s how   Invest in a lightweight experimentation tool  In Shmukler experience  it takes just a handful of engineers to do the initial build of a tool and dashboard to run  monitor and evaluate A B tests   Most folks who ve never done this think the resources required are more than they actually are  With less than a month of work  startups can get A B tests practically automated  PMs can get the results quickly and without a lot of work  If they want to dig into data  they can  but they don t have to since most of the core evaluation is being done for them   says Shmukler   If you don t have the engineering bandwidth or chops  there are many tools available   If you re using a tool like Optimizely  you probably don t even have to write any code to enable A B testing   says Shmukler   It takes care of it all for you  the testing  the data gathering and the evaluation  Of course  you have to build the different features  but that must be done in any model  If you re using an A B testing tool  it s almost no additional work for you  There may be some cost  but usually there are freemium options for early stage startups  It s a worthy investment when you consider that it ll help you make sound product decisions and align your team  In the long run  rolling out releases blindly will always take longer    If you re still not convinced  Shmukler intently breaks it down further   Really  what you re doing is choosing a user  flipping a coin and putting them in either the A or B group  Depending on that association  you ll show users a different page or send them to a different flow   he says   At the start  you can quickly develop something simple  Just get the experimentation going  Continue to collect and test data   for all that s happening with your product    Reduce the barrier to test to one decision  Making A B tests a universal practice means making each experiment an easy  instant choice   The friction to launch a test should be as low as possible  Essentially  you want the only hurdle to be just the decision to test at all  After that  the system will essentially run and evaluate it all   says Shmukler   It comes down to building great frameworks  For engineers  you need a framework where launching a test is incredibly easy   maybe it s a couple of lines of code to create a new experiment  For everyone else  this is where you need  essentially  an internal dashboard that automatically evaluates the test    Shmukler recommends that product teams use dashboards that automatically recognize when new experiments are launched  He describes one that he s built in the past   It lets you pick a goal for that experiment  Then  based on that goal  it shows all the metrics that you should be looking at for that experiment   says Shmukler   Then it immediately evaluates the data and gives a simple red or green signal to indicate if the change should roll out or roll back  If it doesn t have enough data  it gives a neutral indication to recommend that the test should keep running  That s the level of simplicity and automation you want  You shouldn t feel like you re paying a price at each step to experiment    Untangle interactions among tests  As with any system  it s prone to break at scale   At LinkedIn  we eventually noted interactions between experiments  For example  tests on a sign up flow and a profile page could color the other s results  This becomes hard to untangle   says Shmukler   Use statistical methods to alert your dashboard if there s a problematic interaction  It should allow you to choose to shut down one of the experiments and evaluate your remaining test  If you anticipate an issue before testing  consider using different selection criteria to route specific users into experiments to avoid those kinds of interactions altogether    At LinkedIn  Shmukler and his team used sophisticated selection criteria to avoid interaction between experiments   We d select from users that weren t in other experiments or sub segment them to made sure that a segment was only in a single experiment at a time  You end up having to build more complex processes for selecting someone into an experiment then evaluating the experiment over time   he says   As the complexity increases with concurrent experimentation  dashboards must become easier to interpret   The best dashboards are the simple ones   where it gives an indicative green or a red signal   but you still must read the results  You may want to run a red experiment for longer to gather and interpret more data   says Shmukler   But as you scale  you want less and less of that interpretation happening because you re going to distribute this information across a much larger team  The likelihood that everyone will extract the same interpretation decreases  So  fool proof your dashboard so that it gives anyone the full   and same   picture    Understand the broad impact of your experiment  Both visionary and data driven PMs will put increasing faith in A B testing as the tool itself sharpens   Most A B tests tell you whether the experiment is a good idea or a bad idea  The next step is to develop a dashboard that shows the impact of the experiments on the key metrics for the entire product or the entire company   says Shmukler   Tests don t always make that obvious  For example  you may optimize some small part of the sign up flow and see a 10  lift in completion of that step  but that doesn t necessarily translate to 10  more sign ups because not every user may encounter that step    Deepening the capability of your testing software to translate an experimental result into top level impact should be on every product team s A B testing roadmap   It ll helps you understand what to expect in top level numbers as a unit and organization  Also  it helps people select experiments a little better by rooting them in the context of the company  It s important to know if it s a 10  win for the entire product or just for a small corner of the product  By reflecting the impact of an experiment on business metrics  the hope is to build each team s awareness of these experiments  making them more meaningful to run    Tying it All Together  Many startups understand the value of A B testing as a tool to grow a product  but it s also a built in mechanism to better develop a product team  Universal A B testing not only resolves the tension between different product manager types  but it also does so while giving them autonomy and acknowledgement of their personal style  Even if startups face challenges with small sample sizes and alternative systems  investing in a lightweight experimentation tool is always worth it  As the company and number of experiments grow  so must the testing software   and it must employ simpler signals so any employee can understand the big picture    A B testing does more than elevate products faster   it does the same for teams  Using universal A B testing as a management tool sends a message to PMs of all stripes  intelligently tested ideas will rise to the top  regardless of who thinks of them   says Shmukler   They say that to go fast  go alone  And to go far  go together  This system allows you to be both ambitious and autonomous  Most people want to be both in their work   and everyone wants to see their ideas come to life,"[1384 190 1061 826 901 742 17 1093 938 1241 39]"
1385,training-dataset/engineering/1229.txt,engineering,Scaling Engineering Teams   Seth Blank   MediumScaling Engineering Teams  I recently gave a talk on  Scaling the Team and Tech  at Blue Run Venture s CTO Summit  I m posting it publicly to start a larger conversation   Have you ever watched your best engineer turn into your weakest link  Have you seen key team members get constantly sidetracked by critical but disruptive tasks  Have you ever worked with a team that s kicking ass only to hear from other departments that the team s ability to get stuff done is being questioned   Every engineering manager has felt some of these  For the conference  I was asked to explicitly address questions ranging from performance tuning to effective management practices at scale  balancing quality vs expedience  and managing team growth   What all of these questions have in common is simple  You re overwhelmed because everything appears to be on fire  or you re worried everything might be on fire  or you re being told while pointing at the fire that  that s not fire   In short  someone in the company is in this situation   It s not fine  But it might not be fire  either   And you want to put that fire out so your team can execute   There s good   even great   news here  and the goal of this post is to help you understand how to locate and manage the sources of these fires   Without getting into customer experience yet  this is my definition of engineering excellence  If you  hire  train  and mentor your staff well  foster open and honest conversations  provide tools and clear measurements of success  constantly and consistently set expectations  your team will succeed   At this point  you re almost certainly saying  We re doing all this  so clearly you re wrong    There aren t easy solutions   Here s the truth about scaling engineering teams  there are no simple answers  I ve watched hundreds of teams solve scaling problems in completely opposite ways  Scaling solutions are the opposite of one size fits all   So what the hell am I here talking about if I can t solve your scaling problems for you  If I can t give you specific answers to all your questions   Our goal today is to take knowledge you already have about scaling and package it in such a way that it becomes actionable  My hope is to give you frameworks for  talking about scaling issues   isolating the hard problems   having meaningful conversations around scale   So let s look back at that fire and our definition of engineering excellence   All our questions   all our fears about fires raging   are actually symptoms of inflection points that were missed  generally for the best of reasons   during the growth of the team  And the problem most managers have is that they cannot consistently and constantly set expectations around scale and team growth if they don t understand what this growth looks like and how operations change over time   That s right  the cause of our issues are communication problems around team inflection points  not haphazard fires that need to be doused  So let s talk about   TEAM INFLECTION POINTS  Here s the thing about the first phase of a team  people know what s going on through osmosis  There s no policy  there s no procedure  there s no day to day management  There s a north star and people operating in different swim lanes doing their best to figure out what it takes to get there  But everyone is on the same team with the same metric for success   At this phase  the most important thing engineers can do to forward the business is just ship code  learn  course correct  and repeat   This is the  making mistakes  phase  And it s where you ll ship technical debt as product because that is a necessary feature of moving fast while not quite knowing where you re going or how to get there yet   Technically  you re most likely to have a single app with a single datastore   The people who thrive in Phase 1 are prototypers and other entrepreneurial types who need very little direction or structure and are comfortable breaking things   Since this phase is almost always pre product market fit  there s very little downside to getting things wrong  especially if you do it fast and learn from it  But also  because it s pre product market fit  there is no definition of quality yet  If you don t know who the customer is or what their problems really are  what is quality  How do you define it  This is where more senior engineers trip themselves up  because they want to build quality code now before that actually has a meaning  We ll come back to this later   And finally  this is the phase where you hire for culture fit  When everyone s in a boat together  you want people who agree that it s a good boat  that it s pointed in the right direction  and won t ask pesky questions like  shouldn t we plug that leak right now instead of paddling so hard    If you haven t heard these I m interested in moving into your cave   Now it gets ugly  I bet you ve walked face first into some of the above questions before  or overhead them being discussed   What s happened  Where did these disruptive questions come from  What s going on   That s right   your team is no longer one team  Some people are now heads down in other worlds and not picking up the day to day through osmosis any longer   The red circles on the slide represent people moving off the original team into more isolated realms   You now need more formal lines of communication   daily standups  weekly status updates  weekly team debriefing  whatever is right for your org   But the point is  these questions are getting asked because people no longer have the information they used to  because of healthy growth and becoming more focused    and now it s your job to push that knowledge to them at the right time in a form they ll consume   Now the engineering team s starting to coalesce  and the business has started to more fully understand who its customers are and how to serve them   The company is now more focused on product and specific features to fill customer needs  You probably still have a single backend data store  but you might now have an app or two interfacing with it and maybe a cache or search service to get around inefficient queries you never expected to need when you first designed your data structures and schemas   And with a clear customer  now you can define quality  But mistakes start having consequences that the engineering team is not the first to hear about  Thankfully  you can finally start to tackle technical debt that creates blockers against your roadmap   You ll quickly notice that a very different type of engineer starts to thrive now  Those that can think from the customer s point of view  those that can communicate with others in your organization and without  they start to add more value than the raw prototypers  who still have a vast playground of new features    But the critical function at this point of your most valuable engineers is knowing the line between when to move fast and break things and when to go slow and get them right  This isn t the strength of a prototyper  nor should it be   Now is when you start hiring for culture add  Different points of view  different experiences  different professional backgrounds  all of these make your team stronger now and fill strategic blind spots that you willing accepted to move fast in phase 1   As you start to bust out of phase 2  you ll start to hear the phrases above  I m certain you ve heard some   if not all   of these   So  why are you hearing them   As you re realizing by now  communication is breaking down again  Why  Because phase 2 started with a single team  engineering   and scattered individual contributors in specific roles  So you built communication between individuals and your team   But now other teams are forming  The red arrows in this slide show individual contributors grouping together naturally  A growth marketer and a content marketer have joined up to form a marketing department and are about to hire someone for lead gen  The CEO is underwater with customer requests so hires a few account executives  Whatever the reason is   at the outset of phase 2 you had a team tasked for pushing information to individuals  and now you need to relearn to communicate between your team and other teams   For instance  you probably have one person on your team who built and really understands your core data system  Let s call her Mary  Data issues probably flowed to her naturally  and as you entered Phase 2 you almost certainly told people to just speak to Mary as needed  This was good and efficient  But now it s not a single person sending infrequent and specific tasks  it s whole teams of people and Mary can t juggle the inbound requests and her actual day to day commitments   So you need to rebuild this process  Maybe it s a bug board that you rotate engineers through  Maybe it s training other engineers on how to fix data issues so you can spread the load  Or maybe it s building tooling and automation so other teams can fix issues themselves  Regardless  new process is needed at this point because what was fine and good at the beginning of this phase doesn t scale into the next phase   Another tricky situation that can happen at this point is represented by the red dot on the slide   a new engineering manager or technical lead joining the team from the outside  This is good and healthy  but the tricky bit is that this type of person tends to join just as the phase transition begins  so everything they learn about how to communicate on day 1 will be different from how they need to communicate a short while later   But the biggest problem with the transition from Phase 2 to Phase 3 is one of trust  Up until this point  trust in the organization was between the engineering team  or specific individuals in engineering like Mary  and individual contributors  Trust like this does not scale to teams   And that s why we get the concerns voiced in the slides   people trusted individuals  but are unable to transfer that trust to the team as a whole   Trust for other teams must be rebuilt from scratch by building trust in the processes of those teams   I trust Sally in Sales  is fundamentally different than  I trust Sales  or  I believe the entire Sales team is doing what I believe to be right   Where you need to end up is  We trust how Sales makes decisions because we make decisions the same way  or  We trust how Sales operates because we understand their process and have visibility into it    At Phase 3 you ve moved from a collection of individuals to a collection of teams  Communication has become a push and pull of information between them  Now you re firing on multiple cylinders  might have a suite of products with competing KPIs and differing incentives for different teams  and your technology is starting to get complex as you likely now have a suite of apps and data   Now that there are actually teams interacting with other teams  those who thrived in Phases 1 and 2 start getting replaced as key players by more methodical engineers  This is where engineering velocity starts to feel like it s slowing down because you re trading speed for quality   but what you gain is long term stability and far fewer hours and sleepless nights spent fighting fires   And you start to hear a new phrase that was once a warning sign of lack of culture fit    that s not my job   This used to be the opposite of what you wanted to hear from anyone  but now it means  I ve got my swim lane  and you ve asked for something outside it   This means you ve hired people with focus who are actually focusing  This is good  But hearing it the first time can be quite the jolt   This is also the phase where prototypers start to suffer  Everything they love doing now can cause concerns amongst the more stability minded engineers  There s still room for a few prototypers  especially in new product or feature development or moonshot side projects  But if you had 5 10 by the end of Phase 2  now you probably only need 2 or 3  There s a morale landmine here if their careers are not handled carefully   And finally  this is where you start hiring for domain expertise  As your customers  needs become much clearer and your technology specializes  you need to bring in staff with a deep understanding of the technical domain at play  and cultural concerns take a back seat except as a last pass if you re having trouble choosing between otherwise equally qualified candidates  hint  break the tie on culture add  not culture fit    On the flip side  at this phase it also becomes easier to hire specialists and consultants for one off projects instead of bringing on a full time employee  Sometimes it s far cheaper to pay a consultant for one specific project and have them train your entire team in the process   Problems abound as you start to push the boundaries of phase 3  I don t know any larger company that doesn t have at least some of these concerns echoed from time to time   So why do these concerns come up now  as we start to break out of Phase 3   Because all your teams were part of one group  but now you have multiple groups emerging  Within a group the teams may not need to relearn to communicate with one another  but outside the group we go through another phase transition where the groups need to relearn how to communicate with other groups and individual teams   The red arrows and dotted lines in this slide show teams expanding  teams being broken up into multiple teams  individual contributors wanting to try their hands on different teams  like an early engineer wanting to take a stab as a product manager   and new managers joining or being promoted   As these moves happen  communication must be relearned and rebuilt amongst everyone   This is also the point where technical leads who are the de facto managers of engineering teams start to have problems  At this point  communication   not technical excellence   is the critical value of an engineering manager  And as organizational complexity rises  the leader who can communicate between groups  champion her teams  needs and clear their roadblocks  is the leader set up for success  Most technical leads chose a lead role over a manager role because they cared more about the tech  but at this phase that gets in their way unless paired with a strong engineering manager   This is also where many companies make a critical mistake for the above reason   they try to hire engineering managers who are also individual contributors because  the team won t respect someone who s not shipping code   Through Phase 3  a technical lead who also sort of manages is fine because the most important output of the team is code  But now the team needs someone who will protect them from all the wasteful efforts that concerns like  we can t ship on time  cause  To thrive  the team needs someone focused on communicating to others externally and improving process internally  hey  maybe you really do need to rebuild your product development process and build out a product management group   but that should be done deliberately  not reactively   Engineering respect now needs to come from successful championing of the team within the company  not code shipped   We ll only spend a moment talking about Phase 4  Simply put  as workers are no longer in the same office or there are more people than is easy to keep in touch with  additional degrees of communication are needed to make sure everyone s on the same page and doesn t feel isolated   Stack Overflow manages the best remote first culture I ve ever seen  And they do it with the policy of  if one person s remote   everyone s remote   This simply means if you re in a video chat with one remote person  you never get a conference room full of people chatting with that one person  everyone joins the chat individually which creates the feeling of a level playing field   This is also the phase where you start to see a more robust executive team coming about  and some software engineers really focusing on systems architecture in a way that s not been needed before   There are many other phases an organization can transition through that cause communications to need to be rebuilt  Also  some phases  like when a new group is built out under a general manager  might start going through the phases from scratch  At this point why these phase changes happen and what they could look like should be easy enough to walk through on your own   Organizations ultimately take on many different shapes and sizes  but they all evolve as solutions to communication issues   By now  you re probably thinking   That was a lot of information  But there s a really really hard part to all of this  How do we actually manage these inflection points   Firstly  you need to recognize that you re in an inflection point  I am not aware of any consistent indicators   team size  funding amount  revenue  etc    that correlate to inflection points except the warning signs we worked through   And as a corollary  if you re not seeing the warning signs  you probably don t need to worry about inflection points  This is shockingly important  The warning signs show when you ve failed to manage an inflection point and rebuild communication  But if you re not seeing warning signs  your team probably fixed the communication on their own whether they were aware of it or not   Secondly  managing an inflection point does not mean accepting that you ll be moving from one phase to another  It could mean intentionally holding your company at one phase because you prefer how you operate there  And as long as you understand the tradeoffs this creates and do it deliberately  there s nothing wrong with this   But managing inflection points and rebuilding communication is hard  Why   Let me answer you by inviting you to hold your breath for 30 seconds   Hold your breath  I said hold it   You probably didn t even try  Right  Or did it for a few seconds and then moved on  Yeah  that s what I thought   But here s the thing  not holding your breath was normal and human  Protecting the status quo is normal and human  To your team  the way it s communicating now is the status quo  even if it s starting to get frustrating   Telling your team  change everything about how you work and communicate now  is the same as me asking you to  hold your breath a little longer   It s not about right and wrong  It s not about obstinance towards what s best for the team or the business  It s not about resisting authority  It s about human nature   Managing inflection points is about getting people to do unnatural things   So I m going to give you a tool that I find works surprisingly well with engineers  Talk about the space shuttle   To get a rocket ship from Earth to Mars requires a fundamentally different engine and source of fuel at different stages  What you need to get from Earth to Low Earth Orbit is very different than what you need to get from Low Earth Orbit to Mars   And yes  you can dive even deeper here into changing orbits  landing on Mars  etc  And yes  I realize the shuttle doesn t go to Mars  And I also realize the shuttle program is over  Sue me    The point is  how things were done before was good and right and necessary  But now  things have changed  and a new engine and source of fuel is needed  Not to get rid of what you built  but so we can build what s next   Using the framework of the Phase changes we ve gone through  you should be able to have conversations with your team around how the organization is changing and how communication needs to change as a result  Now you can have the hard conversations with your team around changing direction   The key thing here is that you should always be aware of who thrives in your current and next phases of growth  so that you can hire people into situations where they re set up to succeed well into the future  The obvious problem with this is in Phase 1 when you hire prototypers because you can t guarantee there will ever be a future phase   But if you treat your people well  manage their careers  hey  maybe some of those prototypers would make great product managers or UX researchers   and set expectations for growth  you can set people up for success and avoid morale landmines  It s far better to give an early prototyper who no longer has a role they can excel in a great severance package and a glowing recommendation than let them stick around and be a thorn in the side of your new slow and steady engineering team   If your team trusts you because you listen to and trust them  promote and train your high achievers  and re engage people over your core values and mission  you can change direction far more fluidly   And I really mean this  The warning signs we ve talked about are wrenches being thrown that can destroy the effectiveness and morale of an engineering team  But you can catch those wrenches in midair if you know what to look for  And if you focus on fixing the communication issues that arise as your team grows  then these wrenches don t get thrown in the first place  The result is that your team can focus on doing what they do best  building great tech and figuring out how to scale it effectively   I highly recommend the following books for grappling with many different angles of the topics covered in this post that go into far more depth than I ever could   Thank you  I d love your feedback,"[1385 663 17 363 39 1241 315 694 938 76 1061]"
1387,training-dataset/product/616.txt,product,Building Products   The Year of the Looking Glass   MediumBuilding Products  I recently gave a talk at TNW Europe about a framework we use at Facebook to help us focus our product development process  Working on that talk got me thinking about the many other lessons I ve internalized over the years about what it takes to build great products   This list is not complete nor certain  If there were some perfect step by step instruction manual out there  Step 1  Start with inspiration  Step 2      Step 3  Profit    then we d shell out good money for it and then pat ourselves on the back while watching amazing new products bloom around us like flowers fields in May   The journey is 1  finished  Let s keep trekking and learning   On Framing  A product succeeds because it solves a problem for people  This sounds very basic  but it is the single most important thing to understand about building good products  The first step in building something new is understanding what problem you want to solve  and for whom  This should be crystal clear before you start thinking about any solutions  The second question you should ask yourself is  why is this particular problem worth solving   If the audience you are building for is narrowly defined  and one that you are a part of   then you may be able to rely on your intuition to guide your product decision making  If not  then you should rely on research and data to inform your decisions  If you are a start up founder  your path will be easier if you go after a problem for a narrowly defined audience  and then expand to broader audiences after you have some initial traction  The problem you re trying to solve should be easy to communicate in a sentence or two and resonate with someone from your target audience  If not  consider that a big red flag   Execution  Good execution is about getting to believable conclusions in the shortest amount of time possible  Bad execution is when you try something that fails and a  you can t really draw lessons out of that failure that would apply to a future project  because you don t know why it failed  or b  it took you a year to learn a particular lesson when a smarter path would have let you learn the same thing in 3 months  What typically separates successful and unsuccessful teams is not whether they do things that fail  this is guaranteed   but how well they can consistently execute  When exploring solutions for a particular problem  go broad before going deep  Brainstorm 10  20  50 solutions for the problem before getting into the mindset of picking a  winner   The first 5 ideas will be the obvious ones  Creativity happens when you start to explore the 11th  20th  or 50th idea  If you re presenting a product plan and someone asks  have you considered trying X instead   and your answer is  No   that is a red flag that your exploration process was not rigorous enough  Use empirical evidence to help you narrow down the best idea s  out of the ones you brainstormed   For instance  pick the top N favorites from the team  design or prototype those out in higher fidelity  and put them in front of people to gauge their reactions   Once you ve figured out the particular solution you want to execute towards  frame it in terms of a hypothesis   what are you assuming will happen if you build this   e g   The problem we want to solve is ensuring that every city resident knows what local events are going on every weekend  Our hypotheses is that we can reach X  of residents through an e mail digest    You should constantly be looking for ways to short circuit vetting your hypothesis  Can you run your idea by some people on the street and see if it s understandable  Can you run a survey targeted to your audience and gauge whether enough people are interested enough in the idea  Can you quickly build a version that gets you a clear conclusion  even if it s not as complete as the vision you have in your head  Once you have clear indication of positive signal on your hypothesis  don t assume you need to rush to ship whatever you tested right away  as you may have taken some shortcuts to get a signal faster   Instead  make a separate  intentional decision about what the bar is for full launch when it comes to polish and additional functionality  What s acceptable to test and what s acceptable to ship broadly should have different criteria  If you re embarking on a big project involving a lot of different changes  see if you can split up the changes into smaller  independently testable milestones  Don t fall into the trap where you make five changes  get a bad result  and now have to figure out which change s  were responsible  Do a team post mortem after every project  regardless of success or failure  What product lessons did you take away  What team lessons  What would you do differently in the future  Then  share these learnings with the whole company   Measuring success  How you measure success is critical to the long term results of your team because it s the thing that people rally around  Make sure to give this exercise the proper time and attention  more  even  than you would give to thinking about  how should we do this     Define what success metrics look like for your product before you launch  Otherwise  if you try to interpret results after they start coming in  confirmation bias will lead to a non objective reading  For each success metric  come up with a good counter metric that would convince you that you re not simply plugging one hole with another   For example  a common counter metric for measuring an increase in production is also measuring the quality of each thing produced   If an important metric moves unexpectedly  whether positively or negatively  your first question should be  why   Don t try to develop strategies to boost counteract what s going on before you fully understand the why  Use the Crystal Ball technique to help you pick the right ways to measure success  Ask yourself  If I could know anything in the world about how people are using my product  what would I want to know to in order to tell me whether or not my product was successful    Typically the answer people come up with is not  of clicks on a button but something more abstract like How many people who used my product received value from it   From that answer  work backwards to get to a measurable metric that best approximates what you re trying to get at  Your goals should always be set with the best information you currently have  If you were working towards a predefined goal and then discover new information that changes your understanding of the world  consider whether you should adjust your goals based on that new information  If you work on a team where you don t understand or agree with how the team measures success  bring that up right away  It s better to hash through these things earlier rather than later given how fundamental this alignment is to productivity and good execution  If you find yourself constantly getting into debates with your teammates about product direction  the root cause is probably a disagreement in the way you re measuring success  See if you can articulate your concerns in the form of a new proposal to measure success  If you are trying to figure out whether your product has product market fit  versus trying to optimize or scale   you re better off goaling on retention  how many people use your product and then love it enough to come back   rather than on engagement or   of users   Team Dynamics,"[1387 17 190 116 1093 1061 826 1030 77 708 1376]"
1411,training-dataset/product/93.txt,product,Designing Your Way to Better Team Collaboration by Alison Coward108 Flares 108 Flares    As the founder of Bracket Creative  Alison Coward spends her working life advising creative teams on how they can collaborate better  She s an experienced facilitator of workshops  so at this year s London  mtpcon she shared some practical ways to get teams to work together more productively   Many of the techniques used to run workshops can also be applied to the day to day running of a creative team  says Coward  These include techniques such as avoiding  groupthink   when everyone goes along with a bad idea  balancing introverts and extroverts so that everyone has their ideas heard  and making sure everyone stays motivated and engaged   Academic research has consistently shown  according to Coward  that it s not the individuals that make up a team but how the team works together that is critical to its success  Research from the MIT Human Dynamics Lab showed that the most successful teams communicate frequently  listen and talk in equal measure  engage in frequent informal communication and explore outside the group for ideas and information  Similarly Google has found that there is no impact from the individual talents of team members in its most successful teams  it is how they work together that makes them successful  Google found the overriding factor to make up its most successful teams was psychological safety   they trust each other and feel safe sharing opinions and ideas   We can think and design for better teamwork  says Coward  but she is doubtful whether it is possible to copy the habits and rituals from one team and apply them to another  Every team has its own individuals  quirks  products and expertise   so while we can take inspiration from the working of successful teams it s not always possible to replicate them directly   5 Key Team Habits  Coward details five areas with real life examples where she thinks successful teams can provide inspiration   1  Ways to meet  The design studio of Swedish bank Nordnet is very specific about why when and how they meet  says Coward  It conducts four types of meetings   Weekly goalfest meeting   the team gets together on a Friday to talk about what they ve achieved during the week and what they want to achieve in the next week  Goals are collected and shared   Weekly design critique   the team has specific framework for feedback so that people remain objective and keep their users in mind   Monthly pet peeves   every month the design team gets together with the bank s marketing team and talk about solving problems and the constraints and difficulties of working within a banking environment   Quarterly retrospective   as well as looking back at achievements the team looks forward at its strategy for the coming quarter  As Coward notes  it s not just the format of the meeting which is important  but also the way they are conducted  Asana for example reserves five minutes at end of every meeting to make sure that everyone knows what they need to do  Google Ventures uses a silent technique called Note and Vote when it s difficult to select an idea  and it s a technique which gives introverts the opportunity to share their ideas  Similarly  the regular Brain Trust meetings at film company Pixar are aimed at encouraging productive conflict  and directors expect to be challenged   In order for meetings to be effective  Coward suggests that they should incorporate time for individual thinking  It s also important that the difference between divergent and convergent thinking is clear   that is the difference between brainstorming for many ideas and the selection of one idea that results from this  Meetings should also create opportunities for productive conflict  says Coward  and it s important that meeting organisers keep brainstorming cycles down to a maximum of 15 minutes  Most importantly  says Coward  don t forget to follow up   we can place so much emphasis on ensuring a meeting runs successfully that we can forget to follow up afterwards   2  Sharing work and ideas  DIY is a children s app which encourages craft skills  The company founder saw that staff weren t connecting in the way that he wanted them to  Coward says that he set up a  make a compass  tradition so that every Thursday evening someone posts a picture of a compass they ve made to a blank Google slide file  People then share the compasses they ve made  places they ve been  the events they ve attended  obstacles overcome and so on  The company then goes through the slides on Friday morning   At Etsy  there is a tradition where engineers share their mistakes around the company by email  so that other people don t make the same mistake  As Coward points out  this needs an organisation with a solid support culture rather a blame culture to succeed   3  Alone time  A number of companies  says Coward  have begun to recognize how difficult it is for staff to get the time to think and get to grips with the challenges of their work and have instigated processes to enable this  Coward cited Asana as an example  which has a no meeting Wednesday rule  Some teams at Google differentiate between  manager time  and  make time  where manager time is a 30 minute slot  and make time is a half or full day  The teams are encouraged to find make time every week   4  Physical space  Brazilian tech company ContaAzul wanted to introduce more accessibility and interaction into their design area  and ended up just moving the furniture around into order to make the walls more accessible  Coward says that it led the team to post their ideas on the walls  to become more visual and ultimately to collaborate better   5  Social connection  Teams work better if they know and trust each other  At software vendor Atlassian the design team all have coffee together every Monday morning  Citing Margaret Heffernan s book Beyond Measure  Coward says that this sort of approach can have a huge impact   Don t underestimate the power of regular coffee   she says   Be specific  All the team working examples above are very specific in nature  Being this specific helps to increase the chance that the changes you wish to make will in fact happen  says Coward  Of course it s about better communication and this often requires someone to start or facilitate the change  Coward also suggests that the route to better team working should be treated as a creative design task  and as such you should iterate and review regularly  She says   Ask your team how do you do your best work  what does good teamwork look like  what do you want to achieve as a team,"[1411 503 190 1061 17 1030 391 826 955 675 912]"
1421,training-dataset/business/901.txt,business,5 of My Biggest Struggles as a First Time Founder   Kristel Kruust k   MediumTechstars Austin  August 2013  5 of My Biggest Struggles as a First Time Founder  I ve met many people who have always dreamt about becoming entrepreneurs   it either  ran  in the family or they just naturally had the urge to change the world or be their own boss   For me it was the total opposite   becoming an entrepreneur and starting a company was not at all on my radar  Only one thing was for sure  I wanted to be working on something I loved  which turned out to be software testing   The notion happened quite naturally while building my career as tester  I came across some issues within the industry and couldn t find satisfactory solutions to them  The rest is history in the making since in response I started my own company   Going into the world of entrepreneurship I didn t set myself any expectations  I didn t have many insights into the life of an entrepreneur  and it turned out to be very different from what I expected it to be   From the outside  it didn t seem that hard to have a great idea and run with it  I honestly thought that a good idea was the key to success  I underestimated the importance of  everything else    I know now that having an idea is not enough  at best it s a viable seed that will sprout and bear fruits at some point   but for that to happen  there are so many variables  tribulations and work involved   These are some of my toughest challenges so far   1  Constantly doubting yourself  When I look at other founders  they always seem to have everything figured out whereas I can t help but feel like I m not doing enough  As a first time founder  I don t have past experiences to draw from and I m afraid that my peers are moving faster than me since they re able to skip some of the mistakes I inevitably make  I m a very passionate and emotional person so the pressure is always on   When something doesn t go the way you expected it to go  you start thinking about all the things you could have done differently  There are so many things to figure out  so many decisions that can t be undone  it feels like a constant uphill battle   The other day I met a successful entrepreneur who seemed to have unlocked the key to succeed in Silicon Valley   one of his top principles was  Do Your Best    I can t agree more  Even though I may have my doubts and feel uncertain at times  the reality is I m doing everything in my power every day to make the Testlio team succeed   I d rather try and do my best  than not try at all and let regret rule my life   2  Hiring the right people  Everything starts with the team   it s crucial to have team members who support you and each other through thick and thin  At the beginning  it s relatively easy  You start out with friends  or friends of friends  You re a small tightknit unit   But then the company s needs to grow and you have to hire more people  Making the wrong decision is not only stressful but also risky for the development of the company  I know this first hand  having made some hiring decisions that didn t work out  But how can you know if you are hiring the right people  when you have never hired so many before  At the end of the day  you can only hope that you ve made the right decisions and roll with it   Your people define the culture of your company and culture is something that is easy to see and everyone will look into  but always remember that everything starts with you and it s important to be somebody that brings out the best in people    A culture is strong when people work with each other for each other  A culture is weak when people work against each other for themselves     Simon Sinek   3  Trying to make everybody happy  Testlio is not a one woman show  Many people are involved and are invested in it  In essence being responsible for their wellbeing  I want all of them to succeed  Making them happy is the right thing to do  But the truth is  it s not humanly possible to appease everyone  Sometimes it s not all peaches and cream  You may have to say  no  or be the bearer of bad news  Some people might just not like your style  This is life  So I know I have to let go of this mindset   I can t make everyone happy  It s incredibly hard and I still face this challenge every day  but there s just no other way  I can only try to be the best version of myself and hope that my values resonate with the people around me   4  Not knowing what type of leader you are  Being responsible for a team of people  you have to be able to lead them successfully otherwise everything can easily crumble to pieces  Above all  you want your team  investors and community to feel confident about your leadership skills  So not only do you have to figure out what type of example you want to set but also what type of leader your team needs you to be  Are you going to be strict and commanding or people oriented and friendly  and everything else in between  it s a real challenge   On one hand  you have to be consistent and not constantly switch your leadership style  but on the other hand  you have to remain flexible enough to adapt to the unique needs of your team as well as your surrounding environment  There s no roadmap on what to do in every situation  so all that is left is to trust your guts and take action   I think it s incredibly important to keep hiring people smarter than you and keep listening to others around you  Of course  you shouldn t take every single word of theirs as gold and always act on it  but you should definitely keep learning from their successes and failures and just  keep going   5  Trusting your gut  Believe me  in between figuring out everything within your company  from finding a clear product market fit to setting clear vision and direction for the company  you will find yourself in situations where you feel like you are torn apart  People in your team will have different opinions on pricing models or service offerings and there will be tons of time and resources spent on puzzling out what to do next  And you will follow the path of debate  because during the early days  when it comes to making decisions  you will not have enough confidence in yourself to say no  So you keep doubting in yourself  which leads us back to  1,"[1421 17 19 120 76 1061 1154 363 1146 304 973]"
